import { ClassType } from "type-graphql";
import * as tslib from "tslib";
import * as crudResolvers from "./resolvers/crud/resolvers-crud.index";
import * as argsTypes from "./resolvers/crud/args.index";
import * as actionResolvers from "./resolvers/crud/resolvers-actions.index";
import * as relationResolvers from "./resolvers/relations/resolvers.index";
import * as models from "./models";
import * as outputTypes from "./resolvers/outputs";
import * as inputTypes from "./resolvers/inputs";

export type MethodDecoratorOverrideFn = (decorators: MethodDecorator[]) => MethodDecorator[];

const crudResolversMap = {
  GeneralMedicalRecords: crudResolvers.GeneralMedicalRecordsCrudResolver,
  Analysis_results: crudResolvers.Analysis_resultsCrudResolver,
  Authorizations: crudResolvers.AuthorizationsCrudResolver,
  Certificates: crudResolvers.CertificatesCrudResolver,
  Cliniques: crudResolvers.CliniquesCrudResolver,
  Consultations: crudResolvers.ConsultationsCrudResolver,
  Ctscan_results: crudResolvers.Ctscan_resultsCrudResolver,
  Doctors: crudResolvers.DoctorsCrudResolver,
  Instituts_medicaux: crudResolvers.Instituts_medicauxCrudResolver,
  Lab_attachments: crudResolvers.Lab_attachmentsCrudResolver,
  Lab_documents: crudResolvers.Lab_documentsCrudResolver,
  Lab_requests: crudResolvers.Lab_requestsCrudResolver,
  Lab_results: crudResolvers.Lab_resultsCrudResolver,
  Laboratories: crudResolvers.LaboratoriesCrudResolver,
  Medications: crudResolvers.MedicationsCrudResolver,
  Patients: crudResolvers.PatientsCrudResolver,
  Pharmacies: crudResolvers.PharmaciesCrudResolver,
  Prescriptions: crudResolvers.PrescriptionsCrudResolver,
  Rdv_requests: crudResolvers.Rdv_requestsCrudResolver,
  Rdvs: crudResolvers.RdvsCrudResolver,
  Users: crudResolvers.UsersCrudResolver,
  Xray_results: crudResolvers.Xray_resultsCrudResolver
};
const actionResolversMap = {
  GeneralMedicalRecords: {
    aggregateGeneralMedicalRecords: actionResolvers.AggregateGeneralMedicalRecordsResolver,
    createManyGeneralMedicalRecords: actionResolvers.CreateManyGeneralMedicalRecordsResolver,
    createManyAndReturnGeneralMedicalRecords: actionResolvers.CreateManyAndReturnGeneralMedicalRecordsResolver,
    createOneGeneralMedicalRecords: actionResolvers.CreateOneGeneralMedicalRecordsResolver,
    deleteManyGeneralMedicalRecords: actionResolvers.DeleteManyGeneralMedicalRecordsResolver,
    deleteOneGeneralMedicalRecords: actionResolvers.DeleteOneGeneralMedicalRecordsResolver,
    findFirstGeneralMedicalRecords: actionResolvers.FindFirstGeneralMedicalRecordsResolver,
    findFirstGeneralMedicalRecordsOrThrow: actionResolvers.FindFirstGeneralMedicalRecordsOrThrowResolver,
    findManyGeneralMedicalRecords: actionResolvers.FindManyGeneralMedicalRecordsResolver,
    findUniqueGeneralMedicalRecords: actionResolvers.FindUniqueGeneralMedicalRecordsResolver,
    findUniqueGeneralMedicalRecordsOrThrow: actionResolvers.FindUniqueGeneralMedicalRecordsOrThrowResolver,
    groupByGeneralMedicalRecords: actionResolvers.GroupByGeneralMedicalRecordsResolver,
    updateManyGeneralMedicalRecords: actionResolvers.UpdateManyGeneralMedicalRecordsResolver,
    updateOneGeneralMedicalRecords: actionResolvers.UpdateOneGeneralMedicalRecordsResolver,
    upsertOneGeneralMedicalRecords: actionResolvers.UpsertOneGeneralMedicalRecordsResolver
  },
  Analysis_results: {
    aggregateAnalysis_results: actionResolvers.AggregateAnalysis_resultsResolver,
    createManyAnalysis_results: actionResolvers.CreateManyAnalysis_resultsResolver,
    createManyAndReturnAnalysis_results: actionResolvers.CreateManyAndReturnAnalysis_resultsResolver,
    createOneAnalysis_results: actionResolvers.CreateOneAnalysis_resultsResolver,
    deleteManyAnalysis_results: actionResolvers.DeleteManyAnalysis_resultsResolver,
    deleteOneAnalysis_results: actionResolvers.DeleteOneAnalysis_resultsResolver,
    findFirstAnalysis_results: actionResolvers.FindFirstAnalysis_resultsResolver,
    findFirstAnalysis_resultsOrThrow: actionResolvers.FindFirstAnalysis_resultsOrThrowResolver,
    findManyAnalysis_results: actionResolvers.FindManyAnalysis_resultsResolver,
    findUniqueAnalysis_results: actionResolvers.FindUniqueAnalysis_resultsResolver,
    findUniqueAnalysis_resultsOrThrow: actionResolvers.FindUniqueAnalysis_resultsOrThrowResolver,
    groupByAnalysis_results: actionResolvers.GroupByAnalysis_resultsResolver,
    updateManyAnalysis_results: actionResolvers.UpdateManyAnalysis_resultsResolver,
    updateOneAnalysis_results: actionResolvers.UpdateOneAnalysis_resultsResolver,
    upsertOneAnalysis_results: actionResolvers.UpsertOneAnalysis_resultsResolver
  },
  Authorizations: {
    aggregateAuthorizations: actionResolvers.AggregateAuthorizationsResolver,
    createManyAuthorizations: actionResolvers.CreateManyAuthorizationsResolver,
    createManyAndReturnAuthorizations: actionResolvers.CreateManyAndReturnAuthorizationsResolver,
    createOneAuthorizations: actionResolvers.CreateOneAuthorizationsResolver,
    deleteManyAuthorizations: actionResolvers.DeleteManyAuthorizationsResolver,
    deleteOneAuthorizations: actionResolvers.DeleteOneAuthorizationsResolver,
    findFirstAuthorizations: actionResolvers.FindFirstAuthorizationsResolver,
    findFirstAuthorizationsOrThrow: actionResolvers.FindFirstAuthorizationsOrThrowResolver,
    findManyAuthorizations: actionResolvers.FindManyAuthorizationsResolver,
    findUniqueAuthorizations: actionResolvers.FindUniqueAuthorizationsResolver,
    findUniqueAuthorizationsOrThrow: actionResolvers.FindUniqueAuthorizationsOrThrowResolver,
    groupByAuthorizations: actionResolvers.GroupByAuthorizationsResolver,
    updateManyAuthorizations: actionResolvers.UpdateManyAuthorizationsResolver,
    updateOneAuthorizations: actionResolvers.UpdateOneAuthorizationsResolver,
    upsertOneAuthorizations: actionResolvers.UpsertOneAuthorizationsResolver
  },
  Certificates: {
    aggregateCertificates: actionResolvers.AggregateCertificatesResolver,
    createManyCertificates: actionResolvers.CreateManyCertificatesResolver,
    createManyAndReturnCertificates: actionResolvers.CreateManyAndReturnCertificatesResolver,
    createOneCertificates: actionResolvers.CreateOneCertificatesResolver,
    deleteManyCertificates: actionResolvers.DeleteManyCertificatesResolver,
    deleteOneCertificates: actionResolvers.DeleteOneCertificatesResolver,
    findFirstCertificates: actionResolvers.FindFirstCertificatesResolver,
    findFirstCertificatesOrThrow: actionResolvers.FindFirstCertificatesOrThrowResolver,
    findManyCertificates: actionResolvers.FindManyCertificatesResolver,
    findUniqueCertificates: actionResolvers.FindUniqueCertificatesResolver,
    findUniqueCertificatesOrThrow: actionResolvers.FindUniqueCertificatesOrThrowResolver,
    groupByCertificates: actionResolvers.GroupByCertificatesResolver,
    updateManyCertificates: actionResolvers.UpdateManyCertificatesResolver,
    updateOneCertificates: actionResolvers.UpdateOneCertificatesResolver,
    upsertOneCertificates: actionResolvers.UpsertOneCertificatesResolver
  },
  Cliniques: {
    aggregateCliniques: actionResolvers.AggregateCliniquesResolver,
    createManyCliniques: actionResolvers.CreateManyCliniquesResolver,
    createManyAndReturnCliniques: actionResolvers.CreateManyAndReturnCliniquesResolver,
    createOneCliniques: actionResolvers.CreateOneCliniquesResolver,
    deleteManyCliniques: actionResolvers.DeleteManyCliniquesResolver,
    deleteOneCliniques: actionResolvers.DeleteOneCliniquesResolver,
    findFirstCliniques: actionResolvers.FindFirstCliniquesResolver,
    findFirstCliniquesOrThrow: actionResolvers.FindFirstCliniquesOrThrowResolver,
    findManyCliniques: actionResolvers.FindManyCliniquesResolver,
    findUniqueCliniques: actionResolvers.FindUniqueCliniquesResolver,
    findUniqueCliniquesOrThrow: actionResolvers.FindUniqueCliniquesOrThrowResolver,
    groupByCliniques: actionResolvers.GroupByCliniquesResolver,
    updateManyCliniques: actionResolvers.UpdateManyCliniquesResolver,
    updateOneCliniques: actionResolvers.UpdateOneCliniquesResolver,
    upsertOneCliniques: actionResolvers.UpsertOneCliniquesResolver
  },
  Consultations: {
    aggregateConsultations: actionResolvers.AggregateConsultationsResolver,
    createManyConsultations: actionResolvers.CreateManyConsultationsResolver,
    createManyAndReturnConsultations: actionResolvers.CreateManyAndReturnConsultationsResolver,
    createOneConsultations: actionResolvers.CreateOneConsultationsResolver,
    deleteManyConsultations: actionResolvers.DeleteManyConsultationsResolver,
    deleteOneConsultations: actionResolvers.DeleteOneConsultationsResolver,
    findFirstConsultations: actionResolvers.FindFirstConsultationsResolver,
    findFirstConsultationsOrThrow: actionResolvers.FindFirstConsultationsOrThrowResolver,
    findManyConsultations: actionResolvers.FindManyConsultationsResolver,
    findUniqueConsultations: actionResolvers.FindUniqueConsultationsResolver,
    findUniqueConsultationsOrThrow: actionResolvers.FindUniqueConsultationsOrThrowResolver,
    groupByConsultations: actionResolvers.GroupByConsultationsResolver,
    updateManyConsultations: actionResolvers.UpdateManyConsultationsResolver,
    updateOneConsultations: actionResolvers.UpdateOneConsultationsResolver,
    upsertOneConsultations: actionResolvers.UpsertOneConsultationsResolver
  },
  Ctscan_results: {
    aggregateCtscan_results: actionResolvers.AggregateCtscan_resultsResolver,
    createManyCtscan_results: actionResolvers.CreateManyCtscan_resultsResolver,
    createManyAndReturnCtscan_results: actionResolvers.CreateManyAndReturnCtscan_resultsResolver,
    createOneCtscan_results: actionResolvers.CreateOneCtscan_resultsResolver,
    deleteManyCtscan_results: actionResolvers.DeleteManyCtscan_resultsResolver,
    deleteOneCtscan_results: actionResolvers.DeleteOneCtscan_resultsResolver,
    findFirstCtscan_results: actionResolvers.FindFirstCtscan_resultsResolver,
    findFirstCtscan_resultsOrThrow: actionResolvers.FindFirstCtscan_resultsOrThrowResolver,
    findManyCtscan_results: actionResolvers.FindManyCtscan_resultsResolver,
    findUniqueCtscan_results: actionResolvers.FindUniqueCtscan_resultsResolver,
    findUniqueCtscan_resultsOrThrow: actionResolvers.FindUniqueCtscan_resultsOrThrowResolver,
    groupByCtscan_results: actionResolvers.GroupByCtscan_resultsResolver,
    updateManyCtscan_results: actionResolvers.UpdateManyCtscan_resultsResolver,
    updateOneCtscan_results: actionResolvers.UpdateOneCtscan_resultsResolver,
    upsertOneCtscan_results: actionResolvers.UpsertOneCtscan_resultsResolver
  },
  Doctors: {
    aggregateDoctors: actionResolvers.AggregateDoctorsResolver,
    createManyDoctors: actionResolvers.CreateManyDoctorsResolver,
    createManyAndReturnDoctors: actionResolvers.CreateManyAndReturnDoctorsResolver,
    createOneDoctors: actionResolvers.CreateOneDoctorsResolver,
    deleteManyDoctors: actionResolvers.DeleteManyDoctorsResolver,
    deleteOneDoctors: actionResolvers.DeleteOneDoctorsResolver,
    findFirstDoctors: actionResolvers.FindFirstDoctorsResolver,
    findFirstDoctorsOrThrow: actionResolvers.FindFirstDoctorsOrThrowResolver,
    findManyDoctors: actionResolvers.FindManyDoctorsResolver,
    findUniqueDoctors: actionResolvers.FindUniqueDoctorsResolver,
    findUniqueDoctorsOrThrow: actionResolvers.FindUniqueDoctorsOrThrowResolver,
    groupByDoctors: actionResolvers.GroupByDoctorsResolver,
    updateManyDoctors: actionResolvers.UpdateManyDoctorsResolver,
    updateOneDoctors: actionResolvers.UpdateOneDoctorsResolver,
    upsertOneDoctors: actionResolvers.UpsertOneDoctorsResolver
  },
  Instituts_medicaux: {
    aggregateInstituts_medicaux: actionResolvers.AggregateInstituts_medicauxResolver,
    createManyInstituts_medicaux: actionResolvers.CreateManyInstituts_medicauxResolver,
    createManyAndReturnInstituts_medicaux: actionResolvers.CreateManyAndReturnInstituts_medicauxResolver,
    createOneInstituts_medicaux: actionResolvers.CreateOneInstituts_medicauxResolver,
    deleteManyInstituts_medicaux: actionResolvers.DeleteManyInstituts_medicauxResolver,
    deleteOneInstituts_medicaux: actionResolvers.DeleteOneInstituts_medicauxResolver,
    findFirstInstituts_medicaux: actionResolvers.FindFirstInstituts_medicauxResolver,
    findFirstInstituts_medicauxOrThrow: actionResolvers.FindFirstInstituts_medicauxOrThrowResolver,
    instituts_medicauxes: actionResolvers.FindManyInstituts_medicauxResolver,
    instituts_medicaux: actionResolvers.FindUniqueInstituts_medicauxResolver,
    getInstituts_medicaux: actionResolvers.FindUniqueInstituts_medicauxOrThrowResolver,
    groupByInstituts_medicaux: actionResolvers.GroupByInstituts_medicauxResolver,
    updateManyInstituts_medicaux: actionResolvers.UpdateManyInstituts_medicauxResolver,
    updateOneInstituts_medicaux: actionResolvers.UpdateOneInstituts_medicauxResolver,
    upsertOneInstituts_medicaux: actionResolvers.UpsertOneInstituts_medicauxResolver
  },
  Lab_attachments: {
    aggregateLab_attachments: actionResolvers.AggregateLab_attachmentsResolver,
    createManyLab_attachments: actionResolvers.CreateManyLab_attachmentsResolver,
    createManyAndReturnLab_attachments: actionResolvers.CreateManyAndReturnLab_attachmentsResolver,
    createOneLab_attachments: actionResolvers.CreateOneLab_attachmentsResolver,
    deleteManyLab_attachments: actionResolvers.DeleteManyLab_attachmentsResolver,
    deleteOneLab_attachments: actionResolvers.DeleteOneLab_attachmentsResolver,
    findFirstLab_attachments: actionResolvers.FindFirstLab_attachmentsResolver,
    findFirstLab_attachmentsOrThrow: actionResolvers.FindFirstLab_attachmentsOrThrowResolver,
    findManyLab_attachments: actionResolvers.FindManyLab_attachmentsResolver,
    findUniqueLab_attachments: actionResolvers.FindUniqueLab_attachmentsResolver,
    findUniqueLab_attachmentsOrThrow: actionResolvers.FindUniqueLab_attachmentsOrThrowResolver,
    groupByLab_attachments: actionResolvers.GroupByLab_attachmentsResolver,
    updateManyLab_attachments: actionResolvers.UpdateManyLab_attachmentsResolver,
    updateOneLab_attachments: actionResolvers.UpdateOneLab_attachmentsResolver,
    upsertOneLab_attachments: actionResolvers.UpsertOneLab_attachmentsResolver
  },
  Lab_documents: {
    aggregateLab_documents: actionResolvers.AggregateLab_documentsResolver,
    createManyLab_documents: actionResolvers.CreateManyLab_documentsResolver,
    createManyAndReturnLab_documents: actionResolvers.CreateManyAndReturnLab_documentsResolver,
    createOneLab_documents: actionResolvers.CreateOneLab_documentsResolver,
    deleteManyLab_documents: actionResolvers.DeleteManyLab_documentsResolver,
    deleteOneLab_documents: actionResolvers.DeleteOneLab_documentsResolver,
    findFirstLab_documents: actionResolvers.FindFirstLab_documentsResolver,
    findFirstLab_documentsOrThrow: actionResolvers.FindFirstLab_documentsOrThrowResolver,
    findManyLab_documents: actionResolvers.FindManyLab_documentsResolver,
    findUniqueLab_documents: actionResolvers.FindUniqueLab_documentsResolver,
    findUniqueLab_documentsOrThrow: actionResolvers.FindUniqueLab_documentsOrThrowResolver,
    groupByLab_documents: actionResolvers.GroupByLab_documentsResolver,
    updateManyLab_documents: actionResolvers.UpdateManyLab_documentsResolver,
    updateOneLab_documents: actionResolvers.UpdateOneLab_documentsResolver,
    upsertOneLab_documents: actionResolvers.UpsertOneLab_documentsResolver
  },
  Lab_requests: {
    aggregateLab_requests: actionResolvers.AggregateLab_requestsResolver,
    createManyLab_requests: actionResolvers.CreateManyLab_requestsResolver,
    createManyAndReturnLab_requests: actionResolvers.CreateManyAndReturnLab_requestsResolver,
    createOneLab_requests: actionResolvers.CreateOneLab_requestsResolver,
    deleteManyLab_requests: actionResolvers.DeleteManyLab_requestsResolver,
    deleteOneLab_requests: actionResolvers.DeleteOneLab_requestsResolver,
    findFirstLab_requests: actionResolvers.FindFirstLab_requestsResolver,
    findFirstLab_requestsOrThrow: actionResolvers.FindFirstLab_requestsOrThrowResolver,
    findManyLab_requests: actionResolvers.FindManyLab_requestsResolver,
    findUniqueLab_requests: actionResolvers.FindUniqueLab_requestsResolver,
    findUniqueLab_requestsOrThrow: actionResolvers.FindUniqueLab_requestsOrThrowResolver,
    groupByLab_requests: actionResolvers.GroupByLab_requestsResolver,
    updateManyLab_requests: actionResolvers.UpdateManyLab_requestsResolver,
    updateOneLab_requests: actionResolvers.UpdateOneLab_requestsResolver,
    upsertOneLab_requests: actionResolvers.UpsertOneLab_requestsResolver
  },
  Lab_results: {
    aggregateLab_results: actionResolvers.AggregateLab_resultsResolver,
    createManyLab_results: actionResolvers.CreateManyLab_resultsResolver,
    createManyAndReturnLab_results: actionResolvers.CreateManyAndReturnLab_resultsResolver,
    createOneLab_results: actionResolvers.CreateOneLab_resultsResolver,
    deleteManyLab_results: actionResolvers.DeleteManyLab_resultsResolver,
    deleteOneLab_results: actionResolvers.DeleteOneLab_resultsResolver,
    findFirstLab_results: actionResolvers.FindFirstLab_resultsResolver,
    findFirstLab_resultsOrThrow: actionResolvers.FindFirstLab_resultsOrThrowResolver,
    findManyLab_results: actionResolvers.FindManyLab_resultsResolver,
    findUniqueLab_results: actionResolvers.FindUniqueLab_resultsResolver,
    findUniqueLab_resultsOrThrow: actionResolvers.FindUniqueLab_resultsOrThrowResolver,
    groupByLab_results: actionResolvers.GroupByLab_resultsResolver,
    updateManyLab_results: actionResolvers.UpdateManyLab_resultsResolver,
    updateOneLab_results: actionResolvers.UpdateOneLab_resultsResolver,
    upsertOneLab_results: actionResolvers.UpsertOneLab_resultsResolver
  },
  Laboratories: {
    aggregateLaboratories: actionResolvers.AggregateLaboratoriesResolver,
    createManyLaboratories: actionResolvers.CreateManyLaboratoriesResolver,
    createManyAndReturnLaboratories: actionResolvers.CreateManyAndReturnLaboratoriesResolver,
    createOneLaboratories: actionResolvers.CreateOneLaboratoriesResolver,
    deleteManyLaboratories: actionResolvers.DeleteManyLaboratoriesResolver,
    deleteOneLaboratories: actionResolvers.DeleteOneLaboratoriesResolver,
    findFirstLaboratories: actionResolvers.FindFirstLaboratoriesResolver,
    findFirstLaboratoriesOrThrow: actionResolvers.FindFirstLaboratoriesOrThrowResolver,
    findManyLaboratories: actionResolvers.FindManyLaboratoriesResolver,
    findUniqueLaboratories: actionResolvers.FindUniqueLaboratoriesResolver,
    findUniqueLaboratoriesOrThrow: actionResolvers.FindUniqueLaboratoriesOrThrowResolver,
    groupByLaboratories: actionResolvers.GroupByLaboratoriesResolver,
    updateManyLaboratories: actionResolvers.UpdateManyLaboratoriesResolver,
    updateOneLaboratories: actionResolvers.UpdateOneLaboratoriesResolver,
    upsertOneLaboratories: actionResolvers.UpsertOneLaboratoriesResolver
  },
  Medications: {
    aggregateMedications: actionResolvers.AggregateMedicationsResolver,
    createManyMedications: actionResolvers.CreateManyMedicationsResolver,
    createManyAndReturnMedications: actionResolvers.CreateManyAndReturnMedicationsResolver,
    createOneMedications: actionResolvers.CreateOneMedicationsResolver,
    deleteManyMedications: actionResolvers.DeleteManyMedicationsResolver,
    deleteOneMedications: actionResolvers.DeleteOneMedicationsResolver,
    findFirstMedications: actionResolvers.FindFirstMedicationsResolver,
    findFirstMedicationsOrThrow: actionResolvers.FindFirstMedicationsOrThrowResolver,
    findManyMedications: actionResolvers.FindManyMedicationsResolver,
    findUniqueMedications: actionResolvers.FindUniqueMedicationsResolver,
    findUniqueMedicationsOrThrow: actionResolvers.FindUniqueMedicationsOrThrowResolver,
    groupByMedications: actionResolvers.GroupByMedicationsResolver,
    updateManyMedications: actionResolvers.UpdateManyMedicationsResolver,
    updateOneMedications: actionResolvers.UpdateOneMedicationsResolver,
    upsertOneMedications: actionResolvers.UpsertOneMedicationsResolver
  },
  Patients: {
    aggregatePatients: actionResolvers.AggregatePatientsResolver,
    createManyPatients: actionResolvers.CreateManyPatientsResolver,
    createManyAndReturnPatients: actionResolvers.CreateManyAndReturnPatientsResolver,
    createOnePatients: actionResolvers.CreateOnePatientsResolver,
    deleteManyPatients: actionResolvers.DeleteManyPatientsResolver,
    deleteOnePatients: actionResolvers.DeleteOnePatientsResolver,
    findFirstPatients: actionResolvers.FindFirstPatientsResolver,
    findFirstPatientsOrThrow: actionResolvers.FindFirstPatientsOrThrowResolver,
    findManyPatients: actionResolvers.FindManyPatientsResolver,
    findUniquePatients: actionResolvers.FindUniquePatientsResolver,
    findUniquePatientsOrThrow: actionResolvers.FindUniquePatientsOrThrowResolver,
    groupByPatients: actionResolvers.GroupByPatientsResolver,
    updateManyPatients: actionResolvers.UpdateManyPatientsResolver,
    updateOnePatients: actionResolvers.UpdateOnePatientsResolver,
    upsertOnePatients: actionResolvers.UpsertOnePatientsResolver
  },
  Pharmacies: {
    aggregatePharmacies: actionResolvers.AggregatePharmaciesResolver,
    createManyPharmacies: actionResolvers.CreateManyPharmaciesResolver,
    createManyAndReturnPharmacies: actionResolvers.CreateManyAndReturnPharmaciesResolver,
    createOnePharmacies: actionResolvers.CreateOnePharmaciesResolver,
    deleteManyPharmacies: actionResolvers.DeleteManyPharmaciesResolver,
    deleteOnePharmacies: actionResolvers.DeleteOnePharmaciesResolver,
    findFirstPharmacies: actionResolvers.FindFirstPharmaciesResolver,
    findFirstPharmaciesOrThrow: actionResolvers.FindFirstPharmaciesOrThrowResolver,
    findManyPharmacies: actionResolvers.FindManyPharmaciesResolver,
    findUniquePharmacies: actionResolvers.FindUniquePharmaciesResolver,
    findUniquePharmaciesOrThrow: actionResolvers.FindUniquePharmaciesOrThrowResolver,
    groupByPharmacies: actionResolvers.GroupByPharmaciesResolver,
    updateManyPharmacies: actionResolvers.UpdateManyPharmaciesResolver,
    updateOnePharmacies: actionResolvers.UpdateOnePharmaciesResolver,
    upsertOnePharmacies: actionResolvers.UpsertOnePharmaciesResolver
  },
  Prescriptions: {
    aggregatePrescriptions: actionResolvers.AggregatePrescriptionsResolver,
    createManyPrescriptions: actionResolvers.CreateManyPrescriptionsResolver,
    createManyAndReturnPrescriptions: actionResolvers.CreateManyAndReturnPrescriptionsResolver,
    createOnePrescriptions: actionResolvers.CreateOnePrescriptionsResolver,
    deleteManyPrescriptions: actionResolvers.DeleteManyPrescriptionsResolver,
    deleteOnePrescriptions: actionResolvers.DeleteOnePrescriptionsResolver,
    findFirstPrescriptions: actionResolvers.FindFirstPrescriptionsResolver,
    findFirstPrescriptionsOrThrow: actionResolvers.FindFirstPrescriptionsOrThrowResolver,
    findManyPrescriptions: actionResolvers.FindManyPrescriptionsResolver,
    findUniquePrescriptions: actionResolvers.FindUniquePrescriptionsResolver,
    findUniquePrescriptionsOrThrow: actionResolvers.FindUniquePrescriptionsOrThrowResolver,
    groupByPrescriptions: actionResolvers.GroupByPrescriptionsResolver,
    updateManyPrescriptions: actionResolvers.UpdateManyPrescriptionsResolver,
    updateOnePrescriptions: actionResolvers.UpdateOnePrescriptionsResolver,
    upsertOnePrescriptions: actionResolvers.UpsertOnePrescriptionsResolver
  },
  Rdv_requests: {
    aggregateRdv_requests: actionResolvers.AggregateRdv_requestsResolver,
    createManyRdv_requests: actionResolvers.CreateManyRdv_requestsResolver,
    createManyAndReturnRdv_requests: actionResolvers.CreateManyAndReturnRdv_requestsResolver,
    createOneRdv_requests: actionResolvers.CreateOneRdv_requestsResolver,
    deleteManyRdv_requests: actionResolvers.DeleteManyRdv_requestsResolver,
    deleteOneRdv_requests: actionResolvers.DeleteOneRdv_requestsResolver,
    findFirstRdv_requests: actionResolvers.FindFirstRdv_requestsResolver,
    findFirstRdv_requestsOrThrow: actionResolvers.FindFirstRdv_requestsOrThrowResolver,
    findManyRdv_requests: actionResolvers.FindManyRdv_requestsResolver,
    findUniqueRdv_requests: actionResolvers.FindUniqueRdv_requestsResolver,
    findUniqueRdv_requestsOrThrow: actionResolvers.FindUniqueRdv_requestsOrThrowResolver,
    groupByRdv_requests: actionResolvers.GroupByRdv_requestsResolver,
    updateManyRdv_requests: actionResolvers.UpdateManyRdv_requestsResolver,
    updateOneRdv_requests: actionResolvers.UpdateOneRdv_requestsResolver,
    upsertOneRdv_requests: actionResolvers.UpsertOneRdv_requestsResolver
  },
  Rdvs: {
    aggregateRdvs: actionResolvers.AggregateRdvsResolver,
    createManyRdvs: actionResolvers.CreateManyRdvsResolver,
    createManyAndReturnRdvs: actionResolvers.CreateManyAndReturnRdvsResolver,
    createOneRdvs: actionResolvers.CreateOneRdvsResolver,
    deleteManyRdvs: actionResolvers.DeleteManyRdvsResolver,
    deleteOneRdvs: actionResolvers.DeleteOneRdvsResolver,
    findFirstRdvs: actionResolvers.FindFirstRdvsResolver,
    findFirstRdvsOrThrow: actionResolvers.FindFirstRdvsOrThrowResolver,
    findManyRdvs: actionResolvers.FindManyRdvsResolver,
    findUniqueRdvs: actionResolvers.FindUniqueRdvsResolver,
    findUniqueRdvsOrThrow: actionResolvers.FindUniqueRdvsOrThrowResolver,
    groupByRdvs: actionResolvers.GroupByRdvsResolver,
    updateManyRdvs: actionResolvers.UpdateManyRdvsResolver,
    updateOneRdvs: actionResolvers.UpdateOneRdvsResolver,
    upsertOneRdvs: actionResolvers.UpsertOneRdvsResolver
  },
  Users: {
    aggregateUsers: actionResolvers.AggregateUsersResolver,
    createManyUsers: actionResolvers.CreateManyUsersResolver,
    createManyAndReturnUsers: actionResolvers.CreateManyAndReturnUsersResolver,
    createOneUsers: actionResolvers.CreateOneUsersResolver,
    deleteManyUsers: actionResolvers.DeleteManyUsersResolver,
    deleteOneUsers: actionResolvers.DeleteOneUsersResolver,
    findFirstUsers: actionResolvers.FindFirstUsersResolver,
    findFirstUsersOrThrow: actionResolvers.FindFirstUsersOrThrowResolver,
    findManyUsers: actionResolvers.FindManyUsersResolver,
    findUniqueUsers: actionResolvers.FindUniqueUsersResolver,
    findUniqueUsersOrThrow: actionResolvers.FindUniqueUsersOrThrowResolver,
    groupByUsers: actionResolvers.GroupByUsersResolver,
    updateManyUsers: actionResolvers.UpdateManyUsersResolver,
    updateOneUsers: actionResolvers.UpdateOneUsersResolver,
    upsertOneUsers: actionResolvers.UpsertOneUsersResolver
  },
  Xray_results: {
    aggregateXray_results: actionResolvers.AggregateXray_resultsResolver,
    createManyXray_results: actionResolvers.CreateManyXray_resultsResolver,
    createManyAndReturnXray_results: actionResolvers.CreateManyAndReturnXray_resultsResolver,
    createOneXray_results: actionResolvers.CreateOneXray_resultsResolver,
    deleteManyXray_results: actionResolvers.DeleteManyXray_resultsResolver,
    deleteOneXray_results: actionResolvers.DeleteOneXray_resultsResolver,
    findFirstXray_results: actionResolvers.FindFirstXray_resultsResolver,
    findFirstXray_resultsOrThrow: actionResolvers.FindFirstXray_resultsOrThrowResolver,
    findManyXray_results: actionResolvers.FindManyXray_resultsResolver,
    findUniqueXray_results: actionResolvers.FindUniqueXray_resultsResolver,
    findUniqueXray_resultsOrThrow: actionResolvers.FindUniqueXray_resultsOrThrowResolver,
    groupByXray_results: actionResolvers.GroupByXray_resultsResolver,
    updateManyXray_results: actionResolvers.UpdateManyXray_resultsResolver,
    updateOneXray_results: actionResolvers.UpdateOneXray_resultsResolver,
    upsertOneXray_results: actionResolvers.UpsertOneXray_resultsResolver
  }
};
const crudResolversInfo = {
  GeneralMedicalRecords: ["aggregateGeneralMedicalRecords", "createManyGeneralMedicalRecords", "createManyAndReturnGeneralMedicalRecords", "createOneGeneralMedicalRecords", "deleteManyGeneralMedicalRecords", "deleteOneGeneralMedicalRecords", "findFirstGeneralMedicalRecords", "findFirstGeneralMedicalRecordsOrThrow", "findManyGeneralMedicalRecords", "findUniqueGeneralMedicalRecords", "findUniqueGeneralMedicalRecordsOrThrow", "groupByGeneralMedicalRecords", "updateManyGeneralMedicalRecords", "updateOneGeneralMedicalRecords", "upsertOneGeneralMedicalRecords"],
  Analysis_results: ["aggregateAnalysis_results", "createManyAnalysis_results", "createManyAndReturnAnalysis_results", "createOneAnalysis_results", "deleteManyAnalysis_results", "deleteOneAnalysis_results", "findFirstAnalysis_results", "findFirstAnalysis_resultsOrThrow", "findManyAnalysis_results", "findUniqueAnalysis_results", "findUniqueAnalysis_resultsOrThrow", "groupByAnalysis_results", "updateManyAnalysis_results", "updateOneAnalysis_results", "upsertOneAnalysis_results"],
  Authorizations: ["aggregateAuthorizations", "createManyAuthorizations", "createManyAndReturnAuthorizations", "createOneAuthorizations", "deleteManyAuthorizations", "deleteOneAuthorizations", "findFirstAuthorizations", "findFirstAuthorizationsOrThrow", "findManyAuthorizations", "findUniqueAuthorizations", "findUniqueAuthorizationsOrThrow", "groupByAuthorizations", "updateManyAuthorizations", "updateOneAuthorizations", "upsertOneAuthorizations"],
  Certificates: ["aggregateCertificates", "createManyCertificates", "createManyAndReturnCertificates", "createOneCertificates", "deleteManyCertificates", "deleteOneCertificates", "findFirstCertificates", "findFirstCertificatesOrThrow", "findManyCertificates", "findUniqueCertificates", "findUniqueCertificatesOrThrow", "groupByCertificates", "updateManyCertificates", "updateOneCertificates", "upsertOneCertificates"],
  Cliniques: ["aggregateCliniques", "createManyCliniques", "createManyAndReturnCliniques", "createOneCliniques", "deleteManyCliniques", "deleteOneCliniques", "findFirstCliniques", "findFirstCliniquesOrThrow", "findManyCliniques", "findUniqueCliniques", "findUniqueCliniquesOrThrow", "groupByCliniques", "updateManyCliniques", "updateOneCliniques", "upsertOneCliniques"],
  Consultations: ["aggregateConsultations", "createManyConsultations", "createManyAndReturnConsultations", "createOneConsultations", "deleteManyConsultations", "deleteOneConsultations", "findFirstConsultations", "findFirstConsultationsOrThrow", "findManyConsultations", "findUniqueConsultations", "findUniqueConsultationsOrThrow", "groupByConsultations", "updateManyConsultations", "updateOneConsultations", "upsertOneConsultations"],
  Ctscan_results: ["aggregateCtscan_results", "createManyCtscan_results", "createManyAndReturnCtscan_results", "createOneCtscan_results", "deleteManyCtscan_results", "deleteOneCtscan_results", "findFirstCtscan_results", "findFirstCtscan_resultsOrThrow", "findManyCtscan_results", "findUniqueCtscan_results", "findUniqueCtscan_resultsOrThrow", "groupByCtscan_results", "updateManyCtscan_results", "updateOneCtscan_results", "upsertOneCtscan_results"],
  Doctors: ["aggregateDoctors", "createManyDoctors", "createManyAndReturnDoctors", "createOneDoctors", "deleteManyDoctors", "deleteOneDoctors", "findFirstDoctors", "findFirstDoctorsOrThrow", "findManyDoctors", "findUniqueDoctors", "findUniqueDoctorsOrThrow", "groupByDoctors", "updateManyDoctors", "updateOneDoctors", "upsertOneDoctors"],
  Instituts_medicaux: ["aggregateInstituts_medicaux", "createManyInstituts_medicaux", "createManyAndReturnInstituts_medicaux", "createOneInstituts_medicaux", "deleteManyInstituts_medicaux", "deleteOneInstituts_medicaux", "findFirstInstituts_medicaux", "findFirstInstituts_medicauxOrThrow", "instituts_medicauxes", "instituts_medicaux", "getInstituts_medicaux", "groupByInstituts_medicaux", "updateManyInstituts_medicaux", "updateOneInstituts_medicaux", "upsertOneInstituts_medicaux"],
  Lab_attachments: ["aggregateLab_attachments", "createManyLab_attachments", "createManyAndReturnLab_attachments", "createOneLab_attachments", "deleteManyLab_attachments", "deleteOneLab_attachments", "findFirstLab_attachments", "findFirstLab_attachmentsOrThrow", "findManyLab_attachments", "findUniqueLab_attachments", "findUniqueLab_attachmentsOrThrow", "groupByLab_attachments", "updateManyLab_attachments", "updateOneLab_attachments", "upsertOneLab_attachments"],
  Lab_documents: ["aggregateLab_documents", "createManyLab_documents", "createManyAndReturnLab_documents", "createOneLab_documents", "deleteManyLab_documents", "deleteOneLab_documents", "findFirstLab_documents", "findFirstLab_documentsOrThrow", "findManyLab_documents", "findUniqueLab_documents", "findUniqueLab_documentsOrThrow", "groupByLab_documents", "updateManyLab_documents", "updateOneLab_documents", "upsertOneLab_documents"],
  Lab_requests: ["aggregateLab_requests", "createManyLab_requests", "createManyAndReturnLab_requests", "createOneLab_requests", "deleteManyLab_requests", "deleteOneLab_requests", "findFirstLab_requests", "findFirstLab_requestsOrThrow", "findManyLab_requests", "findUniqueLab_requests", "findUniqueLab_requestsOrThrow", "groupByLab_requests", "updateManyLab_requests", "updateOneLab_requests", "upsertOneLab_requests"],
  Lab_results: ["aggregateLab_results", "createManyLab_results", "createManyAndReturnLab_results", "createOneLab_results", "deleteManyLab_results", "deleteOneLab_results", "findFirstLab_results", "findFirstLab_resultsOrThrow", "findManyLab_results", "findUniqueLab_results", "findUniqueLab_resultsOrThrow", "groupByLab_results", "updateManyLab_results", "updateOneLab_results", "upsertOneLab_results"],
  Laboratories: ["aggregateLaboratories", "createManyLaboratories", "createManyAndReturnLaboratories", "createOneLaboratories", "deleteManyLaboratories", "deleteOneLaboratories", "findFirstLaboratories", "findFirstLaboratoriesOrThrow", "findManyLaboratories", "findUniqueLaboratories", "findUniqueLaboratoriesOrThrow", "groupByLaboratories", "updateManyLaboratories", "updateOneLaboratories", "upsertOneLaboratories"],
  Medications: ["aggregateMedications", "createManyMedications", "createManyAndReturnMedications", "createOneMedications", "deleteManyMedications", "deleteOneMedications", "findFirstMedications", "findFirstMedicationsOrThrow", "findManyMedications", "findUniqueMedications", "findUniqueMedicationsOrThrow", "groupByMedications", "updateManyMedications", "updateOneMedications", "upsertOneMedications"],
  Patients: ["aggregatePatients", "createManyPatients", "createManyAndReturnPatients", "createOnePatients", "deleteManyPatients", "deleteOnePatients", "findFirstPatients", "findFirstPatientsOrThrow", "findManyPatients", "findUniquePatients", "findUniquePatientsOrThrow", "groupByPatients", "updateManyPatients", "updateOnePatients", "upsertOnePatients"],
  Pharmacies: ["aggregatePharmacies", "createManyPharmacies", "createManyAndReturnPharmacies", "createOnePharmacies", "deleteManyPharmacies", "deleteOnePharmacies", "findFirstPharmacies", "findFirstPharmaciesOrThrow", "findManyPharmacies", "findUniquePharmacies", "findUniquePharmaciesOrThrow", "groupByPharmacies", "updateManyPharmacies", "updateOnePharmacies", "upsertOnePharmacies"],
  Prescriptions: ["aggregatePrescriptions", "createManyPrescriptions", "createManyAndReturnPrescriptions", "createOnePrescriptions", "deleteManyPrescriptions", "deleteOnePrescriptions", "findFirstPrescriptions", "findFirstPrescriptionsOrThrow", "findManyPrescriptions", "findUniquePrescriptions", "findUniquePrescriptionsOrThrow", "groupByPrescriptions", "updateManyPrescriptions", "updateOnePrescriptions", "upsertOnePrescriptions"],
  Rdv_requests: ["aggregateRdv_requests", "createManyRdv_requests", "createManyAndReturnRdv_requests", "createOneRdv_requests", "deleteManyRdv_requests", "deleteOneRdv_requests", "findFirstRdv_requests", "findFirstRdv_requestsOrThrow", "findManyRdv_requests", "findUniqueRdv_requests", "findUniqueRdv_requestsOrThrow", "groupByRdv_requests", "updateManyRdv_requests", "updateOneRdv_requests", "upsertOneRdv_requests"],
  Rdvs: ["aggregateRdvs", "createManyRdvs", "createManyAndReturnRdvs", "createOneRdvs", "deleteManyRdvs", "deleteOneRdvs", "findFirstRdvs", "findFirstRdvsOrThrow", "findManyRdvs", "findUniqueRdvs", "findUniqueRdvsOrThrow", "groupByRdvs", "updateManyRdvs", "updateOneRdvs", "upsertOneRdvs"],
  Users: ["aggregateUsers", "createManyUsers", "createManyAndReturnUsers", "createOneUsers", "deleteManyUsers", "deleteOneUsers", "findFirstUsers", "findFirstUsersOrThrow", "findManyUsers", "findUniqueUsers", "findUniqueUsersOrThrow", "groupByUsers", "updateManyUsers", "updateOneUsers", "upsertOneUsers"],
  Xray_results: ["aggregateXray_results", "createManyXray_results", "createManyAndReturnXray_results", "createOneXray_results", "deleteManyXray_results", "deleteOneXray_results", "findFirstXray_results", "findFirstXray_resultsOrThrow", "findManyXray_results", "findUniqueXray_results", "findUniqueXray_resultsOrThrow", "groupByXray_results", "updateManyXray_results", "updateOneXray_results", "upsertOneXray_results"]
};
const argsInfo = {
  AggregateGeneralMedicalRecordsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyGeneralMedicalRecordsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnGeneralMedicalRecordsArgs: ["data", "skipDuplicates"],
  CreateOneGeneralMedicalRecordsArgs: ["data"],
  DeleteManyGeneralMedicalRecordsArgs: ["where"],
  DeleteOneGeneralMedicalRecordsArgs: ["where"],
  FindFirstGeneralMedicalRecordsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstGeneralMedicalRecordsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyGeneralMedicalRecordsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueGeneralMedicalRecordsArgs: ["where"],
  FindUniqueGeneralMedicalRecordsOrThrowArgs: ["where"],
  GroupByGeneralMedicalRecordsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyGeneralMedicalRecordsArgs: ["data", "where"],
  UpdateOneGeneralMedicalRecordsArgs: ["data", "where"],
  UpsertOneGeneralMedicalRecordsArgs: ["where", "create", "update"],
  AggregateAnalysis_resultsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyAnalysis_resultsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnAnalysis_resultsArgs: ["data", "skipDuplicates"],
  CreateOneAnalysis_resultsArgs: ["data"],
  DeleteManyAnalysis_resultsArgs: ["where"],
  DeleteOneAnalysis_resultsArgs: ["where"],
  FindFirstAnalysis_resultsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstAnalysis_resultsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyAnalysis_resultsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueAnalysis_resultsArgs: ["where"],
  FindUniqueAnalysis_resultsOrThrowArgs: ["where"],
  GroupByAnalysis_resultsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyAnalysis_resultsArgs: ["data", "where"],
  UpdateOneAnalysis_resultsArgs: ["data", "where"],
  UpsertOneAnalysis_resultsArgs: ["where", "create", "update"],
  AggregateAuthorizationsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyAuthorizationsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnAuthorizationsArgs: ["data", "skipDuplicates"],
  CreateOneAuthorizationsArgs: ["data"],
  DeleteManyAuthorizationsArgs: ["where"],
  DeleteOneAuthorizationsArgs: ["where"],
  FindFirstAuthorizationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstAuthorizationsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyAuthorizationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueAuthorizationsArgs: ["where"],
  FindUniqueAuthorizationsOrThrowArgs: ["where"],
  GroupByAuthorizationsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyAuthorizationsArgs: ["data", "where"],
  UpdateOneAuthorizationsArgs: ["data", "where"],
  UpsertOneAuthorizationsArgs: ["where", "create", "update"],
  AggregateCertificatesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyCertificatesArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnCertificatesArgs: ["data", "skipDuplicates"],
  CreateOneCertificatesArgs: ["data"],
  DeleteManyCertificatesArgs: ["where"],
  DeleteOneCertificatesArgs: ["where"],
  FindFirstCertificatesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstCertificatesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyCertificatesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueCertificatesArgs: ["where"],
  FindUniqueCertificatesOrThrowArgs: ["where"],
  GroupByCertificatesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyCertificatesArgs: ["data", "where"],
  UpdateOneCertificatesArgs: ["data", "where"],
  UpsertOneCertificatesArgs: ["where", "create", "update"],
  AggregateCliniquesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyCliniquesArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnCliniquesArgs: ["data", "skipDuplicates"],
  CreateOneCliniquesArgs: ["data"],
  DeleteManyCliniquesArgs: ["where"],
  DeleteOneCliniquesArgs: ["where"],
  FindFirstCliniquesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstCliniquesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyCliniquesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueCliniquesArgs: ["where"],
  FindUniqueCliniquesOrThrowArgs: ["where"],
  GroupByCliniquesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyCliniquesArgs: ["data", "where"],
  UpdateOneCliniquesArgs: ["data", "where"],
  UpsertOneCliniquesArgs: ["where", "create", "update"],
  AggregateConsultationsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyConsultationsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnConsultationsArgs: ["data", "skipDuplicates"],
  CreateOneConsultationsArgs: ["data"],
  DeleteManyConsultationsArgs: ["where"],
  DeleteOneConsultationsArgs: ["where"],
  FindFirstConsultationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstConsultationsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyConsultationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueConsultationsArgs: ["where"],
  FindUniqueConsultationsOrThrowArgs: ["where"],
  GroupByConsultationsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyConsultationsArgs: ["data", "where"],
  UpdateOneConsultationsArgs: ["data", "where"],
  UpsertOneConsultationsArgs: ["where", "create", "update"],
  AggregateCtscan_resultsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyCtscan_resultsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnCtscan_resultsArgs: ["data", "skipDuplicates"],
  CreateOneCtscan_resultsArgs: ["data"],
  DeleteManyCtscan_resultsArgs: ["where"],
  DeleteOneCtscan_resultsArgs: ["where"],
  FindFirstCtscan_resultsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstCtscan_resultsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyCtscan_resultsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueCtscan_resultsArgs: ["where"],
  FindUniqueCtscan_resultsOrThrowArgs: ["where"],
  GroupByCtscan_resultsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyCtscan_resultsArgs: ["data", "where"],
  UpdateOneCtscan_resultsArgs: ["data", "where"],
  UpsertOneCtscan_resultsArgs: ["where", "create", "update"],
  AggregateDoctorsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyDoctorsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnDoctorsArgs: ["data", "skipDuplicates"],
  CreateOneDoctorsArgs: ["data"],
  DeleteManyDoctorsArgs: ["where"],
  DeleteOneDoctorsArgs: ["where"],
  FindFirstDoctorsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstDoctorsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyDoctorsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueDoctorsArgs: ["where"],
  FindUniqueDoctorsOrThrowArgs: ["where"],
  GroupByDoctorsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyDoctorsArgs: ["data", "where"],
  UpdateOneDoctorsArgs: ["data", "where"],
  UpsertOneDoctorsArgs: ["where", "create", "update"],
  AggregateInstituts_medicauxArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyInstituts_medicauxArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnInstituts_medicauxArgs: ["data", "skipDuplicates"],
  CreateOneInstituts_medicauxArgs: ["data"],
  DeleteManyInstituts_medicauxArgs: ["where"],
  DeleteOneInstituts_medicauxArgs: ["where"],
  FindFirstInstituts_medicauxArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstInstituts_medicauxOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyInstituts_medicauxArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueInstituts_medicauxArgs: ["where"],
  FindUniqueInstituts_medicauxOrThrowArgs: ["where"],
  GroupByInstituts_medicauxArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyInstituts_medicauxArgs: ["data", "where"],
  UpdateOneInstituts_medicauxArgs: ["data", "where"],
  UpsertOneInstituts_medicauxArgs: ["where", "create", "update"],
  AggregateLab_attachmentsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyLab_attachmentsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnLab_attachmentsArgs: ["data", "skipDuplicates"],
  CreateOneLab_attachmentsArgs: ["data"],
  DeleteManyLab_attachmentsArgs: ["where"],
  DeleteOneLab_attachmentsArgs: ["where"],
  FindFirstLab_attachmentsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLab_attachmentsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLab_attachmentsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLab_attachmentsArgs: ["where"],
  FindUniqueLab_attachmentsOrThrowArgs: ["where"],
  GroupByLab_attachmentsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyLab_attachmentsArgs: ["data", "where"],
  UpdateOneLab_attachmentsArgs: ["data", "where"],
  UpsertOneLab_attachmentsArgs: ["where", "create", "update"],
  AggregateLab_documentsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyLab_documentsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnLab_documentsArgs: ["data", "skipDuplicates"],
  CreateOneLab_documentsArgs: ["data"],
  DeleteManyLab_documentsArgs: ["where"],
  DeleteOneLab_documentsArgs: ["where"],
  FindFirstLab_documentsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLab_documentsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLab_documentsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLab_documentsArgs: ["where"],
  FindUniqueLab_documentsOrThrowArgs: ["where"],
  GroupByLab_documentsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyLab_documentsArgs: ["data", "where"],
  UpdateOneLab_documentsArgs: ["data", "where"],
  UpsertOneLab_documentsArgs: ["where", "create", "update"],
  AggregateLab_requestsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyLab_requestsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnLab_requestsArgs: ["data", "skipDuplicates"],
  CreateOneLab_requestsArgs: ["data"],
  DeleteManyLab_requestsArgs: ["where"],
  DeleteOneLab_requestsArgs: ["where"],
  FindFirstLab_requestsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLab_requestsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLab_requestsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLab_requestsArgs: ["where"],
  FindUniqueLab_requestsOrThrowArgs: ["where"],
  GroupByLab_requestsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyLab_requestsArgs: ["data", "where"],
  UpdateOneLab_requestsArgs: ["data", "where"],
  UpsertOneLab_requestsArgs: ["where", "create", "update"],
  AggregateLab_resultsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyLab_resultsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnLab_resultsArgs: ["data", "skipDuplicates"],
  CreateOneLab_resultsArgs: ["data"],
  DeleteManyLab_resultsArgs: ["where"],
  DeleteOneLab_resultsArgs: ["where"],
  FindFirstLab_resultsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLab_resultsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLab_resultsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLab_resultsArgs: ["where"],
  FindUniqueLab_resultsOrThrowArgs: ["where"],
  GroupByLab_resultsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyLab_resultsArgs: ["data", "where"],
  UpdateOneLab_resultsArgs: ["data", "where"],
  UpsertOneLab_resultsArgs: ["where", "create", "update"],
  AggregateLaboratoriesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyLaboratoriesArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnLaboratoriesArgs: ["data", "skipDuplicates"],
  CreateOneLaboratoriesArgs: ["data"],
  DeleteManyLaboratoriesArgs: ["where"],
  DeleteOneLaboratoriesArgs: ["where"],
  FindFirstLaboratoriesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstLaboratoriesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyLaboratoriesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueLaboratoriesArgs: ["where"],
  FindUniqueLaboratoriesOrThrowArgs: ["where"],
  GroupByLaboratoriesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyLaboratoriesArgs: ["data", "where"],
  UpdateOneLaboratoriesArgs: ["data", "where"],
  UpsertOneLaboratoriesArgs: ["where", "create", "update"],
  AggregateMedicationsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyMedicationsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnMedicationsArgs: ["data", "skipDuplicates"],
  CreateOneMedicationsArgs: ["data"],
  DeleteManyMedicationsArgs: ["where"],
  DeleteOneMedicationsArgs: ["where"],
  FindFirstMedicationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstMedicationsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyMedicationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueMedicationsArgs: ["where"],
  FindUniqueMedicationsOrThrowArgs: ["where"],
  GroupByMedicationsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyMedicationsArgs: ["data", "where"],
  UpdateOneMedicationsArgs: ["data", "where"],
  UpsertOneMedicationsArgs: ["where", "create", "update"],
  AggregatePatientsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyPatientsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnPatientsArgs: ["data", "skipDuplicates"],
  CreateOnePatientsArgs: ["data"],
  DeleteManyPatientsArgs: ["where"],
  DeleteOnePatientsArgs: ["where"],
  FindFirstPatientsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPatientsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPatientsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePatientsArgs: ["where"],
  FindUniquePatientsOrThrowArgs: ["where"],
  GroupByPatientsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyPatientsArgs: ["data", "where"],
  UpdateOnePatientsArgs: ["data", "where"],
  UpsertOnePatientsArgs: ["where", "create", "update"],
  AggregatePharmaciesArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyPharmaciesArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnPharmaciesArgs: ["data", "skipDuplicates"],
  CreateOnePharmaciesArgs: ["data"],
  DeleteManyPharmaciesArgs: ["where"],
  DeleteOnePharmaciesArgs: ["where"],
  FindFirstPharmaciesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPharmaciesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPharmaciesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePharmaciesArgs: ["where"],
  FindUniquePharmaciesOrThrowArgs: ["where"],
  GroupByPharmaciesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyPharmaciesArgs: ["data", "where"],
  UpdateOnePharmaciesArgs: ["data", "where"],
  UpsertOnePharmaciesArgs: ["where", "create", "update"],
  AggregatePrescriptionsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyPrescriptionsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnPrescriptionsArgs: ["data", "skipDuplicates"],
  CreateOnePrescriptionsArgs: ["data"],
  DeleteManyPrescriptionsArgs: ["where"],
  DeleteOnePrescriptionsArgs: ["where"],
  FindFirstPrescriptionsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstPrescriptionsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyPrescriptionsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniquePrescriptionsArgs: ["where"],
  FindUniquePrescriptionsOrThrowArgs: ["where"],
  GroupByPrescriptionsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyPrescriptionsArgs: ["data", "where"],
  UpdateOnePrescriptionsArgs: ["data", "where"],
  UpsertOnePrescriptionsArgs: ["where", "create", "update"],
  AggregateRdv_requestsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyRdv_requestsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnRdv_requestsArgs: ["data", "skipDuplicates"],
  CreateOneRdv_requestsArgs: ["data"],
  DeleteManyRdv_requestsArgs: ["where"],
  DeleteOneRdv_requestsArgs: ["where"],
  FindFirstRdv_requestsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstRdv_requestsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyRdv_requestsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueRdv_requestsArgs: ["where"],
  FindUniqueRdv_requestsOrThrowArgs: ["where"],
  GroupByRdv_requestsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyRdv_requestsArgs: ["data", "where"],
  UpdateOneRdv_requestsArgs: ["data", "where"],
  UpsertOneRdv_requestsArgs: ["where", "create", "update"],
  AggregateRdvsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyRdvsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnRdvsArgs: ["data", "skipDuplicates"],
  CreateOneRdvsArgs: ["data"],
  DeleteManyRdvsArgs: ["where"],
  DeleteOneRdvsArgs: ["where"],
  FindFirstRdvsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstRdvsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyRdvsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueRdvsArgs: ["where"],
  FindUniqueRdvsOrThrowArgs: ["where"],
  GroupByRdvsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyRdvsArgs: ["data", "where"],
  UpdateOneRdvsArgs: ["data", "where"],
  UpsertOneRdvsArgs: ["where", "create", "update"],
  AggregateUsersArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyUsersArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnUsersArgs: ["data", "skipDuplicates"],
  CreateOneUsersArgs: ["data"],
  DeleteManyUsersArgs: ["where"],
  DeleteOneUsersArgs: ["where"],
  FindFirstUsersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstUsersOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyUsersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueUsersArgs: ["where"],
  FindUniqueUsersOrThrowArgs: ["where"],
  GroupByUsersArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyUsersArgs: ["data", "where"],
  UpdateOneUsersArgs: ["data", "where"],
  UpsertOneUsersArgs: ["where", "create", "update"],
  AggregateXray_resultsArgs: ["where", "orderBy", "cursor", "take", "skip"],
  CreateManyXray_resultsArgs: ["data", "skipDuplicates"],
  CreateManyAndReturnXray_resultsArgs: ["data", "skipDuplicates"],
  CreateOneXray_resultsArgs: ["data"],
  DeleteManyXray_resultsArgs: ["where"],
  DeleteOneXray_resultsArgs: ["where"],
  FindFirstXray_resultsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindFirstXray_resultsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindManyXray_resultsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
  FindUniqueXray_resultsArgs: ["where"],
  FindUniqueXray_resultsOrThrowArgs: ["where"],
  GroupByXray_resultsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
  UpdateManyXray_resultsArgs: ["data", "where"],
  UpdateOneXray_resultsArgs: ["data", "where"],
  UpsertOneXray_resultsArgs: ["where", "create", "update"]
};

type ResolverModelNames = keyof typeof crudResolversMap;

type ModelResolverActionNames<
  TModel extends ResolverModelNames
> = keyof typeof crudResolversMap[TModel]["prototype"];

export type ResolverActionsConfig<
  TModel extends ResolverModelNames
> = Partial<Record<ModelResolverActionNames<TModel>, MethodDecorator[] | MethodDecoratorOverrideFn>>
  & {
    _all?: MethodDecorator[];
    _query?: MethodDecorator[];
    _mutation?: MethodDecorator[];
  };

export type ResolversEnhanceMap = {
  [TModel in ResolverModelNames]?: ResolverActionsConfig<TModel>;
};

export function applyResolversEnhanceMap(
  resolversEnhanceMap: ResolversEnhanceMap,
) {
  const mutationOperationPrefixes = [
    "createOne", "createMany", "createManyAndReturn", "deleteOne", "updateOne", "deleteMany", "updateMany", "upsertOne"
  ];
  for (const resolversEnhanceMapKey of Object.keys(resolversEnhanceMap)) {
    const modelName = resolversEnhanceMapKey as keyof typeof resolversEnhanceMap;
    const crudTarget = crudResolversMap[modelName].prototype;
    const resolverActionsConfig = resolversEnhanceMap[modelName]!;
    const actionResolversConfig = actionResolversMap[modelName];
    const allActionsDecorators = resolverActionsConfig._all;
    const resolverActionNames = crudResolversInfo[modelName as keyof typeof crudResolversInfo];
    for (const resolverActionName of resolverActionNames) {
      const maybeDecoratorsOrFn = resolverActionsConfig[
        resolverActionName as keyof typeof resolverActionsConfig
      ] as MethodDecorator[] | MethodDecoratorOverrideFn | undefined;
      const isWriteOperation = mutationOperationPrefixes.some(prefix => resolverActionName.startsWith(prefix));
      const operationKindDecorators = isWriteOperation ? resolverActionsConfig._mutation : resolverActionsConfig._query;
      const mainDecorators = [
        ...allActionsDecorators ?? [],
        ...operationKindDecorators ?? [],
      ]
      let decorators: MethodDecorator[];
      if (typeof maybeDecoratorsOrFn === "function") {
        decorators = maybeDecoratorsOrFn(mainDecorators);
      } else {
        decorators = [...mainDecorators, ...maybeDecoratorsOrFn ?? []];
      }
      const actionTarget = (actionResolversConfig[
        resolverActionName as keyof typeof actionResolversConfig
      ] as Function).prototype;
      tslib.__decorate(decorators, crudTarget, resolverActionName, null);
      tslib.__decorate(decorators, actionTarget, resolverActionName, null);
    }
  }
}

type ArgsTypesNames = keyof typeof argsTypes;

type ArgFieldNames<TArgsType extends ArgsTypesNames> = Exclude<
  keyof typeof argsTypes[TArgsType]["prototype"],
  number | symbol
>;

type ArgFieldsConfig<
  TArgsType extends ArgsTypesNames
> = FieldsConfig<ArgFieldNames<TArgsType>>;

export type ArgConfig<TArgsType extends ArgsTypesNames> = {
  class?: ClassDecorator[];
  fields?: ArgFieldsConfig<TArgsType>;
};

export type ArgsTypesEnhanceMap = {
  [TArgsType in ArgsTypesNames]?: ArgConfig<TArgsType>;
};

export function applyArgsTypesEnhanceMap(
  argsTypesEnhanceMap: ArgsTypesEnhanceMap,
) {
  for (const argsTypesEnhanceMapKey of Object.keys(argsTypesEnhanceMap)) {
    const argsTypeName = argsTypesEnhanceMapKey as keyof typeof argsTypesEnhanceMap;
    const typeConfig = argsTypesEnhanceMap[argsTypeName]!;
    const typeClass = argsTypes[argsTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(
      typeConfig,
      typeClass,
      typeTarget,
      argsInfo[argsTypeName as keyof typeof argsInfo],
    );
  }
}

const relationResolversMap = {
  GeneralMedicalRecords: relationResolvers.GeneralMedicalRecordsRelationsResolver,
  Analysis_results: relationResolvers.Analysis_resultsRelationsResolver,
  Authorizations: relationResolvers.AuthorizationsRelationsResolver,
  Certificates: relationResolvers.CertificatesRelationsResolver,
  Consultations: relationResolvers.ConsultationsRelationsResolver,
  Ctscan_results: relationResolvers.Ctscan_resultsRelationsResolver,
  Doctors: relationResolvers.DoctorsRelationsResolver,
  Instituts_medicaux: relationResolvers.Instituts_medicauxRelationsResolver,
  Lab_attachments: relationResolvers.Lab_attachmentsRelationsResolver,
  Lab_documents: relationResolvers.Lab_documentsRelationsResolver,
  Lab_requests: relationResolvers.Lab_requestsRelationsResolver,
  Lab_results: relationResolvers.Lab_resultsRelationsResolver,
  Laboratories: relationResolvers.LaboratoriesRelationsResolver,
  Medications: relationResolvers.MedicationsRelationsResolver,
  Patients: relationResolvers.PatientsRelationsResolver,
  Prescriptions: relationResolvers.PrescriptionsRelationsResolver,
  Rdv_requests: relationResolvers.Rdv_requestsRelationsResolver,
  Rdvs: relationResolvers.RdvsRelationsResolver,
  Users: relationResolvers.UsersRelationsResolver,
  Xray_results: relationResolvers.Xray_resultsRelationsResolver
};
const relationResolversInfo = {
  GeneralMedicalRecords: ["patients_GeneralMedicalRecords_patient_idTopatients", "patients_patients_general_medical_record_idToGeneralMedicalRecords"],
  Analysis_results: ["lab_documents"],
  Authorizations: ["instituts_medicaux", "patients"],
  Certificates: ["doctors", "patients"],
  Consultations: ["lab_requests", "prescriptions", "instituts_medicaux", "patients", "doctors", "rdvs"],
  Ctscan_results: ["lab_documents"],
  Doctors: ["certificates", "consultations", "instituts_medicaux", "users", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  Instituts_medicaux: ["authorizations", "consultations", "doctors"],
  Lab_attachments: ["lab_documents"],
  Lab_documents: ["analysis_results", "ctscan_results", "lab_attachments", "laboratories", "patients", "lab_requests", "lab_results", "xray_results"],
  Lab_requests: ["consultations", "lab_documents", "doctors", "patients"],
  Lab_results: ["lab_documents"],
  Laboratories: ["lab_documents"],
  Medications: ["prescriptions"],
  Patients: ["GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  Prescriptions: ["consultations", "medications", "doctors", "patients"],
  Rdv_requests: ["rdvs_rdv_requests_rdv_idTordvs", "patients", "doctors", "rdvs_rdvs_rdv_request_idTordv_requests"],
  Rdvs: ["rdv_requests_rdv_requests_rdv_idTordvs", "consultations", "patients", "rdv_requests_rdvs_rdv_request_idTordv_requests", "doctors"],
  Users: ["doctors", "patients"],
  Xray_results: ["lab_documents"]
};

type RelationResolverModelNames = keyof typeof relationResolversMap;

type RelationResolverActionNames<
  TModel extends RelationResolverModelNames
> = keyof typeof relationResolversMap[TModel]["prototype"];

export type RelationResolverActionsConfig<TModel extends RelationResolverModelNames>
  = Partial<Record<RelationResolverActionNames<TModel>, MethodDecorator[] | MethodDecoratorOverrideFn>>
  & { _all?: MethodDecorator[] };

export type RelationResolversEnhanceMap = {
  [TModel in RelationResolverModelNames]?: RelationResolverActionsConfig<TModel>;
};

export function applyRelationResolversEnhanceMap(
  relationResolversEnhanceMap: RelationResolversEnhanceMap,
) {
  for (const relationResolversEnhanceMapKey of Object.keys(relationResolversEnhanceMap)) {
    const modelName = relationResolversEnhanceMapKey as keyof typeof relationResolversEnhanceMap;
    const relationResolverTarget = relationResolversMap[modelName].prototype;
    const relationResolverActionsConfig = relationResolversEnhanceMap[modelName]!;
    const allActionsDecorators = relationResolverActionsConfig._all ?? [];
    const relationResolverActionNames = relationResolversInfo[modelName as keyof typeof relationResolversInfo];
    for (const relationResolverActionName of relationResolverActionNames) {
      const maybeDecoratorsOrFn = relationResolverActionsConfig[
        relationResolverActionName as keyof typeof relationResolverActionsConfig
      ] as MethodDecorator[] | MethodDecoratorOverrideFn | undefined;
      let decorators: MethodDecorator[];
      if (typeof maybeDecoratorsOrFn === "function") {
        decorators = maybeDecoratorsOrFn(allActionsDecorators);
      } else {
        decorators = [...allActionsDecorators, ...maybeDecoratorsOrFn ?? []];
      }
      tslib.__decorate(decorators, relationResolverTarget, relationResolverActionName, null);
    }
  }
}

type TypeConfig = {
  class?: ClassDecorator[];
  fields?: FieldsConfig;
};

export type PropertyDecoratorOverrideFn = (decorators: PropertyDecorator[]) => PropertyDecorator[];

type FieldsConfig<TTypeKeys extends string = string> = Partial<
  Record<TTypeKeys, PropertyDecorator[] | PropertyDecoratorOverrideFn>
> & { _all?: PropertyDecorator[] };

function applyTypeClassEnhanceConfig<
  TEnhanceConfig extends TypeConfig,
  TType extends object
>(
  enhanceConfig: TEnhanceConfig,
  typeClass: ClassType<TType>,
  typePrototype: TType,
  typeFieldNames: string[]
) {
  if (enhanceConfig.class) {
    tslib.__decorate(enhanceConfig.class, typeClass);
  }
  if (enhanceConfig.fields) {
    const allFieldsDecorators = enhanceConfig.fields._all ?? [];
    for (const typeFieldName of typeFieldNames) {
      const maybeDecoratorsOrFn = enhanceConfig.fields[
        typeFieldName
      ] as PropertyDecorator[] | PropertyDecoratorOverrideFn | undefined;
      let decorators: PropertyDecorator[];
      if (typeof maybeDecoratorsOrFn === "function") {
        decorators = maybeDecoratorsOrFn(allFieldsDecorators);
      } else {
        decorators = [...allFieldsDecorators, ...maybeDecoratorsOrFn ?? []];
      }
      tslib.__decorate(decorators, typePrototype, typeFieldName, void 0);
    }
  }
}

const modelsInfo = {
  GeneralMedicalRecords: ["id", "allergies", "bloodType", "birthDate", "height", "weight", "patient_id"],
  Analysis_results: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id"],
  Authorizations: ["id", "level", "institut_medical_id", "patient_id"],
  Certificates: ["id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id"],
  Cliniques: ["id", "type", "name", "address", "phone", "email"],
  Consultations: ["id", "section", "date", "notes", "measures", "doctor_id", "institut_medical_id", "prescription_id", "patient_id"],
  Ctscan_results: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Doctors: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "user_id"],
  Instituts_medicaux: ["id", "type"],
  Lab_attachments: ["id", "name", "type", "url", "lab_document_id"],
  Lab_documents: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id"],
  Lab_requests: ["id", "type", "priority", "description", "doctor_id", "patient_id"],
  Lab_results: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Laboratories: ["id", "address", "phone", "email", "name"],
  Medications: ["id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id"],
  Patients: ["id", "cin", "date_of_birth", "gender", "profile_image", "general_medical_record_id", "user_id"],
  Pharmacies: ["id", "address", "phone", "email", "name"],
  Prescriptions: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id"],
  Rdv_requests: ["id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id"],
  Rdvs: ["id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id"],
  Users: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at"],
  Xray_results: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"]
};

type ModelNames = keyof typeof models;

type ModelFieldNames<TModel extends ModelNames> = Exclude<
  keyof typeof models[TModel]["prototype"],
  number | symbol
>;

type ModelFieldsConfig<TModel extends ModelNames> = FieldsConfig<
  ModelFieldNames<TModel>
>;

export type ModelConfig<TModel extends ModelNames> = {
  class?: ClassDecorator[];
  fields?: ModelFieldsConfig<TModel>;
};

export type ModelsEnhanceMap = {
  [TModel in ModelNames]?: ModelConfig<TModel>;
};

export function applyModelsEnhanceMap(modelsEnhanceMap: ModelsEnhanceMap) {
  for (const modelsEnhanceMapKey of Object.keys(modelsEnhanceMap)) {
    const modelName = modelsEnhanceMapKey as keyof typeof modelsEnhanceMap;
    const modelConfig = modelsEnhanceMap[modelName]!;
    const modelClass = models[modelName];
    const modelTarget = modelClass.prototype;
    applyTypeClassEnhanceConfig(
      modelConfig,
      modelClass,
      modelTarget,
      modelsInfo[modelName as keyof typeof modelsInfo],
    );
  }
}

const outputsInfo = {
  AggregateGeneralMedicalRecords: ["_count", "_avg", "_sum", "_min", "_max"],
  GeneralMedicalRecordsGroupBy: ["id", "allergies", "bloodType", "birthDate", "height", "weight", "patient_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregateAnalysis_results: ["_count", "_min", "_max"],
  Analysis_resultsGroupBy: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id", "_count", "_min", "_max"],
  AggregateAuthorizations: ["_count", "_min", "_max"],
  AuthorizationsGroupBy: ["id", "level", "institut_medical_id", "patient_id", "_count", "_min", "_max"],
  AggregateCertificates: ["_count", "_min", "_max"],
  CertificatesGroupBy: ["id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id", "_count", "_min", "_max"],
  AggregateCliniques: ["_count", "_min", "_max"],
  CliniquesGroupBy: ["id", "type", "name", "address", "phone", "email", "_count", "_min", "_max"],
  AggregateConsultations: ["_count", "_min", "_max"],
  ConsultationsGroupBy: ["id", "section", "date", "notes", "measures", "doctor_id", "institut_medical_id", "prescription_id", "patient_id", "_count", "_min", "_max"],
  AggregateCtscan_results: ["_count", "_min", "_max"],
  Ctscan_resultsGroupBy: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "_count", "_min", "_max"],
  AggregateDoctors: ["_count", "_min", "_max"],
  DoctorsGroupBy: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "user_id", "_count", "_min", "_max"],
  AggregateInstituts_medicaux: ["_count", "_min", "_max"],
  Instituts_medicauxGroupBy: ["id", "type", "_count", "_min", "_max"],
  AggregateLab_attachments: ["_count", "_min", "_max"],
  Lab_attachmentsGroupBy: ["id", "name", "type", "url", "lab_document_id", "_count", "_min", "_max"],
  AggregateLab_documents: ["_count", "_min", "_max"],
  Lab_documentsGroupBy: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id", "_count", "_min", "_max"],
  AggregateLab_requests: ["_count", "_min", "_max"],
  Lab_requestsGroupBy: ["id", "type", "priority", "description", "doctor_id", "patient_id", "_count", "_min", "_max"],
  AggregateLab_results: ["_count", "_min", "_max"],
  Lab_resultsGroupBy: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "_count", "_min", "_max"],
  AggregateLaboratories: ["_count", "_min", "_max"],
  LaboratoriesGroupBy: ["id", "address", "phone", "email", "name", "_count", "_min", "_max"],
  AggregateMedications: ["_count", "_avg", "_sum", "_min", "_max"],
  MedicationsGroupBy: ["id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePatients: ["_count", "_avg", "_sum", "_min", "_max"],
  PatientsGroupBy: ["id", "cin", "date_of_birth", "gender", "profile_image", "general_medical_record_id", "user_id", "_count", "_avg", "_sum", "_min", "_max"],
  AggregatePharmacies: ["_count", "_min", "_max"],
  PharmaciesGroupBy: ["id", "address", "phone", "email", "name", "_count", "_min", "_max"],
  AggregatePrescriptions: ["_count", "_min", "_max"],
  PrescriptionsGroupBy: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id", "_count", "_min", "_max"],
  AggregateRdv_requests: ["_count", "_min", "_max"],
  Rdv_requestsGroupBy: ["id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id", "_count", "_min", "_max"],
  AggregateRdvs: ["_count", "_min", "_max"],
  RdvsGroupBy: ["id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id", "_count", "_min", "_max"],
  AggregateUsers: ["_count", "_min", "_max"],
  UsersGroupBy: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at", "_count", "_min", "_max"],
  AggregateXray_results: ["_count", "_min", "_max"],
  Xray_resultsGroupBy: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "_count", "_min", "_max"],
  AffectedRowsOutput: ["count"],
  GeneralMedicalRecordsCountAggregate: ["id", "allergies", "bloodType", "birthDate", "height", "weight", "patient_id", "_all"],
  GeneralMedicalRecordsAvgAggregate: ["height", "weight"],
  GeneralMedicalRecordsSumAggregate: ["height", "weight"],
  GeneralMedicalRecordsMinAggregate: ["id", "bloodType", "birthDate", "height", "weight", "patient_id"],
  GeneralMedicalRecordsMaxAggregate: ["id", "bloodType", "birthDate", "height", "weight", "patient_id"],
  Analysis_resultsCountAggregate: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id", "_all"],
  Analysis_resultsMinAggregate: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id"],
  Analysis_resultsMaxAggregate: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id"],
  AuthorizationsCountAggregate: ["id", "level", "institut_medical_id", "patient_id", "_all"],
  AuthorizationsMinAggregate: ["id", "level", "institut_medical_id", "patient_id"],
  AuthorizationsMaxAggregate: ["id", "level", "institut_medical_id", "patient_id"],
  CertificatesCountAggregate: ["id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id", "_all"],
  CertificatesMinAggregate: ["id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id"],
  CertificatesMaxAggregate: ["id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id"],
  CliniquesCountAggregate: ["id", "type", "name", "address", "phone", "email", "_all"],
  CliniquesMinAggregate: ["id", "type", "name", "address", "phone", "email"],
  CliniquesMaxAggregate: ["id", "type", "name", "address", "phone", "email"],
  ConsultationsCount: ["lab_requests"],
  ConsultationsCountAggregate: ["id", "section", "date", "notes", "measures", "doctor_id", "institut_medical_id", "prescription_id", "patient_id", "_all"],
  ConsultationsMinAggregate: ["id", "section", "date", "doctor_id", "institut_medical_id", "prescription_id", "patient_id"],
  ConsultationsMaxAggregate: ["id", "section", "date", "doctor_id", "institut_medical_id", "prescription_id", "patient_id"],
  Ctscan_resultsCountAggregate: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "_all"],
  Ctscan_resultsMinAggregate: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Ctscan_resultsMaxAggregate: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  DoctorsCount: ["certificates", "consultations", "instituts_medicaux", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  DoctorsCountAggregate: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "user_id", "_all"],
  DoctorsMinAggregate: ["id", "type", "bio", "first_name", "last_name", "profile_image", "specialty", "user_id"],
  DoctorsMaxAggregate: ["id", "type", "bio", "first_name", "last_name", "profile_image", "specialty", "user_id"],
  Instituts_medicauxCount: ["authorizations", "consultations", "doctors"],
  Instituts_medicauxCountAggregate: ["id", "type", "_all"],
  Instituts_medicauxMinAggregate: ["id", "type"],
  Instituts_medicauxMaxAggregate: ["id", "type"],
  Lab_attachmentsCountAggregate: ["id", "name", "type", "url", "lab_document_id", "_all"],
  Lab_attachmentsMinAggregate: ["id", "name", "type", "url", "lab_document_id"],
  Lab_attachmentsMaxAggregate: ["id", "name", "type", "url", "lab_document_id"],
  Lab_documentsCount: ["analysis_results", "ctscan_results", "lab_attachments", "lab_results", "xray_results"],
  Lab_documentsCountAggregate: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id", "_all"],
  Lab_documentsMinAggregate: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id"],
  Lab_documentsMaxAggregate: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id"],
  Lab_requestsCount: ["consultations", "lab_documents"],
  Lab_requestsCountAggregate: ["id", "type", "priority", "description", "doctor_id", "patient_id", "_all"],
  Lab_requestsMinAggregate: ["id", "type", "priority", "description", "doctor_id", "patient_id"],
  Lab_requestsMaxAggregate: ["id", "type", "priority", "description", "doctor_id", "patient_id"],
  Lab_resultsCountAggregate: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "_all"],
  Lab_resultsMinAggregate: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Lab_resultsMaxAggregate: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  LaboratoriesCount: ["lab_documents"],
  LaboratoriesCountAggregate: ["id", "address", "phone", "email", "name", "_all"],
  LaboratoriesMinAggregate: ["id", "address", "phone", "email", "name"],
  LaboratoriesMaxAggregate: ["id", "address", "phone", "email", "name"],
  MedicationsCountAggregate: ["id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id", "_all"],
  MedicationsAvgAggregate: ["quantity"],
  MedicationsSumAggregate: ["quantity"],
  MedicationsMinAggregate: ["id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id"],
  MedicationsMaxAggregate: ["id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id"],
  PatientsCount: ["authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  PatientsCountAggregate: ["id", "cin", "date_of_birth", "gender", "profile_image", "general_medical_record_id", "user_id", "_all"],
  PatientsAvgAggregate: ["cin"],
  PatientsSumAggregate: ["cin"],
  PatientsMinAggregate: ["id", "cin", "date_of_birth", "gender", "profile_image", "general_medical_record_id", "user_id"],
  PatientsMaxAggregate: ["id", "cin", "date_of_birth", "gender", "profile_image", "general_medical_record_id", "user_id"],
  PharmaciesCountAggregate: ["id", "address", "phone", "email", "name", "_all"],
  PharmaciesMinAggregate: ["id", "address", "phone", "email", "name"],
  PharmaciesMaxAggregate: ["id", "address", "phone", "email", "name"],
  PrescriptionsCount: ["medications"],
  PrescriptionsCountAggregate: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id", "_all"],
  PrescriptionsMinAggregate: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id"],
  PrescriptionsMaxAggregate: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id"],
  Rdv_requestsCountAggregate: ["id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id", "_all"],
  Rdv_requestsMinAggregate: ["id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id"],
  Rdv_requestsMaxAggregate: ["id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id"],
  RdvsCountAggregate: ["id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id", "_all"],
  RdvsMinAggregate: ["id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id"],
  RdvsMaxAggregate: ["id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id"],
  UsersCountAggregate: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at", "_all"],
  UsersMinAggregate: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at"],
  UsersMaxAggregate: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at"],
  Xray_resultsCountAggregate: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "_all"],
  Xray_resultsMinAggregate: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Xray_resultsMaxAggregate: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  CreateManyAndReturnGeneralMedicalRecords: ["id", "allergies", "bloodType", "birthDate", "height", "weight", "patient_id", "patients_GeneralMedicalRecords_patient_idTopatients"],
  CreateManyAndReturnAnalysis_results: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id", "lab_documents"],
  CreateManyAndReturnAuthorizations: ["id", "level", "institut_medical_id", "patient_id", "instituts_medicaux", "patients"],
  CreateManyAndReturnCertificates: ["id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id", "doctors", "patients"],
  CreateManyAndReturnCliniques: ["id", "type", "name", "address", "phone", "email"],
  CreateManyAndReturnConsultations: ["id", "section", "date", "notes", "measures", "doctor_id", "institut_medical_id", "prescription_id", "patient_id", "prescriptions", "instituts_medicaux", "patients", "doctors"],
  CreateManyAndReturnCtscan_results: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "lab_documents"],
  CreateManyAndReturnDoctors: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "user_id", "users"],
  CreateManyAndReturnInstituts_medicaux: ["id", "type"],
  CreateManyAndReturnLab_attachments: ["id", "name", "type", "url", "lab_document_id", "lab_documents"],
  CreateManyAndReturnLab_documents: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id", "laboratories", "patients", "lab_requests"],
  CreateManyAndReturnLab_requests: ["id", "type", "priority", "description", "doctor_id", "patient_id", "doctors", "patients"],
  CreateManyAndReturnLab_results: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "lab_documents"],
  CreateManyAndReturnLaboratories: ["id", "address", "phone", "email", "name"],
  CreateManyAndReturnMedications: ["id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id", "prescriptions"],
  CreateManyAndReturnPatients: ["id", "cin", "date_of_birth", "gender", "profile_image", "general_medical_record_id", "user_id", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords"],
  CreateManyAndReturnPharmacies: ["id", "address", "phone", "email", "name"],
  CreateManyAndReturnPrescriptions: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id", "doctors", "patients"],
  CreateManyAndReturnRdv_requests: ["id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id", "rdvs_rdv_requests_rdv_idTordvs", "patients", "doctors"],
  CreateManyAndReturnRdvs: ["id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id", "consultations", "patients", "rdv_requests_rdvs_rdv_request_idTordv_requests", "doctors"],
  CreateManyAndReturnUsers: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at"],
  CreateManyAndReturnXray_results: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "lab_documents"]
};

type OutputTypesNames = keyof typeof outputTypes;

type OutputTypeFieldNames<TOutput extends OutputTypesNames> = Exclude<
  keyof typeof outputTypes[TOutput]["prototype"],
  number | symbol
>;

type OutputTypeFieldsConfig<
  TOutput extends OutputTypesNames
> = FieldsConfig<OutputTypeFieldNames<TOutput>>;

export type OutputTypeConfig<TOutput extends OutputTypesNames> = {
  class?: ClassDecorator[];
  fields?: OutputTypeFieldsConfig<TOutput>;
};

export type OutputTypesEnhanceMap = {
  [TOutput in OutputTypesNames]?: OutputTypeConfig<TOutput>;
};

export function applyOutputTypesEnhanceMap(
  outputTypesEnhanceMap: OutputTypesEnhanceMap,
) {
  for (const outputTypeEnhanceMapKey of Object.keys(outputTypesEnhanceMap)) {
    const outputTypeName = outputTypeEnhanceMapKey as keyof typeof outputTypesEnhanceMap;
    const typeConfig = outputTypesEnhanceMap[outputTypeName]!;
    const typeClass = outputTypes[outputTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(
      typeConfig,
      typeClass,
      typeTarget,
      outputsInfo[outputTypeName as keyof typeof outputsInfo],
    );
  }
}

const inputsInfo = {
  GeneralMedicalRecordsWhereInput: ["AND", "OR", "NOT", "id", "allergies", "bloodType", "birthDate", "height", "weight", "patient_id", "patients_GeneralMedicalRecords_patient_idTopatients", "patients_patients_general_medical_record_idToGeneralMedicalRecords"],
  GeneralMedicalRecordsOrderByWithRelationInput: ["id", "allergies", "bloodType", "birthDate", "height", "weight", "patient_id", "patients_GeneralMedicalRecords_patient_idTopatients", "patients_patients_general_medical_record_idToGeneralMedicalRecords"],
  GeneralMedicalRecordsWhereUniqueInput: ["id", "patient_id", "AND", "OR", "NOT", "allergies", "bloodType", "birthDate", "height", "weight", "patients_GeneralMedicalRecords_patient_idTopatients", "patients_patients_general_medical_record_idToGeneralMedicalRecords"],
  GeneralMedicalRecordsOrderByWithAggregationInput: ["id", "allergies", "bloodType", "birthDate", "height", "weight", "patient_id", "_count", "_avg", "_max", "_min", "_sum"],
  GeneralMedicalRecordsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "allergies", "bloodType", "birthDate", "height", "weight", "patient_id"],
  Analysis_resultsWhereInput: ["AND", "OR", "NOT", "id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id", "lab_documents"],
  Analysis_resultsOrderByWithRelationInput: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id", "lab_documents"],
  Analysis_resultsWhereUniqueInput: ["id", "AND", "OR", "NOT", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id", "lab_documents"],
  Analysis_resultsOrderByWithAggregationInput: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id", "_count", "_max", "_min"],
  Analysis_resultsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id"],
  AuthorizationsWhereInput: ["AND", "OR", "NOT", "id", "level", "institut_medical_id", "patient_id", "instituts_medicaux", "patients"],
  AuthorizationsOrderByWithRelationInput: ["id", "level", "institut_medical_id", "patient_id", "instituts_medicaux", "patients"],
  AuthorizationsWhereUniqueInput: ["id", "AND", "OR", "NOT", "level", "institut_medical_id", "patient_id", "instituts_medicaux", "patients"],
  AuthorizationsOrderByWithAggregationInput: ["id", "level", "institut_medical_id", "patient_id", "_count", "_max", "_min"],
  AuthorizationsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "level", "institut_medical_id", "patient_id"],
  CertificatesWhereInput: ["AND", "OR", "NOT", "id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id", "doctors", "patients"],
  CertificatesOrderByWithRelationInput: ["id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id", "doctors", "patients"],
  CertificatesWhereUniqueInput: ["id", "AND", "OR", "NOT", "type", "start_date", "end_date", "description", "doctor_id", "patient_id", "doctors", "patients"],
  CertificatesOrderByWithAggregationInput: ["id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id", "_count", "_max", "_min"],
  CertificatesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id"],
  CliniquesWhereInput: ["AND", "OR", "NOT", "id", "type", "name", "address", "phone", "email"],
  CliniquesOrderByWithRelationInput: ["id", "type", "name", "address", "phone", "email"],
  CliniquesWhereUniqueInput: ["id", "AND", "OR", "NOT", "type", "name", "address", "phone", "email"],
  CliniquesOrderByWithAggregationInput: ["id", "type", "name", "address", "phone", "email", "_count", "_max", "_min"],
  CliniquesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "type", "name", "address", "phone", "email"],
  ConsultationsWhereInput: ["AND", "OR", "NOT", "id", "section", "date", "notes", "measures", "doctor_id", "institut_medical_id", "prescription_id", "patient_id", "lab_requests", "prescriptions", "instituts_medicaux", "patients", "doctors", "rdvs"],
  ConsultationsOrderByWithRelationInput: ["id", "section", "date", "notes", "measures", "doctor_id", "institut_medical_id", "prescription_id", "patient_id", "lab_requests", "prescriptions", "instituts_medicaux", "patients", "doctors", "rdvs"],
  ConsultationsWhereUniqueInput: ["id", "prescription_id", "AND", "OR", "NOT", "section", "date", "notes", "measures", "doctor_id", "institut_medical_id", "patient_id", "lab_requests", "prescriptions", "instituts_medicaux", "patients", "doctors", "rdvs"],
  ConsultationsOrderByWithAggregationInput: ["id", "section", "date", "notes", "measures", "doctor_id", "institut_medical_id", "prescription_id", "patient_id", "_count", "_max", "_min"],
  ConsultationsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "section", "date", "notes", "measures", "doctor_id", "institut_medical_id", "prescription_id", "patient_id"],
  Ctscan_resultsWhereInput: ["AND", "OR", "NOT", "id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "lab_documents"],
  Ctscan_resultsOrderByWithRelationInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "lab_documents"],
  Ctscan_resultsWhereUniqueInput: ["id", "AND", "OR", "NOT", "is_abnormal", "description", "title", "result_type", "lab_document_id", "lab_documents"],
  Ctscan_resultsOrderByWithAggregationInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "_count", "_max", "_min"],
  Ctscan_resultsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  DoctorsWhereInput: ["AND", "OR", "NOT", "id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "user_id", "certificates", "consultations", "instituts_medicaux", "users", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  DoctorsOrderByWithRelationInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "user_id", "certificates", "consultations", "instituts_medicaux", "users", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  DoctorsWhereUniqueInput: ["id", "user_id", "AND", "OR", "NOT", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "instituts_medicaux", "users", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  DoctorsOrderByWithAggregationInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "user_id", "_count", "_max", "_min"],
  DoctorsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "user_id"],
  Instituts_medicauxWhereInput: ["AND", "OR", "NOT", "id", "type", "authorizations", "consultations", "doctors"],
  Instituts_medicauxOrderByWithRelationInput: ["id", "type", "authorizations", "consultations", "doctors"],
  Instituts_medicauxWhereUniqueInput: ["id", "AND", "OR", "NOT", "type", "authorizations", "consultations", "doctors"],
  Instituts_medicauxOrderByWithAggregationInput: ["id", "type", "_count", "_max", "_min"],
  Instituts_medicauxScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "type"],
  Lab_attachmentsWhereInput: ["AND", "OR", "NOT", "id", "name", "type", "url", "lab_document_id", "lab_documents"],
  Lab_attachmentsOrderByWithRelationInput: ["id", "name", "type", "url", "lab_document_id", "lab_documents"],
  Lab_attachmentsWhereUniqueInput: ["id", "AND", "OR", "NOT", "name", "type", "url", "lab_document_id", "lab_documents"],
  Lab_attachmentsOrderByWithAggregationInput: ["id", "name", "type", "url", "lab_document_id", "_count", "_max", "_min"],
  Lab_attachmentsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "type", "url", "lab_document_id"],
  Lab_documentsWhereInput: ["AND", "OR", "NOT", "id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id", "analysis_results", "ctscan_results", "lab_attachments", "laboratories", "patients", "lab_requests", "lab_results", "xray_results"],
  Lab_documentsOrderByWithRelationInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id", "analysis_results", "ctscan_results", "lab_attachments", "laboratories", "patients", "lab_requests", "lab_results", "xray_results"],
  Lab_documentsWhereUniqueInput: ["id", "AND", "OR", "NOT", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id", "analysis_results", "ctscan_results", "lab_attachments", "laboratories", "patients", "lab_requests", "lab_results", "xray_results"],
  Lab_documentsOrderByWithAggregationInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id", "_count", "_max", "_min"],
  Lab_documentsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id"],
  Lab_requestsWhereInput: ["AND", "OR", "NOT", "id", "type", "priority", "description", "doctor_id", "patient_id", "consultations", "lab_documents", "doctors", "patients"],
  Lab_requestsOrderByWithRelationInput: ["id", "type", "priority", "description", "doctor_id", "patient_id", "consultations", "lab_documents", "doctors", "patients"],
  Lab_requestsWhereUniqueInput: ["id", "AND", "OR", "NOT", "type", "priority", "description", "doctor_id", "patient_id", "consultations", "lab_documents", "doctors", "patients"],
  Lab_requestsOrderByWithAggregationInput: ["id", "type", "priority", "description", "doctor_id", "patient_id", "_count", "_max", "_min"],
  Lab_requestsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "type", "priority", "description", "doctor_id", "patient_id"],
  Lab_resultsWhereInput: ["AND", "OR", "NOT", "id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "lab_documents"],
  Lab_resultsOrderByWithRelationInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "lab_documents"],
  Lab_resultsWhereUniqueInput: ["id", "AND", "OR", "NOT", "is_abnormal", "description", "title", "result_type", "lab_document_id", "lab_documents"],
  Lab_resultsOrderByWithAggregationInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "_count", "_max", "_min"],
  Lab_resultsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  LaboratoriesWhereInput: ["AND", "OR", "NOT", "id", "address", "phone", "email", "name", "lab_documents"],
  LaboratoriesOrderByWithRelationInput: ["id", "address", "phone", "email", "name", "lab_documents"],
  LaboratoriesWhereUniqueInput: ["id", "AND", "OR", "NOT", "address", "phone", "email", "name", "lab_documents"],
  LaboratoriesOrderByWithAggregationInput: ["id", "address", "phone", "email", "name", "_count", "_max", "_min"],
  LaboratoriesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "address", "phone", "email", "name"],
  MedicationsWhereInput: ["AND", "OR", "NOT", "id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id", "prescriptions"],
  MedicationsOrderByWithRelationInput: ["id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id", "prescriptions"],
  MedicationsWhereUniqueInput: ["id", "AND", "OR", "NOT", "dosage", "duration", "frequency", "name", "quantity", "prescription_id", "prescriptions"],
  MedicationsOrderByWithAggregationInput: ["id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id", "_count", "_avg", "_max", "_min", "_sum"],
  MedicationsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id"],
  PatientsWhereInput: ["AND", "OR", "NOT", "id", "cin", "date_of_birth", "gender", "profile_image", "general_medical_record_id", "user_id", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  PatientsOrderByWithRelationInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "general_medical_record_id", "user_id", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  PatientsWhereUniqueInput: ["id", "cin", "general_medical_record_id", "user_id", "AND", "OR", "NOT", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  PatientsOrderByWithAggregationInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "general_medical_record_id", "user_id", "_count", "_avg", "_max", "_min", "_sum"],
  PatientsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "cin", "date_of_birth", "gender", "profile_image", "general_medical_record_id", "user_id"],
  PharmaciesWhereInput: ["AND", "OR", "NOT", "id", "address", "phone", "email", "name"],
  PharmaciesOrderByWithRelationInput: ["id", "address", "phone", "email", "name"],
  PharmaciesWhereUniqueInput: ["id", "AND", "OR", "NOT", "address", "phone", "email", "name"],
  PharmaciesOrderByWithAggregationInput: ["id", "address", "phone", "email", "name", "_count", "_max", "_min"],
  PharmaciesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "address", "phone", "email", "name"],
  PrescriptionsWhereInput: ["AND", "OR", "NOT", "id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id", "consultations", "medications", "doctors", "patients"],
  PrescriptionsOrderByWithRelationInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id", "consultations", "medications", "doctors", "patients"],
  PrescriptionsWhereUniqueInput: ["id", "AND", "OR", "NOT", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id", "consultations", "medications", "doctors", "patients"],
  PrescriptionsOrderByWithAggregationInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id", "_count", "_max", "_min"],
  PrescriptionsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id"],
  Rdv_requestsWhereInput: ["AND", "OR", "NOT", "id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id", "rdvs_rdv_requests_rdv_idTordvs", "patients", "doctors", "rdvs_rdvs_rdv_request_idTordv_requests"],
  Rdv_requestsOrderByWithRelationInput: ["id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id", "rdvs_rdv_requests_rdv_idTordvs", "patients", "doctors", "rdvs_rdvs_rdv_request_idTordv_requests"],
  Rdv_requestsWhereUniqueInput: ["id", "rdv_id", "AND", "OR", "NOT", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdvs_rdv_requests_rdv_idTordvs", "patients", "doctors", "rdvs_rdvs_rdv_request_idTordv_requests"],
  Rdv_requestsOrderByWithAggregationInput: ["id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id", "_count", "_max", "_min"],
  Rdv_requestsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id"],
  RdvsWhereInput: ["AND", "OR", "NOT", "id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id", "rdv_requests_rdv_requests_rdv_idTordvs", "consultations", "patients", "rdv_requests_rdvs_rdv_request_idTordv_requests", "doctors"],
  RdvsOrderByWithRelationInput: ["id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id", "rdv_requests_rdv_requests_rdv_idTordvs", "consultations", "patients", "rdv_requests_rdvs_rdv_request_idTordv_requests", "doctors"],
  RdvsWhereUniqueInput: ["id", "consultation_id", "rdv_request_id", "AND", "OR", "NOT", "date", "time", "patient_id", "doctor_id", "rdv_requests_rdv_requests_rdv_idTordvs", "consultations", "patients", "rdv_requests_rdvs_rdv_request_idTordv_requests", "doctors"],
  RdvsOrderByWithAggregationInput: ["id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id", "_count", "_max", "_min"],
  RdvsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id"],
  UsersWhereInput: ["AND", "OR", "NOT", "id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at", "doctors", "patients"],
  UsersOrderByWithRelationInput: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at", "doctors", "patients"],
  UsersWhereUniqueInput: ["id", "email", "AND", "OR", "NOT", "address", "created_at", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at", "doctors", "patients"],
  UsersOrderByWithAggregationInput: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at", "_count", "_max", "_min"],
  UsersScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at"],
  Xray_resultsWhereInput: ["AND", "OR", "NOT", "id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "lab_documents"],
  Xray_resultsOrderByWithRelationInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "lab_documents"],
  Xray_resultsWhereUniqueInput: ["id", "AND", "OR", "NOT", "is_abnormal", "description", "title", "result_type", "lab_document_id", "lab_documents"],
  Xray_resultsOrderByWithAggregationInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id", "_count", "_max", "_min"],
  Xray_resultsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  GeneralMedicalRecordsCreateInput: ["id", "allergies", "bloodType", "birthDate", "height", "weight", "patients_GeneralMedicalRecords_patient_idTopatients", "patients_patients_general_medical_record_idToGeneralMedicalRecords"],
  GeneralMedicalRecordsUpdateInput: ["id", "allergies", "bloodType", "birthDate", "height", "weight", "patients_GeneralMedicalRecords_patient_idTopatients", "patients_patients_general_medical_record_idToGeneralMedicalRecords"],
  GeneralMedicalRecordsCreateManyInput: ["id", "allergies", "bloodType", "birthDate", "height", "weight", "patient_id"],
  GeneralMedicalRecordsUpdateManyMutationInput: ["id", "allergies", "bloodType", "birthDate", "height", "weight"],
  Analysis_resultsCreateInput: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_documents"],
  Analysis_resultsUpdateInput: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_documents"],
  Analysis_resultsCreateManyInput: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id"],
  Analysis_resultsUpdateManyMutationInput: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value"],
  AuthorizationsCreateInput: ["id", "level", "instituts_medicaux", "patients"],
  AuthorizationsUpdateInput: ["id", "level", "instituts_medicaux", "patients"],
  AuthorizationsCreateManyInput: ["id", "level", "institut_medical_id", "patient_id"],
  AuthorizationsUpdateManyMutationInput: ["id", "level"],
  CertificatesCreateInput: ["id", "type", "start_date", "end_date", "description", "doctors", "patients"],
  CertificatesUpdateInput: ["id", "type", "start_date", "end_date", "description", "doctors", "patients"],
  CertificatesCreateManyInput: ["id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id"],
  CertificatesUpdateManyMutationInput: ["id", "type", "start_date", "end_date", "description"],
  CliniquesCreateInput: ["id", "type", "name", "address", "phone", "email"],
  CliniquesUpdateInput: ["id", "type", "name", "address", "phone", "email"],
  CliniquesCreateManyInput: ["id", "type", "name", "address", "phone", "email"],
  CliniquesUpdateManyMutationInput: ["id", "type", "name", "address", "phone", "email"],
  ConsultationsCreateInput: ["id", "section", "date", "notes", "measures", "lab_requests", "prescriptions", "instituts_medicaux", "patients", "doctors", "rdvs"],
  ConsultationsUpdateInput: ["id", "section", "date", "notes", "measures", "lab_requests", "prescriptions", "instituts_medicaux", "patients", "doctors", "rdvs"],
  ConsultationsCreateManyInput: ["id", "section", "date", "notes", "measures", "doctor_id", "institut_medical_id", "prescription_id", "patient_id"],
  ConsultationsUpdateManyMutationInput: ["id", "section", "date", "notes", "measures"],
  Ctscan_resultsCreateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_documents"],
  Ctscan_resultsUpdateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_documents"],
  Ctscan_resultsCreateManyInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Ctscan_resultsUpdateManyMutationInput: ["id", "is_abnormal", "description", "title", "result_type"],
  DoctorsCreateInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "instituts_medicaux", "users", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  DoctorsUpdateInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "instituts_medicaux", "users", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  DoctorsCreateManyInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "user_id"],
  DoctorsUpdateManyMutationInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty"],
  Instituts_medicauxCreateInput: ["id", "type", "authorizations", "consultations", "doctors"],
  Instituts_medicauxUpdateInput: ["id", "type", "authorizations", "consultations", "doctors"],
  Instituts_medicauxCreateManyInput: ["id", "type"],
  Instituts_medicauxUpdateManyMutationInput: ["id", "type"],
  Lab_attachmentsCreateInput: ["id", "name", "type", "url", "lab_documents"],
  Lab_attachmentsUpdateInput: ["id", "name", "type", "url", "lab_documents"],
  Lab_attachmentsCreateManyInput: ["id", "name", "type", "url", "lab_document_id"],
  Lab_attachmentsUpdateManyMutationInput: ["id", "name", "type", "url"],
  Lab_documentsCreateInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "ctscan_results", "lab_attachments", "laboratories", "patients", "lab_requests", "lab_results", "xray_results"],
  Lab_documentsUpdateInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "ctscan_results", "lab_attachments", "laboratories", "patients", "lab_requests", "lab_results", "xray_results"],
  Lab_documentsCreateManyInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id"],
  Lab_documentsUpdateManyMutationInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section"],
  Lab_requestsCreateInput: ["id", "type", "priority", "description", "consultations", "lab_documents", "doctors", "patients"],
  Lab_requestsUpdateInput: ["id", "type", "priority", "description", "consultations", "lab_documents", "doctors", "patients"],
  Lab_requestsCreateManyInput: ["id", "type", "priority", "description", "doctor_id", "patient_id"],
  Lab_requestsUpdateManyMutationInput: ["id", "type", "priority", "description"],
  Lab_resultsCreateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_documents"],
  Lab_resultsUpdateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_documents"],
  Lab_resultsCreateManyInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Lab_resultsUpdateManyMutationInput: ["id", "is_abnormal", "description", "title", "result_type"],
  LaboratoriesCreateInput: ["id", "address", "phone", "email", "name", "lab_documents"],
  LaboratoriesUpdateInput: ["id", "address", "phone", "email", "name", "lab_documents"],
  LaboratoriesCreateManyInput: ["id", "address", "phone", "email", "name"],
  LaboratoriesUpdateManyMutationInput: ["id", "address", "phone", "email", "name"],
  MedicationsCreateInput: ["id", "dosage", "duration", "frequency", "name", "quantity", "prescriptions"],
  MedicationsUpdateInput: ["id", "dosage", "duration", "frequency", "name", "quantity", "prescriptions"],
  MedicationsCreateManyInput: ["id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id"],
  MedicationsUpdateManyMutationInput: ["id", "dosage", "duration", "frequency", "name", "quantity"],
  PatientsCreateInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  PatientsUpdateInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  PatientsCreateManyInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "general_medical_record_id", "user_id"],
  PatientsUpdateManyMutationInput: ["id", "cin", "date_of_birth", "gender", "profile_image"],
  PharmaciesCreateInput: ["id", "address", "phone", "email", "name"],
  PharmaciesUpdateInput: ["id", "address", "phone", "email", "name"],
  PharmaciesCreateManyInput: ["id", "address", "phone", "email", "name"],
  PharmaciesUpdateManyMutationInput: ["id", "address", "phone", "email", "name"],
  PrescriptionsCreateInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "consultations", "medications", "doctors", "patients"],
  PrescriptionsUpdateInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "consultations", "medications", "doctors", "patients"],
  PrescriptionsCreateManyInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id"],
  PrescriptionsUpdateManyMutationInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at"],
  Rdv_requestsCreateInput: ["id", "date", "time", "Motif", "Status", "rdvs_rdv_requests_rdv_idTordvs", "patients", "doctors", "rdvs_rdvs_rdv_request_idTordv_requests"],
  Rdv_requestsUpdateInput: ["id", "date", "time", "Motif", "Status", "rdvs_rdv_requests_rdv_idTordvs", "patients", "doctors", "rdvs_rdvs_rdv_request_idTordv_requests"],
  Rdv_requestsCreateManyInput: ["id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id"],
  Rdv_requestsUpdateManyMutationInput: ["id", "date", "time", "Motif", "Status"],
  RdvsCreateInput: ["id", "date", "time", "rdv_requests_rdv_requests_rdv_idTordvs", "consultations", "patients", "rdv_requests_rdvs_rdv_request_idTordv_requests", "doctors"],
  RdvsUpdateInput: ["id", "date", "time", "rdv_requests_rdv_requests_rdv_idTordvs", "consultations", "patients", "rdv_requests_rdvs_rdv_request_idTordv_requests", "doctors"],
  RdvsCreateManyInput: ["id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id"],
  RdvsUpdateManyMutationInput: ["id", "date", "time"],
  UsersCreateInput: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at", "doctors", "patients"],
  UsersUpdateInput: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at", "doctors", "patients"],
  UsersCreateManyInput: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at"],
  UsersUpdateManyMutationInput: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at"],
  Xray_resultsCreateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_documents"],
  Xray_resultsUpdateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_documents"],
  Xray_resultsCreateManyInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Xray_resultsUpdateManyMutationInput: ["id", "is_abnormal", "description", "title", "result_type"],
  UuidFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "mode", "not"],
  StringNullableListFilter: ["equals", "has", "hasEvery", "hasSome", "isEmpty"],
  StringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not"],
  DateTimeNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  FloatNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  PatientsRelationFilter: ["is", "isNot"],
  PatientsNullableRelationFilter: ["is", "isNot"],
  SortOrderInput: ["sort", "nulls"],
  GeneralMedicalRecordsCountOrderByAggregateInput: ["id", "allergies", "bloodType", "birthDate", "height", "weight", "patient_id"],
  GeneralMedicalRecordsAvgOrderByAggregateInput: ["height", "weight"],
  GeneralMedicalRecordsMaxOrderByAggregateInput: ["id", "bloodType", "birthDate", "height", "weight", "patient_id"],
  GeneralMedicalRecordsMinOrderByAggregateInput: ["id", "bloodType", "birthDate", "height", "weight", "patient_id"],
  GeneralMedicalRecordsSumOrderByAggregateInput: ["height", "weight"],
  UuidWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "mode", "not", "_count", "_min", "_max"],
  StringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "_count", "_min", "_max"],
  DateTimeNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
  FloatNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  BoolFilter: ["equals", "not"],
  StringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not"],
  Enumanalysis_results_result_type_enumFilter: ["equals", "in", "notIn", "not"],
  Lab_documentsRelationFilter: ["is", "isNot"],
  Analysis_resultsCountOrderByAggregateInput: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id"],
  Analysis_resultsMaxOrderByAggregateInput: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id"],
  Analysis_resultsMinOrderByAggregateInput: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id"],
  BoolWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
  StringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "_count", "_min", "_max"],
  Enumanalysis_results_result_type_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enumauthorizations_level_enumFilter: ["equals", "in", "notIn", "not"],
  UuidNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "mode", "not"],
  Instituts_medicauxNullableRelationFilter: ["is", "isNot"],
  AuthorizationsCountOrderByAggregateInput: ["id", "level", "institut_medical_id", "patient_id"],
  AuthorizationsMaxOrderByAggregateInput: ["id", "level", "institut_medical_id", "patient_id"],
  AuthorizationsMinOrderByAggregateInput: ["id", "level", "institut_medical_id", "patient_id"],
  Enumauthorizations_level_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  UuidNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "mode", "not", "_count", "_min", "_max"],
  DoctorsNullableRelationFilter: ["is", "isNot"],
  CertificatesCountOrderByAggregateInput: ["id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id"],
  CertificatesMaxOrderByAggregateInput: ["id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id"],
  CertificatesMinOrderByAggregateInput: ["id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id"],
  Enumcliniques_type_enumFilter: ["equals", "in", "notIn", "not"],
  CliniquesCountOrderByAggregateInput: ["id", "type", "name", "address", "phone", "email"],
  CliniquesMaxOrderByAggregateInput: ["id", "type", "name", "address", "phone", "email"],
  CliniquesMinOrderByAggregateInput: ["id", "type", "name", "address", "phone", "email"],
  Enumcliniques_type_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  DateTimeFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  JsonNullableFilter: ["equals", "path", "string_contains", "string_starts_with", "string_ends_with", "array_contains", "array_starts_with", "array_ends_with", "lt", "lte", "gt", "gte", "not"],
  Lab_requestsListRelationFilter: ["every", "some", "none"],
  PrescriptionsNullableRelationFilter: ["is", "isNot"],
  RdvsNullableRelationFilter: ["is", "isNot"],
  Lab_requestsOrderByRelationAggregateInput: ["_count"],
  ConsultationsCountOrderByAggregateInput: ["id", "section", "date", "notes", "measures", "doctor_id", "institut_medical_id", "prescription_id", "patient_id"],
  ConsultationsMaxOrderByAggregateInput: ["id", "section", "date", "doctor_id", "institut_medical_id", "prescription_id", "patient_id"],
  ConsultationsMinOrderByAggregateInput: ["id", "section", "date", "doctor_id", "institut_medical_id", "prescription_id", "patient_id"],
  DateTimeWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
  JsonNullableWithAggregatesFilter: ["equals", "path", "string_contains", "string_starts_with", "string_ends_with", "array_contains", "array_starts_with", "array_ends_with", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
  Enumctscan_results_result_type_enumFilter: ["equals", "in", "notIn", "not"],
  Ctscan_resultsCountOrderByAggregateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Ctscan_resultsMaxOrderByAggregateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Ctscan_resultsMinOrderByAggregateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Enumctscan_results_result_type_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enumdoctors_type_enumFilter: ["equals", "in", "notIn", "not"],
  Enumdoctors_specialty_enumFilter: ["equals", "in", "notIn", "not"],
  CertificatesListRelationFilter: ["every", "some", "none"],
  ConsultationsListRelationFilter: ["every", "some", "none"],
  Instituts_medicauxListRelationFilter: ["every", "some", "none"],
  UsersRelationFilter: ["is", "isNot"],
  PrescriptionsListRelationFilter: ["every", "some", "none"],
  Rdv_requestsListRelationFilter: ["every", "some", "none"],
  RdvsListRelationFilter: ["every", "some", "none"],
  CertificatesOrderByRelationAggregateInput: ["_count"],
  ConsultationsOrderByRelationAggregateInput: ["_count"],
  Instituts_medicauxOrderByRelationAggregateInput: ["_count"],
  PrescriptionsOrderByRelationAggregateInput: ["_count"],
  Rdv_requestsOrderByRelationAggregateInput: ["_count"],
  RdvsOrderByRelationAggregateInput: ["_count"],
  DoctorsCountOrderByAggregateInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "user_id"],
  DoctorsMaxOrderByAggregateInput: ["id", "type", "bio", "first_name", "last_name", "profile_image", "specialty", "user_id"],
  DoctorsMinOrderByAggregateInput: ["id", "type", "bio", "first_name", "last_name", "profile_image", "specialty", "user_id"],
  Enumdoctors_type_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enumdoctors_specialty_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enuminstituts_medicaux_type_enumFilter: ["equals", "in", "notIn", "not"],
  AuthorizationsListRelationFilter: ["every", "some", "none"],
  DoctorsListRelationFilter: ["every", "some", "none"],
  AuthorizationsOrderByRelationAggregateInput: ["_count"],
  DoctorsOrderByRelationAggregateInput: ["_count"],
  Instituts_medicauxCountOrderByAggregateInput: ["id", "type"],
  Instituts_medicauxMaxOrderByAggregateInput: ["id", "type"],
  Instituts_medicauxMinOrderByAggregateInput: ["id", "type"],
  Enuminstituts_medicaux_type_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Lab_attachmentsCountOrderByAggregateInput: ["id", "name", "type", "url", "lab_document_id"],
  Lab_attachmentsMaxOrderByAggregateInput: ["id", "name", "type", "url", "lab_document_id"],
  Lab_attachmentsMinOrderByAggregateInput: ["id", "name", "type", "url", "lab_document_id"],
  Enumlab_documents_status_enumFilter: ["equals", "in", "notIn", "not"],
  Analysis_resultsListRelationFilter: ["every", "some", "none"],
  Ctscan_resultsListRelationFilter: ["every", "some", "none"],
  Lab_attachmentsListRelationFilter: ["every", "some", "none"],
  LaboratoriesNullableRelationFilter: ["is", "isNot"],
  Lab_requestsNullableRelationFilter: ["is", "isNot"],
  Lab_resultsListRelationFilter: ["every", "some", "none"],
  Xray_resultsListRelationFilter: ["every", "some", "none"],
  Analysis_resultsOrderByRelationAggregateInput: ["_count"],
  Ctscan_resultsOrderByRelationAggregateInput: ["_count"],
  Lab_attachmentsOrderByRelationAggregateInput: ["_count"],
  Lab_resultsOrderByRelationAggregateInput: ["_count"],
  Xray_resultsOrderByRelationAggregateInput: ["_count"],
  Lab_documentsCountOrderByAggregateInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id"],
  Lab_documentsMaxOrderByAggregateInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id"],
  Lab_documentsMinOrderByAggregateInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id"],
  Enumlab_documents_status_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enumlab_requests_priority_enumNullableFilter: ["equals", "in", "notIn", "not"],
  Lab_documentsListRelationFilter: ["every", "some", "none"],
  Lab_documentsOrderByRelationAggregateInput: ["_count"],
  Lab_requestsCountOrderByAggregateInput: ["id", "type", "priority", "description", "doctor_id", "patient_id"],
  Lab_requestsMaxOrderByAggregateInput: ["id", "type", "priority", "description", "doctor_id", "patient_id"],
  Lab_requestsMinOrderByAggregateInput: ["id", "type", "priority", "description", "doctor_id", "patient_id"],
  Enumlab_requests_priority_enumNullableWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enumlab_results_result_type_enumFilter: ["equals", "in", "notIn", "not"],
  Lab_resultsCountOrderByAggregateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Lab_resultsMaxOrderByAggregateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Lab_resultsMinOrderByAggregateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Enumlab_results_result_type_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  LaboratoriesCountOrderByAggregateInput: ["id", "address", "phone", "email", "name"],
  LaboratoriesMaxOrderByAggregateInput: ["id", "address", "phone", "email", "name"],
  LaboratoriesMinOrderByAggregateInput: ["id", "address", "phone", "email", "name"],
  FloatFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  PrescriptionsRelationFilter: ["is", "isNot"],
  MedicationsCountOrderByAggregateInput: ["id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id"],
  MedicationsAvgOrderByAggregateInput: ["quantity"],
  MedicationsMaxOrderByAggregateInput: ["id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id"],
  MedicationsMinOrderByAggregateInput: ["id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id"],
  MedicationsSumOrderByAggregateInput: ["quantity"],
  FloatWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  IntNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  Enumpatients_gender_enumFilter: ["equals", "in", "notIn", "not"],
  GeneralMedicalRecordsNullableRelationFilter: ["is", "isNot"],
  UsersNullableRelationFilter: ["is", "isNot"],
  PatientsCountOrderByAggregateInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "general_medical_record_id", "user_id"],
  PatientsAvgOrderByAggregateInput: ["cin"],
  PatientsMaxOrderByAggregateInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "general_medical_record_id", "user_id"],
  PatientsMinOrderByAggregateInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "general_medical_record_id", "user_id"],
  PatientsSumOrderByAggregateInput: ["cin"],
  IntNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  Enumpatients_gender_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  PharmaciesCountOrderByAggregateInput: ["id", "address", "phone", "email", "name"],
  PharmaciesMaxOrderByAggregateInput: ["id", "address", "phone", "email", "name"],
  PharmaciesMinOrderByAggregateInput: ["id", "address", "phone", "email", "name"],
  Enumprescriptions_status_enumFilter: ["equals", "in", "notIn", "not"],
  ConsultationsNullableRelationFilter: ["is", "isNot"],
  MedicationsListRelationFilter: ["every", "some", "none"],
  MedicationsOrderByRelationAggregateInput: ["_count"],
  PrescriptionsCountOrderByAggregateInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id"],
  PrescriptionsMaxOrderByAggregateInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id"],
  PrescriptionsMinOrderByAggregateInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id"],
  Enumprescriptions_status_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Rdv_requestsCountOrderByAggregateInput: ["id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id"],
  Rdv_requestsMaxOrderByAggregateInput: ["id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id"],
  Rdv_requestsMinOrderByAggregateInput: ["id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id"],
  Rdv_requestsNullableRelationFilter: ["is", "isNot"],
  RdvsCountOrderByAggregateInput: ["id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id"],
  RdvsMaxOrderByAggregateInput: ["id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id"],
  RdvsMinOrderByAggregateInput: ["id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id"],
  Enumusers_role_enumFilter: ["equals", "in", "notIn", "not"],
  UsersCountOrderByAggregateInput: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at"],
  UsersMaxOrderByAggregateInput: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at"],
  UsersMinOrderByAggregateInput: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at"],
  Enumusers_role_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  Enumxray_results_result_type_enumFilter: ["equals", "in", "notIn", "not"],
  Xray_resultsCountOrderByAggregateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Xray_resultsMaxOrderByAggregateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Xray_resultsMinOrderByAggregateInput: ["id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Enumxray_results_result_type_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  GeneralMedicalRecordsCreateallergiesInput: ["set"],
  PatientsCreateNestedOneWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput: ["create", "connectOrCreate", "connect"],
  PatientsCreateNestedOneWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput: ["create", "connectOrCreate", "connect"],
  StringFieldUpdateOperationsInput: ["set"],
  GeneralMedicalRecordsUpdateallergiesInput: ["set", "push"],
  NullableStringFieldUpdateOperationsInput: ["set"],
  NullableDateTimeFieldUpdateOperationsInput: ["set"],
  NullableFloatFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
  PatientsUpdateOneRequiredWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  PatientsUpdateOneWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  Lab_documentsCreateNestedOneWithoutAnalysis_resultsInput: ["create", "connectOrCreate", "connect"],
  BoolFieldUpdateOperationsInput: ["set"],
  Enumanalysis_results_result_type_enumFieldUpdateOperationsInput: ["set"],
  Lab_documentsUpdateOneRequiredWithoutAnalysis_resultsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  Instituts_medicauxCreateNestedOneWithoutAuthorizationsInput: ["create", "connectOrCreate", "connect"],
  PatientsCreateNestedOneWithoutAuthorizationsInput: ["create", "connectOrCreate", "connect"],
  Enumauthorizations_level_enumFieldUpdateOperationsInput: ["set"],
  Instituts_medicauxUpdateOneWithoutAuthorizationsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  PatientsUpdateOneRequiredWithoutAuthorizationsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  DoctorsCreateNestedOneWithoutCertificatesInput: ["create", "connectOrCreate", "connect"],
  PatientsCreateNestedOneWithoutCertificatesInput: ["create", "connectOrCreate", "connect"],
  DoctorsUpdateOneWithoutCertificatesNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  PatientsUpdateOneRequiredWithoutCertificatesNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  Enumcliniques_type_enumFieldUpdateOperationsInput: ["set"],
  ConsultationsCreatenotesInput: ["set"],
  Lab_requestsCreateNestedManyWithoutConsultationsInput: ["create", "connectOrCreate", "connect"],
  PrescriptionsCreateNestedOneWithoutConsultationsInput: ["create", "connectOrCreate", "connect"],
  Instituts_medicauxCreateNestedOneWithoutConsultationsInput: ["create", "connectOrCreate", "connect"],
  PatientsCreateNestedOneWithoutConsultationsInput: ["create", "connectOrCreate", "connect"],
  DoctorsCreateNestedOneWithoutConsultationsInput: ["create", "connectOrCreate", "connect"],
  RdvsCreateNestedOneWithoutConsultationsInput: ["create", "connectOrCreate", "connect"],
  DateTimeFieldUpdateOperationsInput: ["set"],
  ConsultationsUpdatenotesInput: ["set", "push"],
  Lab_requestsUpdateManyWithoutConsultationsNestedInput: ["create", "connectOrCreate", "upsert", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  PrescriptionsUpdateOneWithoutConsultationsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  Instituts_medicauxUpdateOneWithoutConsultationsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  PatientsUpdateOneRequiredWithoutConsultationsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  DoctorsUpdateOneWithoutConsultationsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  RdvsUpdateOneWithoutConsultationsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  Lab_documentsCreateNestedOneWithoutCtscan_resultsInput: ["create", "connectOrCreate", "connect"],
  Enumctscan_results_result_type_enumFieldUpdateOperationsInput: ["set"],
  Lab_documentsUpdateOneRequiredWithoutCtscan_resultsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  DoctorsCreateeducationInput: ["set"],
  DoctorsCreateexperienceInput: ["set"],
  DoctorsCreatelanguagesInput: ["set"],
  CertificatesCreateNestedManyWithoutDoctorsInput: ["create", "connectOrCreate", "createMany", "connect"],
  ConsultationsCreateNestedManyWithoutDoctorsInput: ["create", "connectOrCreate", "createMany", "connect"],
  Instituts_medicauxCreateNestedManyWithoutDoctorsInput: ["create", "connectOrCreate", "connect"],
  UsersCreateNestedOneWithoutDoctorsInput: ["create", "connectOrCreate", "connect"],
  Lab_requestsCreateNestedManyWithoutDoctorsInput: ["create", "connectOrCreate", "createMany", "connect"],
  PrescriptionsCreateNestedManyWithoutDoctorsInput: ["create", "connectOrCreate", "createMany", "connect"],
  Rdv_requestsCreateNestedManyWithoutDoctorsInput: ["create", "connectOrCreate", "createMany", "connect"],
  RdvsCreateNestedManyWithoutDoctorsInput: ["create", "connectOrCreate", "createMany", "connect"],
  Enumdoctors_type_enumFieldUpdateOperationsInput: ["set"],
  DoctorsUpdateeducationInput: ["set", "push"],
  DoctorsUpdateexperienceInput: ["set", "push"],
  DoctorsUpdatelanguagesInput: ["set", "push"],
  Enumdoctors_specialty_enumFieldUpdateOperationsInput: ["set"],
  CertificatesUpdateManyWithoutDoctorsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  ConsultationsUpdateManyWithoutDoctorsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  Instituts_medicauxUpdateManyWithoutDoctorsNestedInput: ["create", "connectOrCreate", "upsert", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  UsersUpdateOneRequiredWithoutDoctorsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  Lab_requestsUpdateManyWithoutDoctorsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  PrescriptionsUpdateManyWithoutDoctorsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  Rdv_requestsUpdateManyWithoutDoctorsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  RdvsUpdateManyWithoutDoctorsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  AuthorizationsCreateNestedManyWithoutInstituts_medicauxInput: ["create", "connectOrCreate", "createMany", "connect"],
  ConsultationsCreateNestedManyWithoutInstituts_medicauxInput: ["create", "connectOrCreate", "createMany", "connect"],
  DoctorsCreateNestedManyWithoutInstituts_medicauxInput: ["create", "connectOrCreate", "connect"],
  Enuminstituts_medicaux_type_enumFieldUpdateOperationsInput: ["set"],
  AuthorizationsUpdateManyWithoutInstituts_medicauxNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  ConsultationsUpdateManyWithoutInstituts_medicauxNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  DoctorsUpdateManyWithoutInstituts_medicauxNestedInput: ["create", "connectOrCreate", "upsert", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  Lab_documentsCreateNestedOneWithoutLab_attachmentsInput: ["create", "connectOrCreate", "connect"],
  Lab_documentsUpdateOneRequiredWithoutLab_attachmentsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  Analysis_resultsCreateNestedManyWithoutLab_documentsInput: ["create", "connectOrCreate", "createMany", "connect"],
  Ctscan_resultsCreateNestedManyWithoutLab_documentsInput: ["create", "connectOrCreate", "createMany", "connect"],
  Lab_attachmentsCreateNestedManyWithoutLab_documentsInput: ["create", "connectOrCreate", "createMany", "connect"],
  LaboratoriesCreateNestedOneWithoutLab_documentsInput: ["create", "connectOrCreate", "connect"],
  PatientsCreateNestedOneWithoutLab_documentsInput: ["create", "connectOrCreate", "connect"],
  Lab_requestsCreateNestedOneWithoutLab_documentsInput: ["create", "connectOrCreate", "connect"],
  Lab_resultsCreateNestedManyWithoutLab_documentsInput: ["create", "connectOrCreate", "createMany", "connect"],
  Xray_resultsCreateNestedManyWithoutLab_documentsInput: ["create", "connectOrCreate", "createMany", "connect"],
  Enumlab_documents_status_enumFieldUpdateOperationsInput: ["set"],
  Analysis_resultsUpdateManyWithoutLab_documentsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  Ctscan_resultsUpdateManyWithoutLab_documentsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  Lab_attachmentsUpdateManyWithoutLab_documentsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  LaboratoriesUpdateOneWithoutLab_documentsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  PatientsUpdateOneRequiredWithoutLab_documentsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  Lab_requestsUpdateOneWithoutLab_documentsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  Lab_resultsUpdateManyWithoutLab_documentsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  Xray_resultsUpdateManyWithoutLab_documentsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  ConsultationsCreateNestedManyWithoutLab_requestsInput: ["create", "connectOrCreate", "connect"],
  Lab_documentsCreateNestedManyWithoutLab_requestsInput: ["create", "connectOrCreate", "createMany", "connect"],
  DoctorsCreateNestedOneWithoutLab_requestsInput: ["create", "connectOrCreate", "connect"],
  PatientsCreateNestedOneWithoutLab_requestsInput: ["create", "connectOrCreate", "connect"],
  NullableEnumlab_requests_priority_enumFieldUpdateOperationsInput: ["set"],
  ConsultationsUpdateManyWithoutLab_requestsNestedInput: ["create", "connectOrCreate", "upsert", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  Lab_documentsUpdateManyWithoutLab_requestsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  DoctorsUpdateOneWithoutLab_requestsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  PatientsUpdateOneRequiredWithoutLab_requestsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  Lab_documentsCreateNestedOneWithoutLab_resultsInput: ["create", "connectOrCreate", "connect"],
  Enumlab_results_result_type_enumFieldUpdateOperationsInput: ["set"],
  Lab_documentsUpdateOneRequiredWithoutLab_resultsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  Lab_documentsCreateNestedManyWithoutLaboratoriesInput: ["create", "connectOrCreate", "createMany", "connect"],
  Lab_documentsUpdateManyWithoutLaboratoriesNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  PrescriptionsCreateNestedOneWithoutMedicationsInput: ["create", "connectOrCreate", "connect"],
  FloatFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
  PrescriptionsUpdateOneRequiredWithoutMedicationsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  GeneralMedicalRecordsCreateNestedOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput: ["create", "connectOrCreate", "connect"],
  AuthorizationsCreateNestedManyWithoutPatientsInput: ["create", "connectOrCreate", "createMany", "connect"],
  CertificatesCreateNestedManyWithoutPatientsInput: ["create", "connectOrCreate", "createMany", "connect"],
  ConsultationsCreateNestedManyWithoutPatientsInput: ["create", "connectOrCreate", "createMany", "connect"],
  Lab_documentsCreateNestedManyWithoutPatientsInput: ["create", "connectOrCreate", "createMany", "connect"],
  Lab_requestsCreateNestedManyWithoutPatientsInput: ["create", "connectOrCreate", "createMany", "connect"],
  UsersCreateNestedOneWithoutPatientsInput: ["create", "connectOrCreate", "connect"],
  GeneralMedicalRecordsCreateNestedOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput: ["create", "connectOrCreate", "connect"],
  PrescriptionsCreateNestedManyWithoutPatientsInput: ["create", "connectOrCreate", "createMany", "connect"],
  Rdv_requestsCreateNestedManyWithoutPatientsInput: ["create", "connectOrCreate", "createMany", "connect"],
  RdvsCreateNestedManyWithoutPatientsInput: ["create", "connectOrCreate", "createMany", "connect"],
  NullableIntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
  Enumpatients_gender_enumFieldUpdateOperationsInput: ["set"],
  GeneralMedicalRecordsUpdateOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  AuthorizationsUpdateManyWithoutPatientsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  CertificatesUpdateManyWithoutPatientsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  ConsultationsUpdateManyWithoutPatientsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  Lab_documentsUpdateManyWithoutPatientsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  Lab_requestsUpdateManyWithoutPatientsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  UsersUpdateOneWithoutPatientsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  GeneralMedicalRecordsUpdateOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  PrescriptionsUpdateManyWithoutPatientsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  Rdv_requestsUpdateManyWithoutPatientsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  RdvsUpdateManyWithoutPatientsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  ConsultationsCreateNestedOneWithoutPrescriptionsInput: ["create", "connectOrCreate", "connect"],
  MedicationsCreateNestedManyWithoutPrescriptionsInput: ["create", "connectOrCreate", "createMany", "connect"],
  DoctorsCreateNestedOneWithoutPrescriptionsInput: ["create", "connectOrCreate", "connect"],
  PatientsCreateNestedOneWithoutPrescriptionsInput: ["create", "connectOrCreate", "connect"],
  Enumprescriptions_status_enumFieldUpdateOperationsInput: ["set"],
  ConsultationsUpdateOneWithoutPrescriptionsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  MedicationsUpdateManyWithoutPrescriptionsNestedInput: ["create", "connectOrCreate", "upsert", "createMany", "set", "disconnect", "delete", "connect", "update", "updateMany", "deleteMany"],
  DoctorsUpdateOneWithoutPrescriptionsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  PatientsUpdateOneRequiredWithoutPrescriptionsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  RdvsCreateNestedOneWithoutRdv_requests_rdv_requests_rdv_idTordvsInput: ["create", "connectOrCreate", "connect"],
  PatientsCreateNestedOneWithoutRdv_requestsInput: ["create", "connectOrCreate", "connect"],
  DoctorsCreateNestedOneWithoutRdv_requestsInput: ["create", "connectOrCreate", "connect"],
  RdvsCreateNestedOneWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput: ["create", "connectOrCreate", "connect"],
  RdvsUpdateOneWithoutRdv_requests_rdv_requests_rdv_idTordvsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  PatientsUpdateOneRequiredWithoutRdv_requestsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  DoctorsUpdateOneWithoutRdv_requestsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  RdvsUpdateOneWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  Rdv_requestsCreateNestedOneWithoutRdvs_rdv_requests_rdv_idTordvsInput: ["create", "connectOrCreate", "connect"],
  ConsultationsCreateNestedOneWithoutRdvsInput: ["create", "connectOrCreate", "connect"],
  PatientsCreateNestedOneWithoutRdvsInput: ["create", "connectOrCreate", "connect"],
  Rdv_requestsCreateNestedOneWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput: ["create", "connectOrCreate", "connect"],
  DoctorsCreateNestedOneWithoutRdvsInput: ["create", "connectOrCreate", "connect"],
  Rdv_requestsUpdateOneWithoutRdvs_rdv_requests_rdv_idTordvsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  ConsultationsUpdateOneWithoutRdvsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  PatientsUpdateOneRequiredWithoutRdvsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  Rdv_requestsUpdateOneWithoutRdvs_rdvs_rdv_request_idTordv_requestsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  DoctorsUpdateOneWithoutRdvsNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  DoctorsCreateNestedOneWithoutUsersInput: ["create", "connectOrCreate", "connect"],
  PatientsCreateNestedOneWithoutUsersInput: ["create", "connectOrCreate", "connect"],
  Enumusers_role_enumFieldUpdateOperationsInput: ["set"],
  DoctorsUpdateOneWithoutUsersNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  PatientsUpdateOneWithoutUsersNestedInput: ["create", "connectOrCreate", "upsert", "disconnect", "delete", "connect", "update"],
  Lab_documentsCreateNestedOneWithoutXray_resultsInput: ["create", "connectOrCreate", "connect"],
  Enumxray_results_result_type_enumFieldUpdateOperationsInput: ["set"],
  Lab_documentsUpdateOneRequiredWithoutXray_resultsNestedInput: ["create", "connectOrCreate", "upsert", "connect", "update"],
  NestedUuidFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedStringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not"],
  NestedDateTimeNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedFloatNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedUuidWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
  NestedIntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedStringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not"],
  NestedStringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "_count", "_min", "_max"],
  NestedIntNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedDateTimeNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
  NestedFloatNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  NestedBoolFilter: ["equals", "not"],
  NestedEnumanalysis_results_result_type_enumFilter: ["equals", "in", "notIn", "not"],
  NestedBoolWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
  NestedStringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "_count", "_min", "_max"],
  NestedEnumanalysis_results_result_type_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumauthorizations_level_enumFilter: ["equals", "in", "notIn", "not"],
  NestedUuidNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedEnumauthorizations_level_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedUuidNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
  NestedEnumcliniques_type_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumcliniques_type_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedDateTimeFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedDateTimeWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
  NestedJsonNullableFilter: ["equals", "path", "string_contains", "string_starts_with", "string_ends_with", "array_contains", "array_starts_with", "array_ends_with", "lt", "lte", "gt", "gte", "not"],
  NestedEnumctscan_results_result_type_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumctscan_results_result_type_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumdoctors_type_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumdoctors_specialty_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumdoctors_type_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumdoctors_specialty_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnuminstituts_medicaux_type_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnuminstituts_medicaux_type_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumlab_documents_status_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumlab_documents_status_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumlab_requests_priority_enumNullableFilter: ["equals", "in", "notIn", "not"],
  NestedEnumlab_requests_priority_enumNullableWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumlab_results_result_type_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumlab_results_result_type_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedFloatFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
  NestedFloatWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  NestedEnumpatients_gender_enumFilter: ["equals", "in", "notIn", "not"],
  NestedIntNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
  NestedEnumpatients_gender_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumprescriptions_status_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumprescriptions_status_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumusers_role_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumusers_role_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  NestedEnumxray_results_result_type_enumFilter: ["equals", "in", "notIn", "not"],
  NestedEnumxray_results_result_type_enumWithAggregatesFilter: ["equals", "in", "notIn", "not", "_count", "_min", "_max"],
  PatientsCreateWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  PatientsCreateOrConnectWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput: ["where", "create"],
  PatientsCreateWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "prescriptions", "rdv_requests", "rdvs"],
  PatientsCreateOrConnectWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput: ["where", "create"],
  PatientsUpsertWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput: ["update", "create", "where"],
  PatientsUpdateToOneWithWhereWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput: ["where", "data"],
  PatientsUpdateWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  PatientsUpsertWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput: ["update", "create", "where"],
  PatientsUpdateToOneWithWhereWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput: ["where", "data"],
  PatientsUpdateWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "prescriptions", "rdv_requests", "rdvs"],
  Lab_documentsCreateWithoutAnalysis_resultsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "ctscan_results", "lab_attachments", "laboratories", "patients", "lab_requests", "lab_results", "xray_results"],
  Lab_documentsCreateOrConnectWithoutAnalysis_resultsInput: ["where", "create"],
  Lab_documentsUpsertWithoutAnalysis_resultsInput: ["update", "create", "where"],
  Lab_documentsUpdateToOneWithWhereWithoutAnalysis_resultsInput: ["where", "data"],
  Lab_documentsUpdateWithoutAnalysis_resultsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "ctscan_results", "lab_attachments", "laboratories", "patients", "lab_requests", "lab_results", "xray_results"],
  Instituts_medicauxCreateWithoutAuthorizationsInput: ["id", "type", "consultations", "doctors"],
  Instituts_medicauxCreateOrConnectWithoutAuthorizationsInput: ["where", "create"],
  PatientsCreateWithoutAuthorizationsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  PatientsCreateOrConnectWithoutAuthorizationsInput: ["where", "create"],
  Instituts_medicauxUpsertWithoutAuthorizationsInput: ["update", "create", "where"],
  Instituts_medicauxUpdateToOneWithWhereWithoutAuthorizationsInput: ["where", "data"],
  Instituts_medicauxUpdateWithoutAuthorizationsInput: ["id", "type", "consultations", "doctors"],
  PatientsUpsertWithoutAuthorizationsInput: ["update", "create", "where"],
  PatientsUpdateToOneWithWhereWithoutAuthorizationsInput: ["where", "data"],
  PatientsUpdateWithoutAuthorizationsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  DoctorsCreateWithoutCertificatesInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "consultations", "instituts_medicaux", "users", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  DoctorsCreateOrConnectWithoutCertificatesInput: ["where", "create"],
  PatientsCreateWithoutCertificatesInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  PatientsCreateOrConnectWithoutCertificatesInput: ["where", "create"],
  DoctorsUpsertWithoutCertificatesInput: ["update", "create", "where"],
  DoctorsUpdateToOneWithWhereWithoutCertificatesInput: ["where", "data"],
  DoctorsUpdateWithoutCertificatesInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "consultations", "instituts_medicaux", "users", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  PatientsUpsertWithoutCertificatesInput: ["update", "create", "where"],
  PatientsUpdateToOneWithWhereWithoutCertificatesInput: ["where", "data"],
  PatientsUpdateWithoutCertificatesInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  Lab_requestsCreateWithoutConsultationsInput: ["id", "type", "priority", "description", "lab_documents", "doctors", "patients"],
  Lab_requestsCreateOrConnectWithoutConsultationsInput: ["where", "create"],
  PrescriptionsCreateWithoutConsultationsInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "medications", "doctors", "patients"],
  PrescriptionsCreateOrConnectWithoutConsultationsInput: ["where", "create"],
  Instituts_medicauxCreateWithoutConsultationsInput: ["id", "type", "authorizations", "doctors"],
  Instituts_medicauxCreateOrConnectWithoutConsultationsInput: ["where", "create"],
  PatientsCreateWithoutConsultationsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  PatientsCreateOrConnectWithoutConsultationsInput: ["where", "create"],
  DoctorsCreateWithoutConsultationsInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "instituts_medicaux", "users", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  DoctorsCreateOrConnectWithoutConsultationsInput: ["where", "create"],
  RdvsCreateWithoutConsultationsInput: ["id", "date", "time", "rdv_requests_rdv_requests_rdv_idTordvs", "patients", "rdv_requests_rdvs_rdv_request_idTordv_requests", "doctors"],
  RdvsCreateOrConnectWithoutConsultationsInput: ["where", "create"],
  Lab_requestsUpsertWithWhereUniqueWithoutConsultationsInput: ["where", "update", "create"],
  Lab_requestsUpdateWithWhereUniqueWithoutConsultationsInput: ["where", "data"],
  Lab_requestsUpdateManyWithWhereWithoutConsultationsInput: ["where", "data"],
  Lab_requestsScalarWhereInput: ["AND", "OR", "NOT", "id", "type", "priority", "description", "doctor_id", "patient_id"],
  PrescriptionsUpsertWithoutConsultationsInput: ["update", "create", "where"],
  PrescriptionsUpdateToOneWithWhereWithoutConsultationsInput: ["where", "data"],
  PrescriptionsUpdateWithoutConsultationsInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "medications", "doctors", "patients"],
  Instituts_medicauxUpsertWithoutConsultationsInput: ["update", "create", "where"],
  Instituts_medicauxUpdateToOneWithWhereWithoutConsultationsInput: ["where", "data"],
  Instituts_medicauxUpdateWithoutConsultationsInput: ["id", "type", "authorizations", "doctors"],
  PatientsUpsertWithoutConsultationsInput: ["update", "create", "where"],
  PatientsUpdateToOneWithWhereWithoutConsultationsInput: ["where", "data"],
  PatientsUpdateWithoutConsultationsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  DoctorsUpsertWithoutConsultationsInput: ["update", "create", "where"],
  DoctorsUpdateToOneWithWhereWithoutConsultationsInput: ["where", "data"],
  DoctorsUpdateWithoutConsultationsInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "instituts_medicaux", "users", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  RdvsUpsertWithoutConsultationsInput: ["update", "create", "where"],
  RdvsUpdateToOneWithWhereWithoutConsultationsInput: ["where", "data"],
  RdvsUpdateWithoutConsultationsInput: ["id", "date", "time", "rdv_requests_rdv_requests_rdv_idTordvs", "patients", "rdv_requests_rdvs_rdv_request_idTordv_requests", "doctors"],
  Lab_documentsCreateWithoutCtscan_resultsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "lab_attachments", "laboratories", "patients", "lab_requests", "lab_results", "xray_results"],
  Lab_documentsCreateOrConnectWithoutCtscan_resultsInput: ["where", "create"],
  Lab_documentsUpsertWithoutCtscan_resultsInput: ["update", "create", "where"],
  Lab_documentsUpdateToOneWithWhereWithoutCtscan_resultsInput: ["where", "data"],
  Lab_documentsUpdateWithoutCtscan_resultsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "lab_attachments", "laboratories", "patients", "lab_requests", "lab_results", "xray_results"],
  CertificatesCreateWithoutDoctorsInput: ["id", "type", "start_date", "end_date", "description", "patients"],
  CertificatesCreateOrConnectWithoutDoctorsInput: ["where", "create"],
  CertificatesCreateManyDoctorsInputEnvelope: ["data", "skipDuplicates"],
  ConsultationsCreateWithoutDoctorsInput: ["id", "section", "date", "notes", "measures", "lab_requests", "prescriptions", "instituts_medicaux", "patients", "rdvs"],
  ConsultationsCreateOrConnectWithoutDoctorsInput: ["where", "create"],
  ConsultationsCreateManyDoctorsInputEnvelope: ["data", "skipDuplicates"],
  Instituts_medicauxCreateWithoutDoctorsInput: ["id", "type", "authorizations", "consultations"],
  Instituts_medicauxCreateOrConnectWithoutDoctorsInput: ["where", "create"],
  UsersCreateWithoutDoctorsInput: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at", "patients"],
  UsersCreateOrConnectWithoutDoctorsInput: ["where", "create"],
  Lab_requestsCreateWithoutDoctorsInput: ["id", "type", "priority", "description", "consultations", "lab_documents", "patients"],
  Lab_requestsCreateOrConnectWithoutDoctorsInput: ["where", "create"],
  Lab_requestsCreateManyDoctorsInputEnvelope: ["data", "skipDuplicates"],
  PrescriptionsCreateWithoutDoctorsInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "consultations", "medications", "patients"],
  PrescriptionsCreateOrConnectWithoutDoctorsInput: ["where", "create"],
  PrescriptionsCreateManyDoctorsInputEnvelope: ["data", "skipDuplicates"],
  Rdv_requestsCreateWithoutDoctorsInput: ["id", "date", "time", "Motif", "Status", "rdvs_rdv_requests_rdv_idTordvs", "patients", "rdvs_rdvs_rdv_request_idTordv_requests"],
  Rdv_requestsCreateOrConnectWithoutDoctorsInput: ["where", "create"],
  Rdv_requestsCreateManyDoctorsInputEnvelope: ["data", "skipDuplicates"],
  RdvsCreateWithoutDoctorsInput: ["id", "date", "time", "rdv_requests_rdv_requests_rdv_idTordvs", "consultations", "patients", "rdv_requests_rdvs_rdv_request_idTordv_requests"],
  RdvsCreateOrConnectWithoutDoctorsInput: ["where", "create"],
  RdvsCreateManyDoctorsInputEnvelope: ["data", "skipDuplicates"],
  CertificatesUpsertWithWhereUniqueWithoutDoctorsInput: ["where", "update", "create"],
  CertificatesUpdateWithWhereUniqueWithoutDoctorsInput: ["where", "data"],
  CertificatesUpdateManyWithWhereWithoutDoctorsInput: ["where", "data"],
  CertificatesScalarWhereInput: ["AND", "OR", "NOT", "id", "type", "start_date", "end_date", "description", "doctor_id", "patient_id"],
  ConsultationsUpsertWithWhereUniqueWithoutDoctorsInput: ["where", "update", "create"],
  ConsultationsUpdateWithWhereUniqueWithoutDoctorsInput: ["where", "data"],
  ConsultationsUpdateManyWithWhereWithoutDoctorsInput: ["where", "data"],
  ConsultationsScalarWhereInput: ["AND", "OR", "NOT", "id", "section", "date", "notes", "measures", "doctor_id", "institut_medical_id", "prescription_id", "patient_id"],
  Instituts_medicauxUpsertWithWhereUniqueWithoutDoctorsInput: ["where", "update", "create"],
  Instituts_medicauxUpdateWithWhereUniqueWithoutDoctorsInput: ["where", "data"],
  Instituts_medicauxUpdateManyWithWhereWithoutDoctorsInput: ["where", "data"],
  Instituts_medicauxScalarWhereInput: ["AND", "OR", "NOT", "id", "type"],
  UsersUpsertWithoutDoctorsInput: ["update", "create", "where"],
  UsersUpdateToOneWithWhereWithoutDoctorsInput: ["where", "data"],
  UsersUpdateWithoutDoctorsInput: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at", "patients"],
  Lab_requestsUpsertWithWhereUniqueWithoutDoctorsInput: ["where", "update", "create"],
  Lab_requestsUpdateWithWhereUniqueWithoutDoctorsInput: ["where", "data"],
  Lab_requestsUpdateManyWithWhereWithoutDoctorsInput: ["where", "data"],
  PrescriptionsUpsertWithWhereUniqueWithoutDoctorsInput: ["where", "update", "create"],
  PrescriptionsUpdateWithWhereUniqueWithoutDoctorsInput: ["where", "data"],
  PrescriptionsUpdateManyWithWhereWithoutDoctorsInput: ["where", "data"],
  PrescriptionsScalarWhereInput: ["AND", "OR", "NOT", "id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id", "patient_id"],
  Rdv_requestsUpsertWithWhereUniqueWithoutDoctorsInput: ["where", "update", "create"],
  Rdv_requestsUpdateWithWhereUniqueWithoutDoctorsInput: ["where", "data"],
  Rdv_requestsUpdateManyWithWhereWithoutDoctorsInput: ["where", "data"],
  Rdv_requestsScalarWhereInput: ["AND", "OR", "NOT", "id", "date", "time", "Motif", "Status", "patient_id", "doctor_id", "rdv_id"],
  RdvsUpsertWithWhereUniqueWithoutDoctorsInput: ["where", "update", "create"],
  RdvsUpdateWithWhereUniqueWithoutDoctorsInput: ["where", "data"],
  RdvsUpdateManyWithWhereWithoutDoctorsInput: ["where", "data"],
  RdvsScalarWhereInput: ["AND", "OR", "NOT", "id", "date", "time", "patient_id", "doctor_id", "consultation_id", "rdv_request_id"],
  AuthorizationsCreateWithoutInstituts_medicauxInput: ["id", "level", "patients"],
  AuthorizationsCreateOrConnectWithoutInstituts_medicauxInput: ["where", "create"],
  AuthorizationsCreateManyInstituts_medicauxInputEnvelope: ["data", "skipDuplicates"],
  ConsultationsCreateWithoutInstituts_medicauxInput: ["id", "section", "date", "notes", "measures", "lab_requests", "prescriptions", "patients", "doctors", "rdvs"],
  ConsultationsCreateOrConnectWithoutInstituts_medicauxInput: ["where", "create"],
  ConsultationsCreateManyInstituts_medicauxInputEnvelope: ["data", "skipDuplicates"],
  DoctorsCreateWithoutInstituts_medicauxInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "users", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  DoctorsCreateOrConnectWithoutInstituts_medicauxInput: ["where", "create"],
  AuthorizationsUpsertWithWhereUniqueWithoutInstituts_medicauxInput: ["where", "update", "create"],
  AuthorizationsUpdateWithWhereUniqueWithoutInstituts_medicauxInput: ["where", "data"],
  AuthorizationsUpdateManyWithWhereWithoutInstituts_medicauxInput: ["where", "data"],
  AuthorizationsScalarWhereInput: ["AND", "OR", "NOT", "id", "level", "institut_medical_id", "patient_id"],
  ConsultationsUpsertWithWhereUniqueWithoutInstituts_medicauxInput: ["where", "update", "create"],
  ConsultationsUpdateWithWhereUniqueWithoutInstituts_medicauxInput: ["where", "data"],
  ConsultationsUpdateManyWithWhereWithoutInstituts_medicauxInput: ["where", "data"],
  DoctorsUpsertWithWhereUniqueWithoutInstituts_medicauxInput: ["where", "update", "create"],
  DoctorsUpdateWithWhereUniqueWithoutInstituts_medicauxInput: ["where", "data"],
  DoctorsUpdateManyWithWhereWithoutInstituts_medicauxInput: ["where", "data"],
  DoctorsScalarWhereInput: ["AND", "OR", "NOT", "id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "user_id"],
  Lab_documentsCreateWithoutLab_attachmentsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "ctscan_results", "laboratories", "patients", "lab_requests", "lab_results", "xray_results"],
  Lab_documentsCreateOrConnectWithoutLab_attachmentsInput: ["where", "create"],
  Lab_documentsUpsertWithoutLab_attachmentsInput: ["update", "create", "where"],
  Lab_documentsUpdateToOneWithWhereWithoutLab_attachmentsInput: ["where", "data"],
  Lab_documentsUpdateWithoutLab_attachmentsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "ctscan_results", "laboratories", "patients", "lab_requests", "lab_results", "xray_results"],
  Analysis_resultsCreateWithoutLab_documentsInput: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value"],
  Analysis_resultsCreateOrConnectWithoutLab_documentsInput: ["where", "create"],
  Analysis_resultsCreateManyLab_documentsInputEnvelope: ["data", "skipDuplicates"],
  Ctscan_resultsCreateWithoutLab_documentsInput: ["id", "is_abnormal", "description", "title", "result_type"],
  Ctscan_resultsCreateOrConnectWithoutLab_documentsInput: ["where", "create"],
  Ctscan_resultsCreateManyLab_documentsInputEnvelope: ["data", "skipDuplicates"],
  Lab_attachmentsCreateWithoutLab_documentsInput: ["id", "name", "type", "url"],
  Lab_attachmentsCreateOrConnectWithoutLab_documentsInput: ["where", "create"],
  Lab_attachmentsCreateManyLab_documentsInputEnvelope: ["data", "skipDuplicates"],
  LaboratoriesCreateWithoutLab_documentsInput: ["id", "address", "phone", "email", "name"],
  LaboratoriesCreateOrConnectWithoutLab_documentsInput: ["where", "create"],
  PatientsCreateWithoutLab_documentsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  PatientsCreateOrConnectWithoutLab_documentsInput: ["where", "create"],
  Lab_requestsCreateWithoutLab_documentsInput: ["id", "type", "priority", "description", "consultations", "doctors", "patients"],
  Lab_requestsCreateOrConnectWithoutLab_documentsInput: ["where", "create"],
  Lab_resultsCreateWithoutLab_documentsInput: ["id", "is_abnormal", "description", "title", "result_type"],
  Lab_resultsCreateOrConnectWithoutLab_documentsInput: ["where", "create"],
  Lab_resultsCreateManyLab_documentsInputEnvelope: ["data", "skipDuplicates"],
  Xray_resultsCreateWithoutLab_documentsInput: ["id", "is_abnormal", "description", "title", "result_type"],
  Xray_resultsCreateOrConnectWithoutLab_documentsInput: ["where", "create"],
  Xray_resultsCreateManyLab_documentsInputEnvelope: ["data", "skipDuplicates"],
  Analysis_resultsUpsertWithWhereUniqueWithoutLab_documentsInput: ["where", "update", "create"],
  Analysis_resultsUpdateWithWhereUniqueWithoutLab_documentsInput: ["where", "data"],
  Analysis_resultsUpdateManyWithWhereWithoutLab_documentsInput: ["where", "data"],
  Analysis_resultsScalarWhereInput: ["AND", "OR", "NOT", "id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value", "lab_document_id"],
  Ctscan_resultsUpsertWithWhereUniqueWithoutLab_documentsInput: ["where", "update", "create"],
  Ctscan_resultsUpdateWithWhereUniqueWithoutLab_documentsInput: ["where", "data"],
  Ctscan_resultsUpdateManyWithWhereWithoutLab_documentsInput: ["where", "data"],
  Ctscan_resultsScalarWhereInput: ["AND", "OR", "NOT", "id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Lab_attachmentsUpsertWithWhereUniqueWithoutLab_documentsInput: ["where", "update", "create"],
  Lab_attachmentsUpdateWithWhereUniqueWithoutLab_documentsInput: ["where", "data"],
  Lab_attachmentsUpdateManyWithWhereWithoutLab_documentsInput: ["where", "data"],
  Lab_attachmentsScalarWhereInput: ["AND", "OR", "NOT", "id", "name", "type", "url", "lab_document_id"],
  LaboratoriesUpsertWithoutLab_documentsInput: ["update", "create", "where"],
  LaboratoriesUpdateToOneWithWhereWithoutLab_documentsInput: ["where", "data"],
  LaboratoriesUpdateWithoutLab_documentsInput: ["id", "address", "phone", "email", "name"],
  PatientsUpsertWithoutLab_documentsInput: ["update", "create", "where"],
  PatientsUpdateToOneWithWhereWithoutLab_documentsInput: ["where", "data"],
  PatientsUpdateWithoutLab_documentsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  Lab_requestsUpsertWithoutLab_documentsInput: ["update", "create", "where"],
  Lab_requestsUpdateToOneWithWhereWithoutLab_documentsInput: ["where", "data"],
  Lab_requestsUpdateWithoutLab_documentsInput: ["id", "type", "priority", "description", "consultations", "doctors", "patients"],
  Lab_resultsUpsertWithWhereUniqueWithoutLab_documentsInput: ["where", "update", "create"],
  Lab_resultsUpdateWithWhereUniqueWithoutLab_documentsInput: ["where", "data"],
  Lab_resultsUpdateManyWithWhereWithoutLab_documentsInput: ["where", "data"],
  Lab_resultsScalarWhereInput: ["AND", "OR", "NOT", "id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  Xray_resultsUpsertWithWhereUniqueWithoutLab_documentsInput: ["where", "update", "create"],
  Xray_resultsUpdateWithWhereUniqueWithoutLab_documentsInput: ["where", "data"],
  Xray_resultsUpdateManyWithWhereWithoutLab_documentsInput: ["where", "data"],
  Xray_resultsScalarWhereInput: ["AND", "OR", "NOT", "id", "is_abnormal", "description", "title", "result_type", "lab_document_id"],
  ConsultationsCreateWithoutLab_requestsInput: ["id", "section", "date", "notes", "measures", "prescriptions", "instituts_medicaux", "patients", "doctors", "rdvs"],
  ConsultationsCreateOrConnectWithoutLab_requestsInput: ["where", "create"],
  Lab_documentsCreateWithoutLab_requestsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "ctscan_results", "lab_attachments", "laboratories", "patients", "lab_results", "xray_results"],
  Lab_documentsCreateOrConnectWithoutLab_requestsInput: ["where", "create"],
  Lab_documentsCreateManyLab_requestsInputEnvelope: ["data", "skipDuplicates"],
  DoctorsCreateWithoutLab_requestsInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "instituts_medicaux", "users", "prescriptions", "rdv_requests", "rdvs"],
  DoctorsCreateOrConnectWithoutLab_requestsInput: ["where", "create"],
  PatientsCreateWithoutLab_requestsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  PatientsCreateOrConnectWithoutLab_requestsInput: ["where", "create"],
  ConsultationsUpsertWithWhereUniqueWithoutLab_requestsInput: ["where", "update", "create"],
  ConsultationsUpdateWithWhereUniqueWithoutLab_requestsInput: ["where", "data"],
  ConsultationsUpdateManyWithWhereWithoutLab_requestsInput: ["where", "data"],
  Lab_documentsUpsertWithWhereUniqueWithoutLab_requestsInput: ["where", "update", "create"],
  Lab_documentsUpdateWithWhereUniqueWithoutLab_requestsInput: ["where", "data"],
  Lab_documentsUpdateManyWithWhereWithoutLab_requestsInput: ["where", "data"],
  Lab_documentsScalarWhereInput: ["AND", "OR", "NOT", "id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id", "lab_request_id"],
  DoctorsUpsertWithoutLab_requestsInput: ["update", "create", "where"],
  DoctorsUpdateToOneWithWhereWithoutLab_requestsInput: ["where", "data"],
  DoctorsUpdateWithoutLab_requestsInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "instituts_medicaux", "users", "prescriptions", "rdv_requests", "rdvs"],
  PatientsUpsertWithoutLab_requestsInput: ["update", "create", "where"],
  PatientsUpdateToOneWithWhereWithoutLab_requestsInput: ["where", "data"],
  PatientsUpdateWithoutLab_requestsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  Lab_documentsCreateWithoutLab_resultsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "ctscan_results", "lab_attachments", "laboratories", "patients", "lab_requests", "xray_results"],
  Lab_documentsCreateOrConnectWithoutLab_resultsInput: ["where", "create"],
  Lab_documentsUpsertWithoutLab_resultsInput: ["update", "create", "where"],
  Lab_documentsUpdateToOneWithWhereWithoutLab_resultsInput: ["where", "data"],
  Lab_documentsUpdateWithoutLab_resultsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "ctscan_results", "lab_attachments", "laboratories", "patients", "lab_requests", "xray_results"],
  Lab_documentsCreateWithoutLaboratoriesInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "ctscan_results", "lab_attachments", "patients", "lab_requests", "lab_results", "xray_results"],
  Lab_documentsCreateOrConnectWithoutLaboratoriesInput: ["where", "create"],
  Lab_documentsCreateManyLaboratoriesInputEnvelope: ["data", "skipDuplicates"],
  Lab_documentsUpsertWithWhereUniqueWithoutLaboratoriesInput: ["where", "update", "create"],
  Lab_documentsUpdateWithWhereUniqueWithoutLaboratoriesInput: ["where", "data"],
  Lab_documentsUpdateManyWithWhereWithoutLaboratoriesInput: ["where", "data"],
  PrescriptionsCreateWithoutMedicationsInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "consultations", "doctors", "patients"],
  PrescriptionsCreateOrConnectWithoutMedicationsInput: ["where", "create"],
  PrescriptionsUpsertWithoutMedicationsInput: ["update", "create", "where"],
  PrescriptionsUpdateToOneWithWhereWithoutMedicationsInput: ["where", "data"],
  PrescriptionsUpdateWithoutMedicationsInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "consultations", "doctors", "patients"],
  GeneralMedicalRecordsCreateWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput: ["id", "allergies", "bloodType", "birthDate", "height", "weight", "patients_patients_general_medical_record_idToGeneralMedicalRecords"],
  GeneralMedicalRecordsCreateOrConnectWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput: ["where", "create"],
  AuthorizationsCreateWithoutPatientsInput: ["id", "level", "instituts_medicaux"],
  AuthorizationsCreateOrConnectWithoutPatientsInput: ["where", "create"],
  AuthorizationsCreateManyPatientsInputEnvelope: ["data", "skipDuplicates"],
  CertificatesCreateWithoutPatientsInput: ["id", "type", "start_date", "end_date", "description", "doctors"],
  CertificatesCreateOrConnectWithoutPatientsInput: ["where", "create"],
  CertificatesCreateManyPatientsInputEnvelope: ["data", "skipDuplicates"],
  ConsultationsCreateWithoutPatientsInput: ["id", "section", "date", "notes", "measures", "lab_requests", "prescriptions", "instituts_medicaux", "doctors", "rdvs"],
  ConsultationsCreateOrConnectWithoutPatientsInput: ["where", "create"],
  ConsultationsCreateManyPatientsInputEnvelope: ["data", "skipDuplicates"],
  Lab_documentsCreateWithoutPatientsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "ctscan_results", "lab_attachments", "laboratories", "lab_requests", "lab_results", "xray_results"],
  Lab_documentsCreateOrConnectWithoutPatientsInput: ["where", "create"],
  Lab_documentsCreateManyPatientsInputEnvelope: ["data", "skipDuplicates"],
  Lab_requestsCreateWithoutPatientsInput: ["id", "type", "priority", "description", "consultations", "lab_documents", "doctors"],
  Lab_requestsCreateOrConnectWithoutPatientsInput: ["where", "create"],
  Lab_requestsCreateManyPatientsInputEnvelope: ["data", "skipDuplicates"],
  UsersCreateWithoutPatientsInput: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at", "doctors"],
  UsersCreateOrConnectWithoutPatientsInput: ["where", "create"],
  GeneralMedicalRecordsCreateWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput: ["id", "allergies", "bloodType", "birthDate", "height", "weight", "patients_GeneralMedicalRecords_patient_idTopatients"],
  GeneralMedicalRecordsCreateOrConnectWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput: ["where", "create"],
  PrescriptionsCreateWithoutPatientsInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "consultations", "medications", "doctors"],
  PrescriptionsCreateOrConnectWithoutPatientsInput: ["where", "create"],
  PrescriptionsCreateManyPatientsInputEnvelope: ["data", "skipDuplicates"],
  Rdv_requestsCreateWithoutPatientsInput: ["id", "date", "time", "Motif", "Status", "rdvs_rdv_requests_rdv_idTordvs", "doctors", "rdvs_rdvs_rdv_request_idTordv_requests"],
  Rdv_requestsCreateOrConnectWithoutPatientsInput: ["where", "create"],
  Rdv_requestsCreateManyPatientsInputEnvelope: ["data", "skipDuplicates"],
  RdvsCreateWithoutPatientsInput: ["id", "date", "time", "rdv_requests_rdv_requests_rdv_idTordvs", "consultations", "rdv_requests_rdvs_rdv_request_idTordv_requests", "doctors"],
  RdvsCreateOrConnectWithoutPatientsInput: ["where", "create"],
  RdvsCreateManyPatientsInputEnvelope: ["data", "skipDuplicates"],
  GeneralMedicalRecordsUpsertWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput: ["update", "create", "where"],
  GeneralMedicalRecordsUpdateToOneWithWhereWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput: ["where", "data"],
  GeneralMedicalRecordsUpdateWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput: ["id", "allergies", "bloodType", "birthDate", "height", "weight", "patients_patients_general_medical_record_idToGeneralMedicalRecords"],
  AuthorizationsUpsertWithWhereUniqueWithoutPatientsInput: ["where", "update", "create"],
  AuthorizationsUpdateWithWhereUniqueWithoutPatientsInput: ["where", "data"],
  AuthorizationsUpdateManyWithWhereWithoutPatientsInput: ["where", "data"],
  CertificatesUpsertWithWhereUniqueWithoutPatientsInput: ["where", "update", "create"],
  CertificatesUpdateWithWhereUniqueWithoutPatientsInput: ["where", "data"],
  CertificatesUpdateManyWithWhereWithoutPatientsInput: ["where", "data"],
  ConsultationsUpsertWithWhereUniqueWithoutPatientsInput: ["where", "update", "create"],
  ConsultationsUpdateWithWhereUniqueWithoutPatientsInput: ["where", "data"],
  ConsultationsUpdateManyWithWhereWithoutPatientsInput: ["where", "data"],
  Lab_documentsUpsertWithWhereUniqueWithoutPatientsInput: ["where", "update", "create"],
  Lab_documentsUpdateWithWhereUniqueWithoutPatientsInput: ["where", "data"],
  Lab_documentsUpdateManyWithWhereWithoutPatientsInput: ["where", "data"],
  Lab_requestsUpsertWithWhereUniqueWithoutPatientsInput: ["where", "update", "create"],
  Lab_requestsUpdateWithWhereUniqueWithoutPatientsInput: ["where", "data"],
  Lab_requestsUpdateManyWithWhereWithoutPatientsInput: ["where", "data"],
  UsersUpsertWithoutPatientsInput: ["update", "create", "where"],
  UsersUpdateToOneWithWhereWithoutPatientsInput: ["where", "data"],
  UsersUpdateWithoutPatientsInput: ["id", "address", "created_at", "email", "first_name", "last_name", "is_verified", "last_login", "phone", "profile_picture", "role", "associated_id", "updated_at", "doctors"],
  GeneralMedicalRecordsUpsertWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput: ["update", "create", "where"],
  GeneralMedicalRecordsUpdateToOneWithWhereWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput: ["where", "data"],
  GeneralMedicalRecordsUpdateWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput: ["id", "allergies", "bloodType", "birthDate", "height", "weight", "patients_GeneralMedicalRecords_patient_idTopatients"],
  PrescriptionsUpsertWithWhereUniqueWithoutPatientsInput: ["where", "update", "create"],
  PrescriptionsUpdateWithWhereUniqueWithoutPatientsInput: ["where", "data"],
  PrescriptionsUpdateManyWithWhereWithoutPatientsInput: ["where", "data"],
  Rdv_requestsUpsertWithWhereUniqueWithoutPatientsInput: ["where", "update", "create"],
  Rdv_requestsUpdateWithWhereUniqueWithoutPatientsInput: ["where", "data"],
  Rdv_requestsUpdateManyWithWhereWithoutPatientsInput: ["where", "data"],
  RdvsUpsertWithWhereUniqueWithoutPatientsInput: ["where", "update", "create"],
  RdvsUpdateWithWhereUniqueWithoutPatientsInput: ["where", "data"],
  RdvsUpdateManyWithWhereWithoutPatientsInput: ["where", "data"],
  ConsultationsCreateWithoutPrescriptionsInput: ["id", "section", "date", "notes", "measures", "lab_requests", "instituts_medicaux", "patients", "doctors", "rdvs"],
  ConsultationsCreateOrConnectWithoutPrescriptionsInput: ["where", "create"],
  MedicationsCreateWithoutPrescriptionsInput: ["id", "dosage", "duration", "frequency", "name", "quantity"],
  MedicationsCreateOrConnectWithoutPrescriptionsInput: ["where", "create"],
  MedicationsCreateManyPrescriptionsInputEnvelope: ["data", "skipDuplicates"],
  DoctorsCreateWithoutPrescriptionsInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "instituts_medicaux", "users", "lab_requests", "rdv_requests", "rdvs"],
  DoctorsCreateOrConnectWithoutPrescriptionsInput: ["where", "create"],
  PatientsCreateWithoutPrescriptionsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "rdv_requests", "rdvs"],
  PatientsCreateOrConnectWithoutPrescriptionsInput: ["where", "create"],
  ConsultationsUpsertWithoutPrescriptionsInput: ["update", "create", "where"],
  ConsultationsUpdateToOneWithWhereWithoutPrescriptionsInput: ["where", "data"],
  ConsultationsUpdateWithoutPrescriptionsInput: ["id", "section", "date", "notes", "measures", "lab_requests", "instituts_medicaux", "patients", "doctors", "rdvs"],
  MedicationsUpsertWithWhereUniqueWithoutPrescriptionsInput: ["where", "update", "create"],
  MedicationsUpdateWithWhereUniqueWithoutPrescriptionsInput: ["where", "data"],
  MedicationsUpdateManyWithWhereWithoutPrescriptionsInput: ["where", "data"],
  MedicationsScalarWhereInput: ["AND", "OR", "NOT", "id", "dosage", "duration", "frequency", "name", "quantity", "prescription_id"],
  DoctorsUpsertWithoutPrescriptionsInput: ["update", "create", "where"],
  DoctorsUpdateToOneWithWhereWithoutPrescriptionsInput: ["where", "data"],
  DoctorsUpdateWithoutPrescriptionsInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "instituts_medicaux", "users", "lab_requests", "rdv_requests", "rdvs"],
  PatientsUpsertWithoutPrescriptionsInput: ["update", "create", "where"],
  PatientsUpdateToOneWithWhereWithoutPrescriptionsInput: ["where", "data"],
  PatientsUpdateWithoutPrescriptionsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "rdv_requests", "rdvs"],
  RdvsCreateWithoutRdv_requests_rdv_requests_rdv_idTordvsInput: ["id", "date", "time", "consultations", "patients", "rdv_requests_rdvs_rdv_request_idTordv_requests", "doctors"],
  RdvsCreateOrConnectWithoutRdv_requests_rdv_requests_rdv_idTordvsInput: ["where", "create"],
  PatientsCreateWithoutRdv_requestsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdvs"],
  PatientsCreateOrConnectWithoutRdv_requestsInput: ["where", "create"],
  DoctorsCreateWithoutRdv_requestsInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "instituts_medicaux", "users", "lab_requests", "prescriptions", "rdvs"],
  DoctorsCreateOrConnectWithoutRdv_requestsInput: ["where", "create"],
  RdvsCreateWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput: ["id", "date", "time", "rdv_requests_rdv_requests_rdv_idTordvs", "consultations", "patients", "doctors"],
  RdvsCreateOrConnectWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput: ["where", "create"],
  RdvsUpsertWithoutRdv_requests_rdv_requests_rdv_idTordvsInput: ["update", "create", "where"],
  RdvsUpdateToOneWithWhereWithoutRdv_requests_rdv_requests_rdv_idTordvsInput: ["where", "data"],
  RdvsUpdateWithoutRdv_requests_rdv_requests_rdv_idTordvsInput: ["id", "date", "time", "consultations", "patients", "rdv_requests_rdvs_rdv_request_idTordv_requests", "doctors"],
  PatientsUpsertWithoutRdv_requestsInput: ["update", "create", "where"],
  PatientsUpdateToOneWithWhereWithoutRdv_requestsInput: ["where", "data"],
  PatientsUpdateWithoutRdv_requestsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdvs"],
  DoctorsUpsertWithoutRdv_requestsInput: ["update", "create", "where"],
  DoctorsUpdateToOneWithWhereWithoutRdv_requestsInput: ["where", "data"],
  DoctorsUpdateWithoutRdv_requestsInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "instituts_medicaux", "users", "lab_requests", "prescriptions", "rdvs"],
  RdvsUpsertWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput: ["update", "create", "where"],
  RdvsUpdateToOneWithWhereWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput: ["where", "data"],
  RdvsUpdateWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput: ["id", "date", "time", "rdv_requests_rdv_requests_rdv_idTordvs", "consultations", "patients", "doctors"],
  Rdv_requestsCreateWithoutRdvs_rdv_requests_rdv_idTordvsInput: ["id", "date", "time", "Motif", "Status", "patients", "doctors", "rdvs_rdvs_rdv_request_idTordv_requests"],
  Rdv_requestsCreateOrConnectWithoutRdvs_rdv_requests_rdv_idTordvsInput: ["where", "create"],
  ConsultationsCreateWithoutRdvsInput: ["id", "section", "date", "notes", "measures", "lab_requests", "prescriptions", "instituts_medicaux", "patients", "doctors"],
  ConsultationsCreateOrConnectWithoutRdvsInput: ["where", "create"],
  PatientsCreateWithoutRdvsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests"],
  PatientsCreateOrConnectWithoutRdvsInput: ["where", "create"],
  Rdv_requestsCreateWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput: ["id", "date", "time", "Motif", "Status", "rdvs_rdv_requests_rdv_idTordvs", "patients", "doctors"],
  Rdv_requestsCreateOrConnectWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput: ["where", "create"],
  DoctorsCreateWithoutRdvsInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "instituts_medicaux", "users", "lab_requests", "prescriptions", "rdv_requests"],
  DoctorsCreateOrConnectWithoutRdvsInput: ["where", "create"],
  Rdv_requestsUpsertWithoutRdvs_rdv_requests_rdv_idTordvsInput: ["update", "create", "where"],
  Rdv_requestsUpdateToOneWithWhereWithoutRdvs_rdv_requests_rdv_idTordvsInput: ["where", "data"],
  Rdv_requestsUpdateWithoutRdvs_rdv_requests_rdv_idTordvsInput: ["id", "date", "time", "Motif", "Status", "patients", "doctors", "rdvs_rdvs_rdv_request_idTordv_requests"],
  ConsultationsUpsertWithoutRdvsInput: ["update", "create", "where"],
  ConsultationsUpdateToOneWithWhereWithoutRdvsInput: ["where", "data"],
  ConsultationsUpdateWithoutRdvsInput: ["id", "section", "date", "notes", "measures", "lab_requests", "prescriptions", "instituts_medicaux", "patients", "doctors"],
  PatientsUpsertWithoutRdvsInput: ["update", "create", "where"],
  PatientsUpdateToOneWithWhereWithoutRdvsInput: ["where", "data"],
  PatientsUpdateWithoutRdvsInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "users", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests"],
  Rdv_requestsUpsertWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput: ["update", "create", "where"],
  Rdv_requestsUpdateToOneWithWhereWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput: ["where", "data"],
  Rdv_requestsUpdateWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput: ["id", "date", "time", "Motif", "Status", "rdvs_rdv_requests_rdv_idTordvs", "patients", "doctors"],
  DoctorsUpsertWithoutRdvsInput: ["update", "create", "where"],
  DoctorsUpdateToOneWithWhereWithoutRdvsInput: ["where", "data"],
  DoctorsUpdateWithoutRdvsInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "instituts_medicaux", "users", "lab_requests", "prescriptions", "rdv_requests"],
  DoctorsCreateWithoutUsersInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "instituts_medicaux", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  DoctorsCreateOrConnectWithoutUsersInput: ["where", "create"],
  PatientsCreateWithoutUsersInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  PatientsCreateOrConnectWithoutUsersInput: ["where", "create"],
  DoctorsUpsertWithoutUsersInput: ["update", "create", "where"],
  DoctorsUpdateToOneWithWhereWithoutUsersInput: ["where", "data"],
  DoctorsUpdateWithoutUsersInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "instituts_medicaux", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  PatientsUpsertWithoutUsersInput: ["update", "create", "where"],
  PatientsUpdateToOneWithWhereWithoutUsersInput: ["where", "data"],
  PatientsUpdateWithoutUsersInput: ["id", "cin", "date_of_birth", "gender", "profile_image", "GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients", "authorizations", "certificates", "consultations", "lab_documents", "lab_requests", "GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords", "prescriptions", "rdv_requests", "rdvs"],
  Lab_documentsCreateWithoutXray_resultsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "ctscan_results", "lab_attachments", "laboratories", "patients", "lab_requests", "lab_results"],
  Lab_documentsCreateOrConnectWithoutXray_resultsInput: ["where", "create"],
  Lab_documentsUpsertWithoutXray_resultsInput: ["update", "create", "where"],
  Lab_documentsUpdateToOneWithWhereWithoutXray_resultsInput: ["where", "data"],
  Lab_documentsUpdateWithoutXray_resultsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "ctscan_results", "lab_attachments", "laboratories", "patients", "lab_requests", "lab_results"],
  Lab_requestsUpdateWithoutConsultationsInput: ["id", "type", "priority", "description", "lab_documents", "doctors", "patients"],
  CertificatesCreateManyDoctorsInput: ["id", "type", "start_date", "end_date", "description", "patient_id"],
  ConsultationsCreateManyDoctorsInput: ["id", "section", "date", "notes", "measures", "institut_medical_id", "prescription_id", "patient_id"],
  Lab_requestsCreateManyDoctorsInput: ["id", "type", "priority", "description", "patient_id"],
  PrescriptionsCreateManyDoctorsInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "patient_id"],
  Rdv_requestsCreateManyDoctorsInput: ["id", "date", "time", "Motif", "Status", "patient_id", "rdv_id"],
  RdvsCreateManyDoctorsInput: ["id", "date", "time", "patient_id", "consultation_id", "rdv_request_id"],
  CertificatesUpdateWithoutDoctorsInput: ["id", "type", "start_date", "end_date", "description", "patients"],
  ConsultationsUpdateWithoutDoctorsInput: ["id", "section", "date", "notes", "measures", "lab_requests", "prescriptions", "instituts_medicaux", "patients", "rdvs"],
  Instituts_medicauxUpdateWithoutDoctorsInput: ["id", "type", "authorizations", "consultations"],
  Lab_requestsUpdateWithoutDoctorsInput: ["id", "type", "priority", "description", "consultations", "lab_documents", "patients"],
  PrescriptionsUpdateWithoutDoctorsInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "consultations", "medications", "patients"],
  Rdv_requestsUpdateWithoutDoctorsInput: ["id", "date", "time", "Motif", "Status", "rdvs_rdv_requests_rdv_idTordvs", "patients", "rdvs_rdvs_rdv_request_idTordv_requests"],
  RdvsUpdateWithoutDoctorsInput: ["id", "date", "time", "rdv_requests_rdv_requests_rdv_idTordvs", "consultations", "patients", "rdv_requests_rdvs_rdv_request_idTordv_requests"],
  AuthorizationsCreateManyInstituts_medicauxInput: ["id", "level", "patient_id"],
  ConsultationsCreateManyInstituts_medicauxInput: ["id", "section", "date", "notes", "measures", "doctor_id", "prescription_id", "patient_id"],
  AuthorizationsUpdateWithoutInstituts_medicauxInput: ["id", "level", "patients"],
  ConsultationsUpdateWithoutInstituts_medicauxInput: ["id", "section", "date", "notes", "measures", "lab_requests", "prescriptions", "patients", "doctors", "rdvs"],
  DoctorsUpdateWithoutInstituts_medicauxInput: ["id", "type", "bio", "education", "experience", "first_name", "languages", "last_name", "profile_image", "specialty", "certificates", "consultations", "users", "lab_requests", "prescriptions", "rdv_requests", "rdvs"],
  Analysis_resultsCreateManyLab_documentsInput: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value"],
  Ctscan_resultsCreateManyLab_documentsInput: ["id", "is_abnormal", "description", "title", "result_type"],
  Lab_attachmentsCreateManyLab_documentsInput: ["id", "name", "type", "url"],
  Lab_resultsCreateManyLab_documentsInput: ["id", "is_abnormal", "description", "title", "result_type"],
  Xray_resultsCreateManyLab_documentsInput: ["id", "is_abnormal", "description", "title", "result_type"],
  Analysis_resultsUpdateWithoutLab_documentsInput: ["id", "is_abnormal", "description", "title", "result_type", "reference_range", "unit", "value"],
  Ctscan_resultsUpdateWithoutLab_documentsInput: ["id", "is_abnormal", "description", "title", "result_type"],
  Lab_attachmentsUpdateWithoutLab_documentsInput: ["id", "name", "type", "url"],
  Lab_resultsUpdateWithoutLab_documentsInput: ["id", "is_abnormal", "description", "title", "result_type"],
  Xray_resultsUpdateWithoutLab_documentsInput: ["id", "is_abnormal", "description", "title", "result_type"],
  Lab_documentsCreateManyLab_requestsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "laboratory_id"],
  ConsultationsUpdateWithoutLab_requestsInput: ["id", "section", "date", "notes", "measures", "prescriptions", "instituts_medicaux", "patients", "doctors", "rdvs"],
  Lab_documentsUpdateWithoutLab_requestsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "ctscan_results", "lab_attachments", "laboratories", "patients", "lab_results", "xray_results"],
  Lab_documentsCreateManyLaboratoriesInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "patient_id", "lab_request_id"],
  Lab_documentsUpdateWithoutLaboratoriesInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "ctscan_results", "lab_attachments", "patients", "lab_requests", "lab_results", "xray_results"],
  AuthorizationsCreateManyPatientsInput: ["id", "level", "institut_medical_id"],
  CertificatesCreateManyPatientsInput: ["id", "type", "start_date", "end_date", "description", "doctor_id"],
  ConsultationsCreateManyPatientsInput: ["id", "section", "date", "notes", "measures", "doctor_id", "institut_medical_id", "prescription_id"],
  Lab_documentsCreateManyPatientsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "laboratory_id", "lab_request_id"],
  Lab_requestsCreateManyPatientsInput: ["id", "type", "priority", "description", "doctor_id"],
  PrescriptionsCreateManyPatientsInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "doctor_id"],
  Rdv_requestsCreateManyPatientsInput: ["id", "date", "time", "Motif", "Status", "doctor_id", "rdv_id"],
  RdvsCreateManyPatientsInput: ["id", "date", "time", "doctor_id", "consultation_id", "rdv_request_id"],
  AuthorizationsUpdateWithoutPatientsInput: ["id", "level", "instituts_medicaux"],
  CertificatesUpdateWithoutPatientsInput: ["id", "type", "start_date", "end_date", "description", "doctors"],
  ConsultationsUpdateWithoutPatientsInput: ["id", "section", "date", "notes", "measures", "lab_requests", "prescriptions", "instituts_medicaux", "doctors", "rdvs"],
  Lab_documentsUpdateWithoutPatientsInput: ["id", "completed_at", "created_at", "notes", "requested_at", "status", "section", "analysis_results", "ctscan_results", "lab_attachments", "laboratories", "lab_requests", "lab_results", "xray_results"],
  Lab_requestsUpdateWithoutPatientsInput: ["id", "type", "priority", "description", "consultations", "lab_documents", "doctors"],
  PrescriptionsUpdateWithoutPatientsInput: ["id", "date", "instructions", "is_signed", "section", "status", "updated_at", "consultations", "medications", "doctors"],
  Rdv_requestsUpdateWithoutPatientsInput: ["id", "date", "time", "Motif", "Status", "rdvs_rdv_requests_rdv_idTordvs", "doctors", "rdvs_rdvs_rdv_request_idTordv_requests"],
  RdvsUpdateWithoutPatientsInput: ["id", "date", "time", "rdv_requests_rdv_requests_rdv_idTordvs", "consultations", "rdv_requests_rdvs_rdv_request_idTordv_requests", "doctors"],
  MedicationsCreateManyPrescriptionsInput: ["id", "dosage", "duration", "frequency", "name", "quantity"],
  MedicationsUpdateWithoutPrescriptionsInput: ["id", "dosage", "duration", "frequency", "name", "quantity"]
};

type InputTypesNames = keyof typeof inputTypes;

type InputTypeFieldNames<TInput extends InputTypesNames> = Exclude<
  keyof typeof inputTypes[TInput]["prototype"],
  number | symbol
>;

type InputTypeFieldsConfig<
  TInput extends InputTypesNames
> = FieldsConfig<InputTypeFieldNames<TInput>>;

export type InputTypeConfig<TInput extends InputTypesNames> = {
  class?: ClassDecorator[];
  fields?: InputTypeFieldsConfig<TInput>;
};

export type InputTypesEnhanceMap = {
  [TInput in InputTypesNames]?: InputTypeConfig<TInput>;
};

export function applyInputTypesEnhanceMap(
  inputTypesEnhanceMap: InputTypesEnhanceMap,
) {
  for (const inputTypeEnhanceMapKey of Object.keys(inputTypesEnhanceMap)) {
    const inputTypeName = inputTypeEnhanceMapKey as keyof typeof inputTypesEnhanceMap;
    const typeConfig = inputTypesEnhanceMap[inputTypeName]!;
    const typeClass = inputTypes[inputTypeName];
    const typeTarget = typeClass.prototype;
    applyTypeClassEnhanceConfig(
      typeConfig,
      typeClass,
      typeTarget,
      inputsInfo[inputTypeName as keyof typeof inputsInfo],
    );
  }
}

