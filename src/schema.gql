# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

type AggregateAnalysis_results {
  _count: Analysis_resultsCountAggregate
  _max: Analysis_resultsMaxAggregate
  _min: Analysis_resultsMinAggregate
}

type AggregateAuthorizations {
  _count: AuthorizationsCountAggregate
  _max: AuthorizationsMaxAggregate
  _min: AuthorizationsMinAggregate
}

type AggregateCertificates {
  _count: CertificatesCountAggregate
  _max: CertificatesMaxAggregate
  _min: CertificatesMinAggregate
}

type AggregateCliniques {
  _count: CliniquesCountAggregate
  _max: CliniquesMaxAggregate
  _min: CliniquesMinAggregate
}

type AggregateConsultations {
  _count: ConsultationsCountAggregate
  _max: ConsultationsMaxAggregate
  _min: ConsultationsMinAggregate
}

type AggregateCtscan_results {
  _count: Ctscan_resultsCountAggregate
  _max: Ctscan_resultsMaxAggregate
  _min: Ctscan_resultsMinAggregate
}

type AggregateDoctors {
  _count: DoctorsCountAggregate
  _max: DoctorsMaxAggregate
  _min: DoctorsMinAggregate
}

type AggregateGeneralMedicalRecords {
  _avg: GeneralMedicalRecordsAvgAggregate
  _count: GeneralMedicalRecordsCountAggregate
  _max: GeneralMedicalRecordsMaxAggregate
  _min: GeneralMedicalRecordsMinAggregate
  _sum: GeneralMedicalRecordsSumAggregate
}

type AggregateHopitaux {
  _count: HopitauxCountAggregate
  _max: HopitauxMaxAggregate
  _min: HopitauxMinAggregate
}

type AggregateInstituts_medicaux {
  _count: Instituts_medicauxCountAggregate
  _max: Instituts_medicauxMaxAggregate
  _min: Instituts_medicauxMinAggregate
}

type AggregateLab_attachments {
  _count: Lab_attachmentsCountAggregate
  _max: Lab_attachmentsMaxAggregate
  _min: Lab_attachmentsMinAggregate
}

type AggregateLab_documents {
  _count: Lab_documentsCountAggregate
  _max: Lab_documentsMaxAggregate
  _min: Lab_documentsMinAggregate
}

type AggregateLab_requests {
  _count: Lab_requestsCountAggregate
  _max: Lab_requestsMaxAggregate
  _min: Lab_requestsMinAggregate
}

type AggregateLab_results {
  _count: Lab_resultsCountAggregate
  _max: Lab_resultsMaxAggregate
  _min: Lab_resultsMinAggregate
}

type AggregateLaboratories {
  _count: LaboratoriesCountAggregate
  _max: LaboratoriesMaxAggregate
  _min: LaboratoriesMinAggregate
}

type AggregateMedications {
  _avg: MedicationsAvgAggregate
  _count: MedicationsCountAggregate
  _max: MedicationsMaxAggregate
  _min: MedicationsMinAggregate
  _sum: MedicationsSumAggregate
}

type AggregateMessage {
  _count: MessageCountAggregate
  _max: MessageMaxAggregate
  _min: MessageMinAggregate
}

type AggregateMessageAttachment {
  _avg: MessageAttachmentAvgAggregate
  _count: MessageAttachmentCountAggregate
  _max: MessageAttachmentMaxAggregate
  _min: MessageAttachmentMinAggregate
  _sum: MessageAttachmentSumAggregate
}

type AggregatePatients {
  _avg: PatientsAvgAggregate
  _count: PatientsCountAggregate
  _max: PatientsMaxAggregate
  _min: PatientsMinAggregate
  _sum: PatientsSumAggregate
}

type AggregatePharmacies {
  _count: PharmaciesCountAggregate
  _max: PharmaciesMaxAggregate
  _min: PharmaciesMinAggregate
}

type AggregatePrescriptions {
  _count: PrescriptionsCountAggregate
  _max: PrescriptionsMaxAggregate
  _min: PrescriptionsMinAggregate
}

type AggregateRdv_requests {
  _count: Rdv_requestsCountAggregate
  _max: Rdv_requestsMaxAggregate
  _min: Rdv_requestsMinAggregate
}

type AggregateRdvs {
  _count: RdvsCountAggregate
  _max: RdvsMaxAggregate
  _min: RdvsMinAggregate
}

type AggregateUsers {
  _count: UsersCountAggregate
  _max: UsersMaxAggregate
  _min: UsersMinAggregate
}

type AggregateVerification_tokens {
  _avg: Verification_tokensAvgAggregate
  _count: Verification_tokensCountAggregate
  _max: Verification_tokensMaxAggregate
  _min: Verification_tokensMinAggregate
  _sum: Verification_tokensSumAggregate
}

type AggregateXray_results {
  _count: Xray_resultsCountAggregate
  _max: Xray_resultsMaxAggregate
  _min: Xray_resultsMinAggregate
}

type Analysis_results {
  description: String
  id: String!
  is_abnormal: Boolean!
  lab_document_id: String!
  lab_documents: Lab_documents!
  reference_range: String!
  result_type: analysis_results_result_type_enum!
  title: String!
  unit: String!
  value: String!
}

type Analysis_resultsCountAggregate {
  _all: Int!
  description: Int!
  id: Int!
  is_abnormal: Int!
  lab_document_id: Int!
  reference_range: Int!
  result_type: Int!
  title: Int!
  unit: Int!
  value: Int!
}

input Analysis_resultsCountOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  reference_range: SortOrder
  result_type: SortOrder
  title: SortOrder
  unit: SortOrder
  value: SortOrder
}

input Analysis_resultsCreateInput {
  description: String
  id: String
  is_abnormal: Boolean!
  lab_documents: Lab_documentsCreateNestedOneWithoutAnalysis_resultsInput!
  reference_range: String!
  result_type: analysis_results_result_type_enum!
  title: String!
  unit: String!
  value: String!
}

input Analysis_resultsCreateManyInput {
  description: String
  id: String
  is_abnormal: Boolean!
  lab_document_id: String!
  reference_range: String!
  result_type: analysis_results_result_type_enum!
  title: String!
  unit: String!
  value: String!
}

input Analysis_resultsCreateManyLab_documentsInput {
  description: String
  id: String
  is_abnormal: Boolean!
  reference_range: String!
  result_type: analysis_results_result_type_enum!
  title: String!
  unit: String!
  value: String!
}

input Analysis_resultsCreateManyLab_documentsInputEnvelope {
  data: [Analysis_resultsCreateManyLab_documentsInput!]!
  skipDuplicates: Boolean
}

input Analysis_resultsCreateNestedManyWithoutLab_documentsInput {
  connect: [Analysis_resultsWhereUniqueInput!]
  connectOrCreate: [Analysis_resultsCreateOrConnectWithoutLab_documentsInput!]
  create: [Analysis_resultsCreateWithoutLab_documentsInput!]
  createMany: Analysis_resultsCreateManyLab_documentsInputEnvelope
}

input Analysis_resultsCreateOrConnectWithoutLab_documentsInput {
  create: Analysis_resultsCreateWithoutLab_documentsInput!
  where: Analysis_resultsWhereUniqueInput!
}

input Analysis_resultsCreateWithoutLab_documentsInput {
  description: String
  id: String
  is_abnormal: Boolean!
  reference_range: String!
  result_type: analysis_results_result_type_enum!
  title: String!
  unit: String!
  value: String!
}

type Analysis_resultsGroupBy {
  _count: Analysis_resultsCountAggregate
  _max: Analysis_resultsMaxAggregate
  _min: Analysis_resultsMinAggregate
  description: String
  id: String!
  is_abnormal: Boolean!
  lab_document_id: String!
  reference_range: String!
  result_type: analysis_results_result_type_enum!
  title: String!
  unit: String!
  value: String!
}

input Analysis_resultsListRelationFilter {
  every: Analysis_resultsWhereInput
  none: Analysis_resultsWhereInput
  some: Analysis_resultsWhereInput
}

type Analysis_resultsMaxAggregate {
  description: String
  id: String
  is_abnormal: Boolean
  lab_document_id: String
  reference_range: String
  result_type: analysis_results_result_type_enum
  title: String
  unit: String
  value: String
}

input Analysis_resultsMaxOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  reference_range: SortOrder
  result_type: SortOrder
  title: SortOrder
  unit: SortOrder
  value: SortOrder
}

type Analysis_resultsMinAggregate {
  description: String
  id: String
  is_abnormal: Boolean
  lab_document_id: String
  reference_range: String
  result_type: analysis_results_result_type_enum
  title: String
  unit: String
  value: String
}

input Analysis_resultsMinOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  reference_range: SortOrder
  result_type: SortOrder
  title: SortOrder
  unit: SortOrder
  value: SortOrder
}

input Analysis_resultsOrderByRelationAggregateInput {
  _count: SortOrder
}

input Analysis_resultsOrderByWithAggregationInput {
  _count: Analysis_resultsCountOrderByAggregateInput
  _max: Analysis_resultsMaxOrderByAggregateInput
  _min: Analysis_resultsMinOrderByAggregateInput
  description: SortOrderInput
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  reference_range: SortOrder
  result_type: SortOrder
  title: SortOrder
  unit: SortOrder
  value: SortOrder
}

input Analysis_resultsOrderByWithRelationInput {
  description: SortOrderInput
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  lab_documents: Lab_documentsOrderByWithRelationInput
  reference_range: SortOrder
  result_type: SortOrder
  title: SortOrder
  unit: SortOrder
  value: SortOrder
}

enum Analysis_resultsScalarFieldEnum {
  description
  id
  is_abnormal
  lab_document_id
  reference_range
  result_type
  title
  unit
  value
}

input Analysis_resultsScalarWhereInput {
  AND: [Analysis_resultsScalarWhereInput!]
  NOT: [Analysis_resultsScalarWhereInput!]
  OR: [Analysis_resultsScalarWhereInput!]
  description: StringNullableFilter
  id: UuidFilter
  is_abnormal: BoolFilter
  lab_document_id: UuidFilter
  reference_range: StringFilter
  result_type: Enumanalysis_results_result_type_enumFilter
  title: StringFilter
  unit: StringFilter
  value: StringFilter
}

input Analysis_resultsScalarWhereWithAggregatesInput {
  AND: [Analysis_resultsScalarWhereWithAggregatesInput!]
  NOT: [Analysis_resultsScalarWhereWithAggregatesInput!]
  OR: [Analysis_resultsScalarWhereWithAggregatesInput!]
  description: StringNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  is_abnormal: BoolWithAggregatesFilter
  lab_document_id: UuidWithAggregatesFilter
  reference_range: StringWithAggregatesFilter
  result_type: Enumanalysis_results_result_type_enumWithAggregatesFilter
  title: StringWithAggregatesFilter
  unit: StringWithAggregatesFilter
  value: StringWithAggregatesFilter
}

input Analysis_resultsUpdateInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_abnormal: BoolFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateOneRequiredWithoutAnalysis_resultsNestedInput
  reference_range: StringFieldUpdateOperationsInput
  result_type: Enumanalysis_results_result_type_enumFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  unit: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input Analysis_resultsUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_abnormal: BoolFieldUpdateOperationsInput
  reference_range: StringFieldUpdateOperationsInput
  result_type: Enumanalysis_results_result_type_enumFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  unit: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input Analysis_resultsUpdateManyWithWhereWithoutLab_documentsInput {
  data: Analysis_resultsUpdateManyMutationInput!
  where: Analysis_resultsScalarWhereInput!
}

input Analysis_resultsUpdateManyWithoutLab_documentsNestedInput {
  connect: [Analysis_resultsWhereUniqueInput!]
  connectOrCreate: [Analysis_resultsCreateOrConnectWithoutLab_documentsInput!]
  create: [Analysis_resultsCreateWithoutLab_documentsInput!]
  createMany: Analysis_resultsCreateManyLab_documentsInputEnvelope
  delete: [Analysis_resultsWhereUniqueInput!]
  deleteMany: [Analysis_resultsScalarWhereInput!]
  disconnect: [Analysis_resultsWhereUniqueInput!]
  set: [Analysis_resultsWhereUniqueInput!]
  update: [Analysis_resultsUpdateWithWhereUniqueWithoutLab_documentsInput!]
  updateMany: [Analysis_resultsUpdateManyWithWhereWithoutLab_documentsInput!]
  upsert: [Analysis_resultsUpsertWithWhereUniqueWithoutLab_documentsInput!]
}

input Analysis_resultsUpdateWithWhereUniqueWithoutLab_documentsInput {
  data: Analysis_resultsUpdateWithoutLab_documentsInput!
  where: Analysis_resultsWhereUniqueInput!
}

input Analysis_resultsUpdateWithoutLab_documentsInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_abnormal: BoolFieldUpdateOperationsInput
  reference_range: StringFieldUpdateOperationsInput
  result_type: Enumanalysis_results_result_type_enumFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  unit: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input Analysis_resultsUpsertWithWhereUniqueWithoutLab_documentsInput {
  create: Analysis_resultsCreateWithoutLab_documentsInput!
  update: Analysis_resultsUpdateWithoutLab_documentsInput!
  where: Analysis_resultsWhereUniqueInput!
}

input Analysis_resultsWhereInput {
  AND: [Analysis_resultsWhereInput!]
  NOT: [Analysis_resultsWhereInput!]
  OR: [Analysis_resultsWhereInput!]
  description: StringNullableFilter
  id: UuidFilter
  is_abnormal: BoolFilter
  lab_document_id: UuidFilter
  lab_documents: Lab_documentsRelationFilter
  reference_range: StringFilter
  result_type: Enumanalysis_results_result_type_enumFilter
  title: StringFilter
  unit: StringFilter
  value: StringFilter
}

input Analysis_resultsWhereUniqueInput {
  AND: [Analysis_resultsWhereInput!]
  NOT: [Analysis_resultsWhereInput!]
  OR: [Analysis_resultsWhereInput!]
  description: StringNullableFilter
  id: String
  is_abnormal: BoolFilter
  lab_document_id: UuidFilter
  lab_documents: Lab_documentsRelationFilter
  reference_range: StringFilter
  result_type: Enumanalysis_results_result_type_enumFilter
  title: StringFilter
  unit: StringFilter
  value: StringFilter
}

type Authorizations {
  id: String!
  institut_medical_id: String
  instituts_medicaux(where: Instituts_medicauxWhereInput): Instituts_medicaux
  level: authorizations_level_enum!
  patient_id: String!
  patients: Patients!
}

type AuthorizationsCountAggregate {
  _all: Int!
  id: Int!
  institut_medical_id: Int!
  level: Int!
  patient_id: Int!
}

input AuthorizationsCountOrderByAggregateInput {
  id: SortOrder
  institut_medical_id: SortOrder
  level: SortOrder
  patient_id: SortOrder
}

input AuthorizationsCreateInput {
  id: String
  instituts_medicaux: Instituts_medicauxCreateNestedOneWithoutAuthorizationsInput
  level: authorizations_level_enum!
  patients: PatientsCreateNestedOneWithoutAuthorizationsInput!
}

input AuthorizationsCreateManyInput {
  id: String
  institut_medical_id: String
  level: authorizations_level_enum!
  patient_id: String!
}

input AuthorizationsCreateManyInstituts_medicauxInput {
  id: String
  level: authorizations_level_enum!
  patient_id: String!
}

input AuthorizationsCreateManyInstituts_medicauxInputEnvelope {
  data: [AuthorizationsCreateManyInstituts_medicauxInput!]!
  skipDuplicates: Boolean
}

input AuthorizationsCreateManyPatientsInput {
  id: String
  institut_medical_id: String
  level: authorizations_level_enum!
}

input AuthorizationsCreateManyPatientsInputEnvelope {
  data: [AuthorizationsCreateManyPatientsInput!]!
  skipDuplicates: Boolean
}

input AuthorizationsCreateNestedManyWithoutInstituts_medicauxInput {
  connect: [AuthorizationsWhereUniqueInput!]
  connectOrCreate: [AuthorizationsCreateOrConnectWithoutInstituts_medicauxInput!]
  create: [AuthorizationsCreateWithoutInstituts_medicauxInput!]
  createMany: AuthorizationsCreateManyInstituts_medicauxInputEnvelope
}

input AuthorizationsCreateNestedManyWithoutPatientsInput {
  connect: [AuthorizationsWhereUniqueInput!]
  connectOrCreate: [AuthorizationsCreateOrConnectWithoutPatientsInput!]
  create: [AuthorizationsCreateWithoutPatientsInput!]
  createMany: AuthorizationsCreateManyPatientsInputEnvelope
}

input AuthorizationsCreateOrConnectWithoutInstituts_medicauxInput {
  create: AuthorizationsCreateWithoutInstituts_medicauxInput!
  where: AuthorizationsWhereUniqueInput!
}

input AuthorizationsCreateOrConnectWithoutPatientsInput {
  create: AuthorizationsCreateWithoutPatientsInput!
  where: AuthorizationsWhereUniqueInput!
}

input AuthorizationsCreateWithoutInstituts_medicauxInput {
  id: String
  level: authorizations_level_enum!
  patients: PatientsCreateNestedOneWithoutAuthorizationsInput!
}

input AuthorizationsCreateWithoutPatientsInput {
  id: String
  instituts_medicaux: Instituts_medicauxCreateNestedOneWithoutAuthorizationsInput
  level: authorizations_level_enum!
}

type AuthorizationsGroupBy {
  _count: AuthorizationsCountAggregate
  _max: AuthorizationsMaxAggregate
  _min: AuthorizationsMinAggregate
  id: String!
  institut_medical_id: String
  level: authorizations_level_enum!
  patient_id: String!
}

input AuthorizationsListRelationFilter {
  every: AuthorizationsWhereInput
  none: AuthorizationsWhereInput
  some: AuthorizationsWhereInput
}

type AuthorizationsMaxAggregate {
  id: String
  institut_medical_id: String
  level: authorizations_level_enum
  patient_id: String
}

input AuthorizationsMaxOrderByAggregateInput {
  id: SortOrder
  institut_medical_id: SortOrder
  level: SortOrder
  patient_id: SortOrder
}

type AuthorizationsMinAggregate {
  id: String
  institut_medical_id: String
  level: authorizations_level_enum
  patient_id: String
}

input AuthorizationsMinOrderByAggregateInput {
  id: SortOrder
  institut_medical_id: SortOrder
  level: SortOrder
  patient_id: SortOrder
}

input AuthorizationsOrderByRelationAggregateInput {
  _count: SortOrder
}

input AuthorizationsOrderByWithAggregationInput {
  _count: AuthorizationsCountOrderByAggregateInput
  _max: AuthorizationsMaxOrderByAggregateInput
  _min: AuthorizationsMinOrderByAggregateInput
  id: SortOrder
  institut_medical_id: SortOrderInput
  level: SortOrder
  patient_id: SortOrder
}

input AuthorizationsOrderByWithRelationInput {
  id: SortOrder
  institut_medical_id: SortOrderInput
  instituts_medicaux: Instituts_medicauxOrderByWithRelationInput
  level: SortOrder
  patient_id: SortOrder
  patients: PatientsOrderByWithRelationInput
}

enum AuthorizationsScalarFieldEnum {
  id
  institut_medical_id
  level
  patient_id
}

input AuthorizationsScalarWhereInput {
  AND: [AuthorizationsScalarWhereInput!]
  NOT: [AuthorizationsScalarWhereInput!]
  OR: [AuthorizationsScalarWhereInput!]
  id: UuidFilter
  institut_medical_id: UuidNullableFilter
  level: Enumauthorizations_level_enumFilter
  patient_id: UuidFilter
}

input AuthorizationsScalarWhereWithAggregatesInput {
  AND: [AuthorizationsScalarWhereWithAggregatesInput!]
  NOT: [AuthorizationsScalarWhereWithAggregatesInput!]
  OR: [AuthorizationsScalarWhereWithAggregatesInput!]
  id: UuidWithAggregatesFilter
  institut_medical_id: UuidNullableWithAggregatesFilter
  level: Enumauthorizations_level_enumWithAggregatesFilter
  patient_id: UuidWithAggregatesFilter
}

input AuthorizationsUpdateInput {
  id: StringFieldUpdateOperationsInput
  instituts_medicaux: Instituts_medicauxUpdateOneWithoutAuthorizationsNestedInput
  level: Enumauthorizations_level_enumFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutAuthorizationsNestedInput
}

input AuthorizationsUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  level: Enumauthorizations_level_enumFieldUpdateOperationsInput
}

input AuthorizationsUpdateManyWithWhereWithoutInstituts_medicauxInput {
  data: AuthorizationsUpdateManyMutationInput!
  where: AuthorizationsScalarWhereInput!
}

input AuthorizationsUpdateManyWithWhereWithoutPatientsInput {
  data: AuthorizationsUpdateManyMutationInput!
  where: AuthorizationsScalarWhereInput!
}

input AuthorizationsUpdateManyWithoutInstituts_medicauxNestedInput {
  connect: [AuthorizationsWhereUniqueInput!]
  connectOrCreate: [AuthorizationsCreateOrConnectWithoutInstituts_medicauxInput!]
  create: [AuthorizationsCreateWithoutInstituts_medicauxInput!]
  createMany: AuthorizationsCreateManyInstituts_medicauxInputEnvelope
  delete: [AuthorizationsWhereUniqueInput!]
  deleteMany: [AuthorizationsScalarWhereInput!]
  disconnect: [AuthorizationsWhereUniqueInput!]
  set: [AuthorizationsWhereUniqueInput!]
  update: [AuthorizationsUpdateWithWhereUniqueWithoutInstituts_medicauxInput!]
  updateMany: [AuthorizationsUpdateManyWithWhereWithoutInstituts_medicauxInput!]
  upsert: [AuthorizationsUpsertWithWhereUniqueWithoutInstituts_medicauxInput!]
}

input AuthorizationsUpdateManyWithoutPatientsNestedInput {
  connect: [AuthorizationsWhereUniqueInput!]
  connectOrCreate: [AuthorizationsCreateOrConnectWithoutPatientsInput!]
  create: [AuthorizationsCreateWithoutPatientsInput!]
  createMany: AuthorizationsCreateManyPatientsInputEnvelope
  delete: [AuthorizationsWhereUniqueInput!]
  deleteMany: [AuthorizationsScalarWhereInput!]
  disconnect: [AuthorizationsWhereUniqueInput!]
  set: [AuthorizationsWhereUniqueInput!]
  update: [AuthorizationsUpdateWithWhereUniqueWithoutPatientsInput!]
  updateMany: [AuthorizationsUpdateManyWithWhereWithoutPatientsInput!]
  upsert: [AuthorizationsUpsertWithWhereUniqueWithoutPatientsInput!]
}

input AuthorizationsUpdateWithWhereUniqueWithoutInstituts_medicauxInput {
  data: AuthorizationsUpdateWithoutInstituts_medicauxInput!
  where: AuthorizationsWhereUniqueInput!
}

input AuthorizationsUpdateWithWhereUniqueWithoutPatientsInput {
  data: AuthorizationsUpdateWithoutPatientsInput!
  where: AuthorizationsWhereUniqueInput!
}

input AuthorizationsUpdateWithoutInstituts_medicauxInput {
  id: StringFieldUpdateOperationsInput
  level: Enumauthorizations_level_enumFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutAuthorizationsNestedInput
}

input AuthorizationsUpdateWithoutPatientsInput {
  id: StringFieldUpdateOperationsInput
  instituts_medicaux: Instituts_medicauxUpdateOneWithoutAuthorizationsNestedInput
  level: Enumauthorizations_level_enumFieldUpdateOperationsInput
}

input AuthorizationsUpsertWithWhereUniqueWithoutInstituts_medicauxInput {
  create: AuthorizationsCreateWithoutInstituts_medicauxInput!
  update: AuthorizationsUpdateWithoutInstituts_medicauxInput!
  where: AuthorizationsWhereUniqueInput!
}

input AuthorizationsUpsertWithWhereUniqueWithoutPatientsInput {
  create: AuthorizationsCreateWithoutPatientsInput!
  update: AuthorizationsUpdateWithoutPatientsInput!
  where: AuthorizationsWhereUniqueInput!
}

input AuthorizationsWhereInput {
  AND: [AuthorizationsWhereInput!]
  NOT: [AuthorizationsWhereInput!]
  OR: [AuthorizationsWhereInput!]
  id: UuidFilter
  institut_medical_id: UuidNullableFilter
  instituts_medicaux: Instituts_medicauxNullableRelationFilter
  level: Enumauthorizations_level_enumFilter
  patient_id: UuidFilter
  patients: PatientsRelationFilter
}

input AuthorizationsWhereUniqueInput {
  AND: [AuthorizationsWhereInput!]
  NOT: [AuthorizationsWhereInput!]
  OR: [AuthorizationsWhereInput!]
  id: String
  institut_medical_id: UuidNullableFilter
  instituts_medicaux: Instituts_medicauxNullableRelationFilter
  level: Enumauthorizations_level_enumFilter
  patient_id: UuidFilter
  patients: PatientsRelationFilter
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

type Certificates {
  description: String
  doctor_id: String
  doctors(where: DoctorsWhereInput): Doctors
  end_date: DateTimeISO
  id: String!
  patient_id: String!
  patients: Patients!
  start_date: DateTimeISO
  type: String!
}

type CertificatesCountAggregate {
  _all: Int!
  description: Int!
  doctor_id: Int!
  end_date: Int!
  id: Int!
  patient_id: Int!
  start_date: Int!
  type: Int!
}

input CertificatesCountOrderByAggregateInput {
  description: SortOrder
  doctor_id: SortOrder
  end_date: SortOrder
  id: SortOrder
  patient_id: SortOrder
  start_date: SortOrder
  type: SortOrder
}

input CertificatesCreateInput {
  description: String
  doctors: DoctorsCreateNestedOneWithoutCertificatesInput
  end_date: DateTimeISO
  id: String
  patients: PatientsCreateNestedOneWithoutCertificatesInput!
  start_date: DateTimeISO
  type: String!
}

input CertificatesCreateManyDoctorsInput {
  description: String
  end_date: DateTimeISO
  id: String
  patient_id: String!
  start_date: DateTimeISO
  type: String!
}

input CertificatesCreateManyDoctorsInputEnvelope {
  data: [CertificatesCreateManyDoctorsInput!]!
  skipDuplicates: Boolean
}

input CertificatesCreateManyInput {
  description: String
  doctor_id: String
  end_date: DateTimeISO
  id: String
  patient_id: String!
  start_date: DateTimeISO
  type: String!
}

input CertificatesCreateManyPatientsInput {
  description: String
  doctor_id: String
  end_date: DateTimeISO
  id: String
  start_date: DateTimeISO
  type: String!
}

input CertificatesCreateManyPatientsInputEnvelope {
  data: [CertificatesCreateManyPatientsInput!]!
  skipDuplicates: Boolean
}

input CertificatesCreateNestedManyWithoutDoctorsInput {
  connect: [CertificatesWhereUniqueInput!]
  connectOrCreate: [CertificatesCreateOrConnectWithoutDoctorsInput!]
  create: [CertificatesCreateWithoutDoctorsInput!]
  createMany: CertificatesCreateManyDoctorsInputEnvelope
}

input CertificatesCreateNestedManyWithoutPatientsInput {
  connect: [CertificatesWhereUniqueInput!]
  connectOrCreate: [CertificatesCreateOrConnectWithoutPatientsInput!]
  create: [CertificatesCreateWithoutPatientsInput!]
  createMany: CertificatesCreateManyPatientsInputEnvelope
}

input CertificatesCreateOrConnectWithoutDoctorsInput {
  create: CertificatesCreateWithoutDoctorsInput!
  where: CertificatesWhereUniqueInput!
}

input CertificatesCreateOrConnectWithoutPatientsInput {
  create: CertificatesCreateWithoutPatientsInput!
  where: CertificatesWhereUniqueInput!
}

input CertificatesCreateWithoutDoctorsInput {
  description: String
  end_date: DateTimeISO
  id: String
  patients: PatientsCreateNestedOneWithoutCertificatesInput!
  start_date: DateTimeISO
  type: String!
}

input CertificatesCreateWithoutPatientsInput {
  description: String
  doctors: DoctorsCreateNestedOneWithoutCertificatesInput
  end_date: DateTimeISO
  id: String
  start_date: DateTimeISO
  type: String!
}

type CertificatesGroupBy {
  _count: CertificatesCountAggregate
  _max: CertificatesMaxAggregate
  _min: CertificatesMinAggregate
  description: String
  doctor_id: String
  end_date: DateTimeISO
  id: String!
  patient_id: String!
  start_date: DateTimeISO
  type: String!
}

input CertificatesListRelationFilter {
  every: CertificatesWhereInput
  none: CertificatesWhereInput
  some: CertificatesWhereInput
}

type CertificatesMaxAggregate {
  description: String
  doctor_id: String
  end_date: DateTimeISO
  id: String
  patient_id: String
  start_date: DateTimeISO
  type: String
}

input CertificatesMaxOrderByAggregateInput {
  description: SortOrder
  doctor_id: SortOrder
  end_date: SortOrder
  id: SortOrder
  patient_id: SortOrder
  start_date: SortOrder
  type: SortOrder
}

type CertificatesMinAggregate {
  description: String
  doctor_id: String
  end_date: DateTimeISO
  id: String
  patient_id: String
  start_date: DateTimeISO
  type: String
}

input CertificatesMinOrderByAggregateInput {
  description: SortOrder
  doctor_id: SortOrder
  end_date: SortOrder
  id: SortOrder
  patient_id: SortOrder
  start_date: SortOrder
  type: SortOrder
}

input CertificatesOrderByRelationAggregateInput {
  _count: SortOrder
}

input CertificatesOrderByWithAggregationInput {
  _count: CertificatesCountOrderByAggregateInput
  _max: CertificatesMaxOrderByAggregateInput
  _min: CertificatesMinOrderByAggregateInput
  description: SortOrderInput
  doctor_id: SortOrderInput
  end_date: SortOrderInput
  id: SortOrder
  patient_id: SortOrder
  start_date: SortOrderInput
  type: SortOrder
}

input CertificatesOrderByWithRelationInput {
  description: SortOrderInput
  doctor_id: SortOrderInput
  doctors: DoctorsOrderByWithRelationInput
  end_date: SortOrderInput
  id: SortOrder
  patient_id: SortOrder
  patients: PatientsOrderByWithRelationInput
  start_date: SortOrderInput
  type: SortOrder
}

enum CertificatesScalarFieldEnum {
  description
  doctor_id
  end_date
  id
  patient_id
  start_date
  type
}

input CertificatesScalarWhereInput {
  AND: [CertificatesScalarWhereInput!]
  NOT: [CertificatesScalarWhereInput!]
  OR: [CertificatesScalarWhereInput!]
  description: StringNullableFilter
  doctor_id: UuidNullableFilter
  end_date: DateTimeNullableFilter
  id: UuidFilter
  patient_id: UuidFilter
  start_date: DateTimeNullableFilter
  type: StringFilter
}

input CertificatesScalarWhereWithAggregatesInput {
  AND: [CertificatesScalarWhereWithAggregatesInput!]
  NOT: [CertificatesScalarWhereWithAggregatesInput!]
  OR: [CertificatesScalarWhereWithAggregatesInput!]
  description: StringNullableWithAggregatesFilter
  doctor_id: UuidNullableWithAggregatesFilter
  end_date: DateTimeNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  patient_id: UuidWithAggregatesFilter
  start_date: DateTimeNullableWithAggregatesFilter
  type: StringWithAggregatesFilter
}

input CertificatesUpdateInput {
  description: NullableStringFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutCertificatesNestedInput
  end_date: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutCertificatesNestedInput
  start_date: NullableDateTimeFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input CertificatesUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  end_date: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  start_date: NullableDateTimeFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input CertificatesUpdateManyWithWhereWithoutDoctorsInput {
  data: CertificatesUpdateManyMutationInput!
  where: CertificatesScalarWhereInput!
}

input CertificatesUpdateManyWithWhereWithoutPatientsInput {
  data: CertificatesUpdateManyMutationInput!
  where: CertificatesScalarWhereInput!
}

input CertificatesUpdateManyWithoutDoctorsNestedInput {
  connect: [CertificatesWhereUniqueInput!]
  connectOrCreate: [CertificatesCreateOrConnectWithoutDoctorsInput!]
  create: [CertificatesCreateWithoutDoctorsInput!]
  createMany: CertificatesCreateManyDoctorsInputEnvelope
  delete: [CertificatesWhereUniqueInput!]
  deleteMany: [CertificatesScalarWhereInput!]
  disconnect: [CertificatesWhereUniqueInput!]
  set: [CertificatesWhereUniqueInput!]
  update: [CertificatesUpdateWithWhereUniqueWithoutDoctorsInput!]
  updateMany: [CertificatesUpdateManyWithWhereWithoutDoctorsInput!]
  upsert: [CertificatesUpsertWithWhereUniqueWithoutDoctorsInput!]
}

input CertificatesUpdateManyWithoutPatientsNestedInput {
  connect: [CertificatesWhereUniqueInput!]
  connectOrCreate: [CertificatesCreateOrConnectWithoutPatientsInput!]
  create: [CertificatesCreateWithoutPatientsInput!]
  createMany: CertificatesCreateManyPatientsInputEnvelope
  delete: [CertificatesWhereUniqueInput!]
  deleteMany: [CertificatesScalarWhereInput!]
  disconnect: [CertificatesWhereUniqueInput!]
  set: [CertificatesWhereUniqueInput!]
  update: [CertificatesUpdateWithWhereUniqueWithoutPatientsInput!]
  updateMany: [CertificatesUpdateManyWithWhereWithoutPatientsInput!]
  upsert: [CertificatesUpsertWithWhereUniqueWithoutPatientsInput!]
}

input CertificatesUpdateWithWhereUniqueWithoutDoctorsInput {
  data: CertificatesUpdateWithoutDoctorsInput!
  where: CertificatesWhereUniqueInput!
}

input CertificatesUpdateWithWhereUniqueWithoutPatientsInput {
  data: CertificatesUpdateWithoutPatientsInput!
  where: CertificatesWhereUniqueInput!
}

input CertificatesUpdateWithoutDoctorsInput {
  description: NullableStringFieldUpdateOperationsInput
  end_date: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutCertificatesNestedInput
  start_date: NullableDateTimeFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input CertificatesUpdateWithoutPatientsInput {
  description: NullableStringFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutCertificatesNestedInput
  end_date: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  start_date: NullableDateTimeFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input CertificatesUpsertWithWhereUniqueWithoutDoctorsInput {
  create: CertificatesCreateWithoutDoctorsInput!
  update: CertificatesUpdateWithoutDoctorsInput!
  where: CertificatesWhereUniqueInput!
}

input CertificatesUpsertWithWhereUniqueWithoutPatientsInput {
  create: CertificatesCreateWithoutPatientsInput!
  update: CertificatesUpdateWithoutPatientsInput!
  where: CertificatesWhereUniqueInput!
}

input CertificatesWhereInput {
  AND: [CertificatesWhereInput!]
  NOT: [CertificatesWhereInput!]
  OR: [CertificatesWhereInput!]
  description: StringNullableFilter
  doctor_id: UuidNullableFilter
  doctors: DoctorsNullableRelationFilter
  end_date: DateTimeNullableFilter
  id: UuidFilter
  patient_id: UuidFilter
  patients: PatientsRelationFilter
  start_date: DateTimeNullableFilter
  type: StringFilter
}

input CertificatesWhereUniqueInput {
  AND: [CertificatesWhereInput!]
  NOT: [CertificatesWhereInput!]
  OR: [CertificatesWhereInput!]
  description: StringNullableFilter
  doctor_id: UuidNullableFilter
  doctors: DoctorsNullableRelationFilter
  end_date: DateTimeNullableFilter
  id: String
  patient_id: UuidFilter
  patients: PatientsRelationFilter
  start_date: DateTimeNullableFilter
  type: StringFilter
}

type Cliniques {
  address: String
  email: String
  id: String!
  name: String!
  phone: String
  type: cliniques_type_enum!
}

type CliniquesCountAggregate {
  _all: Int!
  address: Int!
  email: Int!
  id: Int!
  name: Int!
  phone: Int!
  type: Int!
}

input CliniquesCountOrderByAggregateInput {
  address: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  type: SortOrder
}

input CliniquesCreateInput {
  address: String
  email: String
  id: String
  name: String!
  phone: String
  type: cliniques_type_enum!
}

input CliniquesCreateManyInput {
  address: String
  email: String
  id: String
  name: String!
  phone: String
  type: cliniques_type_enum!
}

type CliniquesGroupBy {
  _count: CliniquesCountAggregate
  _max: CliniquesMaxAggregate
  _min: CliniquesMinAggregate
  address: String
  email: String
  id: String!
  name: String!
  phone: String
  type: cliniques_type_enum!
}

type CliniquesMaxAggregate {
  address: String
  email: String
  id: String
  name: String
  phone: String
  type: cliniques_type_enum
}

input CliniquesMaxOrderByAggregateInput {
  address: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  type: SortOrder
}

type CliniquesMinAggregate {
  address: String
  email: String
  id: String
  name: String
  phone: String
  type: cliniques_type_enum
}

input CliniquesMinOrderByAggregateInput {
  address: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  type: SortOrder
}

input CliniquesOrderByWithAggregationInput {
  _count: CliniquesCountOrderByAggregateInput
  _max: CliniquesMaxOrderByAggregateInput
  _min: CliniquesMinOrderByAggregateInput
  address: SortOrderInput
  email: SortOrderInput
  id: SortOrder
  name: SortOrder
  phone: SortOrderInput
  type: SortOrder
}

input CliniquesOrderByWithRelationInput {
  address: SortOrderInput
  email: SortOrderInput
  id: SortOrder
  name: SortOrder
  phone: SortOrderInput
  type: SortOrder
}

enum CliniquesScalarFieldEnum {
  address
  email
  id
  name
  phone
  type
}

input CliniquesScalarWhereWithAggregatesInput {
  AND: [CliniquesScalarWhereWithAggregatesInput!]
  NOT: [CliniquesScalarWhereWithAggregatesInput!]
  OR: [CliniquesScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  name: StringWithAggregatesFilter
  phone: StringNullableWithAggregatesFilter
  type: Enumcliniques_type_enumWithAggregatesFilter
}

input CliniquesUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  type: Enumcliniques_type_enumFieldUpdateOperationsInput
}

input CliniquesUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  type: Enumcliniques_type_enumFieldUpdateOperationsInput
}

input CliniquesWhereInput {
  AND: [CliniquesWhereInput!]
  NOT: [CliniquesWhereInput!]
  OR: [CliniquesWhereInput!]
  address: StringNullableFilter
  email: StringNullableFilter
  id: UuidFilter
  name: StringFilter
  phone: StringNullableFilter
  type: Enumcliniques_type_enumFilter
}

input CliniquesWhereUniqueInput {
  AND: [CliniquesWhereInput!]
  NOT: [CliniquesWhereInput!]
  OR: [CliniquesWhereInput!]
  address: StringNullableFilter
  email: StringNullableFilter
  id: String
  name: StringFilter
  phone: StringNullableFilter
  type: Enumcliniques_type_enumFilter
}

type Consultations {
  _count: ConsultationsCount
  date: DateTimeISO!
  doctor_id: String
  doctors(where: DoctorsWhereInput): Doctors
  id: String!
  institut_medical_id: String
  instituts_medicaux(where: Instituts_medicauxWhereInput): Instituts_medicaux
  lab_requests(cursor: Lab_requestsWhereUniqueInput, distinct: [Lab_requestsScalarFieldEnum!], orderBy: [Lab_requestsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_requestsWhereInput): [Lab_requests!]!
  measures: JSON
  notes: [String!]!
  patient_id: String!
  patients: Patients!
  prescription_id: String
  prescriptions(where: PrescriptionsWhereInput): Prescriptions
  rdvs(where: RdvsWhereInput): Rdvs
  section: String
}

type ConsultationsCount {
  lab_requests(where: Lab_requestsWhereInput): Int!
}

type ConsultationsCountAggregate {
  _all: Int!
  date: Int!
  doctor_id: Int!
  id: Int!
  institut_medical_id: Int!
  measures: Int!
  notes: Int!
  patient_id: Int!
  prescription_id: Int!
  section: Int!
}

input ConsultationsCountOrderByAggregateInput {
  date: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  institut_medical_id: SortOrder
  measures: SortOrder
  notes: SortOrder
  patient_id: SortOrder
  prescription_id: SortOrder
  section: SortOrder
}

input ConsultationsCreateInput {
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutConsultationsInput
  id: String
  instituts_medicaux: Instituts_medicauxCreateNestedOneWithoutConsultationsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutConsultationsInput
  measures: JSON
  notes: ConsultationsCreatenotesInput
  patients: PatientsCreateNestedOneWithoutConsultationsInput!
  prescriptions: PrescriptionsCreateNestedOneWithoutConsultationsInput
  rdvs: RdvsCreateNestedOneWithoutConsultationsInput
  section: String
}

input ConsultationsCreateManyDoctorsInput {
  date: DateTimeISO!
  id: String
  institut_medical_id: String
  measures: JSON
  notes: ConsultationsCreatenotesInput
  patient_id: String!
  prescription_id: String
  section: String
}

input ConsultationsCreateManyDoctorsInputEnvelope {
  data: [ConsultationsCreateManyDoctorsInput!]!
  skipDuplicates: Boolean
}

input ConsultationsCreateManyInput {
  date: DateTimeISO!
  doctor_id: String
  id: String
  institut_medical_id: String
  measures: JSON
  notes: ConsultationsCreatenotesInput
  patient_id: String!
  prescription_id: String
  section: String
}

input ConsultationsCreateManyInstituts_medicauxInput {
  date: DateTimeISO!
  doctor_id: String
  id: String
  measures: JSON
  notes: ConsultationsCreatenotesInput
  patient_id: String!
  prescription_id: String
  section: String
}

input ConsultationsCreateManyInstituts_medicauxInputEnvelope {
  data: [ConsultationsCreateManyInstituts_medicauxInput!]!
  skipDuplicates: Boolean
}

input ConsultationsCreateManyPatientsInput {
  date: DateTimeISO!
  doctor_id: String
  id: String
  institut_medical_id: String
  measures: JSON
  notes: ConsultationsCreatenotesInput
  prescription_id: String
  section: String
}

input ConsultationsCreateManyPatientsInputEnvelope {
  data: [ConsultationsCreateManyPatientsInput!]!
  skipDuplicates: Boolean
}

input ConsultationsCreateManyPrescriptionsInput {
  date: DateTimeISO!
  doctor_id: String
  id: String
  institut_medical_id: String
  measures: JSON
  notes: ConsultationsCreatenotesInput
  patient_id: String!
  section: String
}

input ConsultationsCreateManyPrescriptionsInputEnvelope {
  data: [ConsultationsCreateManyPrescriptionsInput!]!
  skipDuplicates: Boolean
}

input ConsultationsCreateNestedManyWithoutDoctorsInput {
  connect: [ConsultationsWhereUniqueInput!]
  connectOrCreate: [ConsultationsCreateOrConnectWithoutDoctorsInput!]
  create: [ConsultationsCreateWithoutDoctorsInput!]
  createMany: ConsultationsCreateManyDoctorsInputEnvelope
}

input ConsultationsCreateNestedManyWithoutInstituts_medicauxInput {
  connect: [ConsultationsWhereUniqueInput!]
  connectOrCreate: [ConsultationsCreateOrConnectWithoutInstituts_medicauxInput!]
  create: [ConsultationsCreateWithoutInstituts_medicauxInput!]
  createMany: ConsultationsCreateManyInstituts_medicauxInputEnvelope
}

input ConsultationsCreateNestedManyWithoutLab_requestsInput {
  connect: [ConsultationsWhereUniqueInput!]
  connectOrCreate: [ConsultationsCreateOrConnectWithoutLab_requestsInput!]
  create: [ConsultationsCreateWithoutLab_requestsInput!]
}

input ConsultationsCreateNestedManyWithoutPatientsInput {
  connect: [ConsultationsWhereUniqueInput!]
  connectOrCreate: [ConsultationsCreateOrConnectWithoutPatientsInput!]
  create: [ConsultationsCreateWithoutPatientsInput!]
  createMany: ConsultationsCreateManyPatientsInputEnvelope
}

input ConsultationsCreateNestedManyWithoutPrescriptionsInput {
  connect: [ConsultationsWhereUniqueInput!]
  connectOrCreate: [ConsultationsCreateOrConnectWithoutPrescriptionsInput!]
  create: [ConsultationsCreateWithoutPrescriptionsInput!]
  createMany: ConsultationsCreateManyPrescriptionsInputEnvelope
}

input ConsultationsCreateNestedOneWithoutRdvsInput {
  connect: ConsultationsWhereUniqueInput
  connectOrCreate: ConsultationsCreateOrConnectWithoutRdvsInput
  create: ConsultationsCreateWithoutRdvsInput
}

input ConsultationsCreateOrConnectWithoutDoctorsInput {
  create: ConsultationsCreateWithoutDoctorsInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsCreateOrConnectWithoutInstituts_medicauxInput {
  create: ConsultationsCreateWithoutInstituts_medicauxInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsCreateOrConnectWithoutLab_requestsInput {
  create: ConsultationsCreateWithoutLab_requestsInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsCreateOrConnectWithoutPatientsInput {
  create: ConsultationsCreateWithoutPatientsInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsCreateOrConnectWithoutPrescriptionsInput {
  create: ConsultationsCreateWithoutPrescriptionsInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsCreateOrConnectWithoutRdvsInput {
  create: ConsultationsCreateWithoutRdvsInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsCreateWithoutDoctorsInput {
  date: DateTimeISO!
  id: String
  instituts_medicaux: Instituts_medicauxCreateNestedOneWithoutConsultationsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutConsultationsInput
  measures: JSON
  notes: ConsultationsCreatenotesInput
  patients: PatientsCreateNestedOneWithoutConsultationsInput!
  prescriptions: PrescriptionsCreateNestedOneWithoutConsultationsInput
  rdvs: RdvsCreateNestedOneWithoutConsultationsInput
  section: String
}

input ConsultationsCreateWithoutInstituts_medicauxInput {
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutConsultationsInput
  id: String
  lab_requests: Lab_requestsCreateNestedManyWithoutConsultationsInput
  measures: JSON
  notes: ConsultationsCreatenotesInput
  patients: PatientsCreateNestedOneWithoutConsultationsInput!
  prescriptions: PrescriptionsCreateNestedOneWithoutConsultationsInput
  rdvs: RdvsCreateNestedOneWithoutConsultationsInput
  section: String
}

input ConsultationsCreateWithoutLab_requestsInput {
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutConsultationsInput
  id: String
  instituts_medicaux: Instituts_medicauxCreateNestedOneWithoutConsultationsInput
  measures: JSON
  notes: ConsultationsCreatenotesInput
  patients: PatientsCreateNestedOneWithoutConsultationsInput!
  prescriptions: PrescriptionsCreateNestedOneWithoutConsultationsInput
  rdvs: RdvsCreateNestedOneWithoutConsultationsInput
  section: String
}

input ConsultationsCreateWithoutPatientsInput {
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutConsultationsInput
  id: String
  instituts_medicaux: Instituts_medicauxCreateNestedOneWithoutConsultationsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutConsultationsInput
  measures: JSON
  notes: ConsultationsCreatenotesInput
  prescriptions: PrescriptionsCreateNestedOneWithoutConsultationsInput
  rdvs: RdvsCreateNestedOneWithoutConsultationsInput
  section: String
}

input ConsultationsCreateWithoutPrescriptionsInput {
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutConsultationsInput
  id: String
  instituts_medicaux: Instituts_medicauxCreateNestedOneWithoutConsultationsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutConsultationsInput
  measures: JSON
  notes: ConsultationsCreatenotesInput
  patients: PatientsCreateNestedOneWithoutConsultationsInput!
  rdvs: RdvsCreateNestedOneWithoutConsultationsInput
  section: String
}

input ConsultationsCreateWithoutRdvsInput {
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutConsultationsInput
  id: String
  instituts_medicaux: Instituts_medicauxCreateNestedOneWithoutConsultationsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutConsultationsInput
  measures: JSON
  notes: ConsultationsCreatenotesInput
  patients: PatientsCreateNestedOneWithoutConsultationsInput!
  prescriptions: PrescriptionsCreateNestedOneWithoutConsultationsInput
  section: String
}

input ConsultationsCreatenotesInput {
  set: [String!]!
}

type ConsultationsGroupBy {
  _count: ConsultationsCountAggregate
  _max: ConsultationsMaxAggregate
  _min: ConsultationsMinAggregate
  date: DateTimeISO!
  doctor_id: String
  id: String!
  institut_medical_id: String
  measures: JSON
  notes: [String!]
  patient_id: String!
  prescription_id: String
  section: String
}

input ConsultationsListRelationFilter {
  every: ConsultationsWhereInput
  none: ConsultationsWhereInput
  some: ConsultationsWhereInput
}

type ConsultationsMaxAggregate {
  date: DateTimeISO
  doctor_id: String
  id: String
  institut_medical_id: String
  patient_id: String
  prescription_id: String
  section: String
}

input ConsultationsMaxOrderByAggregateInput {
  date: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  institut_medical_id: SortOrder
  patient_id: SortOrder
  prescription_id: SortOrder
  section: SortOrder
}

type ConsultationsMinAggregate {
  date: DateTimeISO
  doctor_id: String
  id: String
  institut_medical_id: String
  patient_id: String
  prescription_id: String
  section: String
}

input ConsultationsMinOrderByAggregateInput {
  date: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  institut_medical_id: SortOrder
  patient_id: SortOrder
  prescription_id: SortOrder
  section: SortOrder
}

input ConsultationsNullableRelationFilter {
  is: ConsultationsWhereInput
  isNot: ConsultationsWhereInput
}

input ConsultationsOrderByRelationAggregateInput {
  _count: SortOrder
}

input ConsultationsOrderByWithAggregationInput {
  _count: ConsultationsCountOrderByAggregateInput
  _max: ConsultationsMaxOrderByAggregateInput
  _min: ConsultationsMinOrderByAggregateInput
  date: SortOrder
  doctor_id: SortOrderInput
  id: SortOrder
  institut_medical_id: SortOrderInput
  measures: SortOrderInput
  notes: SortOrder
  patient_id: SortOrder
  prescription_id: SortOrderInput
  section: SortOrderInput
}

input ConsultationsOrderByWithRelationInput {
  date: SortOrder
  doctor_id: SortOrderInput
  doctors: DoctorsOrderByWithRelationInput
  id: SortOrder
  institut_medical_id: SortOrderInput
  instituts_medicaux: Instituts_medicauxOrderByWithRelationInput
  lab_requests: Lab_requestsOrderByRelationAggregateInput
  measures: SortOrderInput
  notes: SortOrder
  patient_id: SortOrder
  patients: PatientsOrderByWithRelationInput
  prescription_id: SortOrderInput
  prescriptions: PrescriptionsOrderByWithRelationInput
  rdvs: RdvsOrderByWithRelationInput
  section: SortOrderInput
}

enum ConsultationsScalarFieldEnum {
  date
  doctor_id
  id
  institut_medical_id
  measures
  notes
  patient_id
  prescription_id
  section
}

input ConsultationsScalarWhereInput {
  AND: [ConsultationsScalarWhereInput!]
  NOT: [ConsultationsScalarWhereInput!]
  OR: [ConsultationsScalarWhereInput!]
  date: DateTimeFilter
  doctor_id: UuidNullableFilter
  id: UuidFilter
  institut_medical_id: UuidNullableFilter
  measures: JsonNullableFilter
  notes: StringNullableListFilter
  patient_id: UuidFilter
  prescription_id: UuidNullableFilter
  section: StringNullableFilter
}

input ConsultationsScalarWhereWithAggregatesInput {
  AND: [ConsultationsScalarWhereWithAggregatesInput!]
  NOT: [ConsultationsScalarWhereWithAggregatesInput!]
  OR: [ConsultationsScalarWhereWithAggregatesInput!]
  date: DateTimeWithAggregatesFilter
  doctor_id: UuidNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  institut_medical_id: UuidNullableWithAggregatesFilter
  measures: JsonNullableWithAggregatesFilter
  notes: StringNullableListFilter
  patient_id: UuidWithAggregatesFilter
  prescription_id: UuidNullableWithAggregatesFilter
  section: StringNullableWithAggregatesFilter
}

input ConsultationsUpdateInput {
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutConsultationsNestedInput
  id: StringFieldUpdateOperationsInput
  instituts_medicaux: Instituts_medicauxUpdateOneWithoutConsultationsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutConsultationsNestedInput
  measures: JSON
  notes: ConsultationsUpdatenotesInput
  patients: PatientsUpdateOneRequiredWithoutConsultationsNestedInput
  prescriptions: PrescriptionsUpdateOneWithoutConsultationsNestedInput
  rdvs: RdvsUpdateOneWithoutConsultationsNestedInput
  section: NullableStringFieldUpdateOperationsInput
}

input ConsultationsUpdateManyMutationInput {
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  measures: JSON
  notes: ConsultationsUpdatenotesInput
  section: NullableStringFieldUpdateOperationsInput
}

input ConsultationsUpdateManyWithWhereWithoutDoctorsInput {
  data: ConsultationsUpdateManyMutationInput!
  where: ConsultationsScalarWhereInput!
}

input ConsultationsUpdateManyWithWhereWithoutInstituts_medicauxInput {
  data: ConsultationsUpdateManyMutationInput!
  where: ConsultationsScalarWhereInput!
}

input ConsultationsUpdateManyWithWhereWithoutLab_requestsInput {
  data: ConsultationsUpdateManyMutationInput!
  where: ConsultationsScalarWhereInput!
}

input ConsultationsUpdateManyWithWhereWithoutPatientsInput {
  data: ConsultationsUpdateManyMutationInput!
  where: ConsultationsScalarWhereInput!
}

input ConsultationsUpdateManyWithWhereWithoutPrescriptionsInput {
  data: ConsultationsUpdateManyMutationInput!
  where: ConsultationsScalarWhereInput!
}

input ConsultationsUpdateManyWithoutDoctorsNestedInput {
  connect: [ConsultationsWhereUniqueInput!]
  connectOrCreate: [ConsultationsCreateOrConnectWithoutDoctorsInput!]
  create: [ConsultationsCreateWithoutDoctorsInput!]
  createMany: ConsultationsCreateManyDoctorsInputEnvelope
  delete: [ConsultationsWhereUniqueInput!]
  deleteMany: [ConsultationsScalarWhereInput!]
  disconnect: [ConsultationsWhereUniqueInput!]
  set: [ConsultationsWhereUniqueInput!]
  update: [ConsultationsUpdateWithWhereUniqueWithoutDoctorsInput!]
  updateMany: [ConsultationsUpdateManyWithWhereWithoutDoctorsInput!]
  upsert: [ConsultationsUpsertWithWhereUniqueWithoutDoctorsInput!]
}

input ConsultationsUpdateManyWithoutInstituts_medicauxNestedInput {
  connect: [ConsultationsWhereUniqueInput!]
  connectOrCreate: [ConsultationsCreateOrConnectWithoutInstituts_medicauxInput!]
  create: [ConsultationsCreateWithoutInstituts_medicauxInput!]
  createMany: ConsultationsCreateManyInstituts_medicauxInputEnvelope
  delete: [ConsultationsWhereUniqueInput!]
  deleteMany: [ConsultationsScalarWhereInput!]
  disconnect: [ConsultationsWhereUniqueInput!]
  set: [ConsultationsWhereUniqueInput!]
  update: [ConsultationsUpdateWithWhereUniqueWithoutInstituts_medicauxInput!]
  updateMany: [ConsultationsUpdateManyWithWhereWithoutInstituts_medicauxInput!]
  upsert: [ConsultationsUpsertWithWhereUniqueWithoutInstituts_medicauxInput!]
}

input ConsultationsUpdateManyWithoutLab_requestsNestedInput {
  connect: [ConsultationsWhereUniqueInput!]
  connectOrCreate: [ConsultationsCreateOrConnectWithoutLab_requestsInput!]
  create: [ConsultationsCreateWithoutLab_requestsInput!]
  delete: [ConsultationsWhereUniqueInput!]
  deleteMany: [ConsultationsScalarWhereInput!]
  disconnect: [ConsultationsWhereUniqueInput!]
  set: [ConsultationsWhereUniqueInput!]
  update: [ConsultationsUpdateWithWhereUniqueWithoutLab_requestsInput!]
  updateMany: [ConsultationsUpdateManyWithWhereWithoutLab_requestsInput!]
  upsert: [ConsultationsUpsertWithWhereUniqueWithoutLab_requestsInput!]
}

input ConsultationsUpdateManyWithoutPatientsNestedInput {
  connect: [ConsultationsWhereUniqueInput!]
  connectOrCreate: [ConsultationsCreateOrConnectWithoutPatientsInput!]
  create: [ConsultationsCreateWithoutPatientsInput!]
  createMany: ConsultationsCreateManyPatientsInputEnvelope
  delete: [ConsultationsWhereUniqueInput!]
  deleteMany: [ConsultationsScalarWhereInput!]
  disconnect: [ConsultationsWhereUniqueInput!]
  set: [ConsultationsWhereUniqueInput!]
  update: [ConsultationsUpdateWithWhereUniqueWithoutPatientsInput!]
  updateMany: [ConsultationsUpdateManyWithWhereWithoutPatientsInput!]
  upsert: [ConsultationsUpsertWithWhereUniqueWithoutPatientsInput!]
}

input ConsultationsUpdateManyWithoutPrescriptionsNestedInput {
  connect: [ConsultationsWhereUniqueInput!]
  connectOrCreate: [ConsultationsCreateOrConnectWithoutPrescriptionsInput!]
  create: [ConsultationsCreateWithoutPrescriptionsInput!]
  createMany: ConsultationsCreateManyPrescriptionsInputEnvelope
  delete: [ConsultationsWhereUniqueInput!]
  deleteMany: [ConsultationsScalarWhereInput!]
  disconnect: [ConsultationsWhereUniqueInput!]
  set: [ConsultationsWhereUniqueInput!]
  update: [ConsultationsUpdateWithWhereUniqueWithoutPrescriptionsInput!]
  updateMany: [ConsultationsUpdateManyWithWhereWithoutPrescriptionsInput!]
  upsert: [ConsultationsUpsertWithWhereUniqueWithoutPrescriptionsInput!]
}

input ConsultationsUpdateOneWithoutRdvsNestedInput {
  connect: ConsultationsWhereUniqueInput
  connectOrCreate: ConsultationsCreateOrConnectWithoutRdvsInput
  create: ConsultationsCreateWithoutRdvsInput
  delete: ConsultationsWhereInput
  disconnect: ConsultationsWhereInput
  update: ConsultationsUpdateToOneWithWhereWithoutRdvsInput
  upsert: ConsultationsUpsertWithoutRdvsInput
}

input ConsultationsUpdateToOneWithWhereWithoutRdvsInput {
  data: ConsultationsUpdateWithoutRdvsInput!
  where: ConsultationsWhereInput
}

input ConsultationsUpdateWithWhereUniqueWithoutDoctorsInput {
  data: ConsultationsUpdateWithoutDoctorsInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsUpdateWithWhereUniqueWithoutInstituts_medicauxInput {
  data: ConsultationsUpdateWithoutInstituts_medicauxInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsUpdateWithWhereUniqueWithoutLab_requestsInput {
  data: ConsultationsUpdateWithoutLab_requestsInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsUpdateWithWhereUniqueWithoutPatientsInput {
  data: ConsultationsUpdateWithoutPatientsInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsUpdateWithWhereUniqueWithoutPrescriptionsInput {
  data: ConsultationsUpdateWithoutPrescriptionsInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsUpdateWithoutDoctorsInput {
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instituts_medicaux: Instituts_medicauxUpdateOneWithoutConsultationsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutConsultationsNestedInput
  measures: JSON
  notes: ConsultationsUpdatenotesInput
  patients: PatientsUpdateOneRequiredWithoutConsultationsNestedInput
  prescriptions: PrescriptionsUpdateOneWithoutConsultationsNestedInput
  rdvs: RdvsUpdateOneWithoutConsultationsNestedInput
  section: NullableStringFieldUpdateOperationsInput
}

input ConsultationsUpdateWithoutInstituts_medicauxInput {
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutConsultationsNestedInput
  id: StringFieldUpdateOperationsInput
  lab_requests: Lab_requestsUpdateManyWithoutConsultationsNestedInput
  measures: JSON
  notes: ConsultationsUpdatenotesInput
  patients: PatientsUpdateOneRequiredWithoutConsultationsNestedInput
  prescriptions: PrescriptionsUpdateOneWithoutConsultationsNestedInput
  rdvs: RdvsUpdateOneWithoutConsultationsNestedInput
  section: NullableStringFieldUpdateOperationsInput
}

input ConsultationsUpdateWithoutLab_requestsInput {
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutConsultationsNestedInput
  id: StringFieldUpdateOperationsInput
  instituts_medicaux: Instituts_medicauxUpdateOneWithoutConsultationsNestedInput
  measures: JSON
  notes: ConsultationsUpdatenotesInput
  patients: PatientsUpdateOneRequiredWithoutConsultationsNestedInput
  prescriptions: PrescriptionsUpdateOneWithoutConsultationsNestedInput
  rdvs: RdvsUpdateOneWithoutConsultationsNestedInput
  section: NullableStringFieldUpdateOperationsInput
}

input ConsultationsUpdateWithoutPatientsInput {
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutConsultationsNestedInput
  id: StringFieldUpdateOperationsInput
  instituts_medicaux: Instituts_medicauxUpdateOneWithoutConsultationsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutConsultationsNestedInput
  measures: JSON
  notes: ConsultationsUpdatenotesInput
  prescriptions: PrescriptionsUpdateOneWithoutConsultationsNestedInput
  rdvs: RdvsUpdateOneWithoutConsultationsNestedInput
  section: NullableStringFieldUpdateOperationsInput
}

input ConsultationsUpdateWithoutPrescriptionsInput {
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutConsultationsNestedInput
  id: StringFieldUpdateOperationsInput
  instituts_medicaux: Instituts_medicauxUpdateOneWithoutConsultationsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutConsultationsNestedInput
  measures: JSON
  notes: ConsultationsUpdatenotesInput
  patients: PatientsUpdateOneRequiredWithoutConsultationsNestedInput
  rdvs: RdvsUpdateOneWithoutConsultationsNestedInput
  section: NullableStringFieldUpdateOperationsInput
}

input ConsultationsUpdateWithoutRdvsInput {
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutConsultationsNestedInput
  id: StringFieldUpdateOperationsInput
  instituts_medicaux: Instituts_medicauxUpdateOneWithoutConsultationsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutConsultationsNestedInput
  measures: JSON
  notes: ConsultationsUpdatenotesInput
  patients: PatientsUpdateOneRequiredWithoutConsultationsNestedInput
  prescriptions: PrescriptionsUpdateOneWithoutConsultationsNestedInput
  section: NullableStringFieldUpdateOperationsInput
}

input ConsultationsUpdatenotesInput {
  push: [String!]
  set: [String!]
}

input ConsultationsUpsertWithWhereUniqueWithoutDoctorsInput {
  create: ConsultationsCreateWithoutDoctorsInput!
  update: ConsultationsUpdateWithoutDoctorsInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsUpsertWithWhereUniqueWithoutInstituts_medicauxInput {
  create: ConsultationsCreateWithoutInstituts_medicauxInput!
  update: ConsultationsUpdateWithoutInstituts_medicauxInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsUpsertWithWhereUniqueWithoutLab_requestsInput {
  create: ConsultationsCreateWithoutLab_requestsInput!
  update: ConsultationsUpdateWithoutLab_requestsInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsUpsertWithWhereUniqueWithoutPatientsInput {
  create: ConsultationsCreateWithoutPatientsInput!
  update: ConsultationsUpdateWithoutPatientsInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsUpsertWithWhereUniqueWithoutPrescriptionsInput {
  create: ConsultationsCreateWithoutPrescriptionsInput!
  update: ConsultationsUpdateWithoutPrescriptionsInput!
  where: ConsultationsWhereUniqueInput!
}

input ConsultationsUpsertWithoutRdvsInput {
  create: ConsultationsCreateWithoutRdvsInput!
  update: ConsultationsUpdateWithoutRdvsInput!
  where: ConsultationsWhereInput
}

input ConsultationsWhereInput {
  AND: [ConsultationsWhereInput!]
  NOT: [ConsultationsWhereInput!]
  OR: [ConsultationsWhereInput!]
  date: DateTimeFilter
  doctor_id: UuidNullableFilter
  doctors: DoctorsNullableRelationFilter
  id: UuidFilter
  institut_medical_id: UuidNullableFilter
  instituts_medicaux: Instituts_medicauxNullableRelationFilter
  lab_requests: Lab_requestsListRelationFilter
  measures: JsonNullableFilter
  notes: StringNullableListFilter
  patient_id: UuidFilter
  patients: PatientsRelationFilter
  prescription_id: UuidNullableFilter
  prescriptions: PrescriptionsNullableRelationFilter
  rdvs: RdvsNullableRelationFilter
  section: StringNullableFilter
}

input ConsultationsWhereUniqueInput {
  AND: [ConsultationsWhereInput!]
  NOT: [ConsultationsWhereInput!]
  OR: [ConsultationsWhereInput!]
  date: DateTimeFilter
  doctor_id: UuidNullableFilter
  doctors: DoctorsNullableRelationFilter
  id: String
  institut_medical_id: UuidNullableFilter
  instituts_medicaux: Instituts_medicauxNullableRelationFilter
  lab_requests: Lab_requestsListRelationFilter
  measures: JsonNullableFilter
  notes: StringNullableListFilter
  patient_id: UuidFilter
  patients: PatientsRelationFilter
  prescription_id: String
  prescriptions: PrescriptionsNullableRelationFilter
  rdvs: RdvsNullableRelationFilter
  section: StringNullableFilter
}

type CreateManyAndReturnAnalysis_results {
  description: String
  id: String!
  is_abnormal: Boolean!
  lab_document_id: String!
  lab_documents: Lab_documents!
  reference_range: String!
  result_type: analysis_results_result_type_enum!
  title: String!
  unit: String!
  value: String!
}

type CreateManyAndReturnAuthorizations {
  id: String!
  institut_medical_id: String
  instituts_medicaux(where: Instituts_medicauxWhereInput): Instituts_medicaux
  level: authorizations_level_enum!
  patient_id: String!
  patients: Patients!
}

type CreateManyAndReturnCertificates {
  description: String
  doctor_id: String
  doctors(where: DoctorsWhereInput): Doctors
  end_date: DateTimeISO
  id: String!
  patient_id: String!
  patients: Patients!
  start_date: DateTimeISO
  type: String!
}

type CreateManyAndReturnCliniques {
  address: String
  email: String
  id: String!
  name: String!
  phone: String
  type: cliniques_type_enum!
}

type CreateManyAndReturnConsultations {
  date: DateTimeISO!
  doctor_id: String
  doctors(where: DoctorsWhereInput): Doctors
  id: String!
  institut_medical_id: String
  instituts_medicaux(where: Instituts_medicauxWhereInput): Instituts_medicaux
  measures: JSON
  notes: [String!]
  patient_id: String!
  patients: Patients!
  prescription_id: String
  prescriptions(where: PrescriptionsWhereInput): Prescriptions
  section: String
}

type CreateManyAndReturnCtscan_results {
  description: String
  id: String!
  is_abnormal: Boolean!
  lab_document_id: String!
  lab_documents: Lab_documents!
  result_type: ctscan_results_result_type_enum!
  title: String!
}

type CreateManyAndReturnDoctors {
  bio: String
  education: [String!]
  experience: [String!]
  first_name: String!
  id: String!
  is_license_verified: Boolean!
  languages: [String!]
  last_name: String!
  profile_image: String
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
  user_id: String!
  users: Users!
}

type CreateManyAndReturnGeneralMedicalRecords {
  allergies: [String!]
  birthDate: DateTimeISO
  bloodType: String
  height: Float
  id: String!
  patient_id: String!
  patients_GeneralMedicalRecords_patient_idTopatients: Patients!
  weight: Float
}

type CreateManyAndReturnHopitaux {
  address: String
  email: String
  id: String!
  name: String!
  phone: String
  type: hopitaux_type_enum!
}

type CreateManyAndReturnInstituts_medicaux {
  id: String!
  type: instituts_medicaux_type_enum!
}

type CreateManyAndReturnLab_attachments {
  id: String!
  lab_document_id: String!
  lab_documents: Lab_documents!
  name: String!
  type: String!
  url: String!
}

type CreateManyAndReturnLab_documents {
  completed_at: DateTimeISO
  created_at: DateTimeISO!
  id: String!
  lab_request_id: String
  lab_requests(where: Lab_requestsWhereInput): Lab_requests
  laboratories(where: LaboratoriesWhereInput): Laboratories
  laboratory_id: String
  notes: String
  patient_id: String!
  patients: Patients!
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
}

type CreateManyAndReturnLab_requests {
  description: String
  doctor_id: String
  doctors(where: DoctorsWhereInput): Doctors
  id: String!
  patient_id: String!
  patients: Patients!
  priority: lab_requests_priority_enum
  type: String!
}

type CreateManyAndReturnLab_results {
  description: String
  id: String!
  is_abnormal: Boolean!
  lab_document_id: String!
  lab_documents: Lab_documents!
  result_type: lab_results_result_type_enum!
  title: String!
}

type CreateManyAndReturnLaboratories {
  address: String
  email: String
  id: String!
  name: String!
  phone: String
}

type CreateManyAndReturnMedications {
  dosage: String!
  duration: String!
  frequency: String!
  id: String!
  name: String!
  prescription_id: String!
  prescriptions: Prescriptions!
  quantity: Float!
}

type CreateManyAndReturnMessage {
  content: String!
  createdAt: DateTimeISO!
  id: String!
  isRead: Boolean!
  patientId: String
  receiver: Doctors!
  receiverId: String!
  sender: Doctors!
  senderId: String!
  updatedAt: DateTimeISO!
}

type CreateManyAndReturnMessageAttachment {
  createdAt: DateTimeISO!
  filename: String!
  id: String!
  message: Message!
  messageId: String!
  mimeType: String!
  path: String!
  size: Int!
}

type CreateManyAndReturnPatients {
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords(where: GeneralMedicalRecordsWhereInput): GeneralMedicalRecords
  cin: Int!
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  general_medical_record_id: String
  id: String!
  profile_image: String
  user_id: String
  users(where: UsersWhereInput): Users
}

type CreateManyAndReturnPharmacies {
  address: String
  email: String
  id: String!
  name: String!
  phone: String
}

type CreateManyAndReturnPrescriptions {
  date: DateTimeISO!
  doctor_id: String
  doctors(where: DoctorsWhereInput): Doctors
  id: String!
  instructions: String
  is_signed: Boolean!
  patient_id: String!
  patients: Patients!
  section: String
  status: prescriptions_status_enum!
  updated_at: DateTimeISO!
}

type CreateManyAndReturnRdv_requests {
  Motif: String!
  Status: String!
  date: DateTimeISO!
  doctor_id: String
  doctors(where: DoctorsWhereInput): Doctors
  id: String!
  patient_id: String!
  patients: Patients!
  rdv_id: String
  rdvs_rdv_requests_rdv_idTordvs(where: RdvsWhereInput): Rdvs
  time: DateTimeISO!
}

type CreateManyAndReturnRdvs {
  consultation_id: String
  consultations(where: ConsultationsWhereInput): Consultations
  date: DateTimeISO!
  doctor_id: String
  doctors(where: DoctorsWhereInput): Doctors
  id: String!
  patient_id: String!
  patients: Patients!
  rdv_request_id: String
  rdv_requests_rdvs_rdv_request_idTordv_requests(where: Rdv_requestsWhereInput): Rdv_requests
  time: DateTimeISO!
}

type CreateManyAndReturnUsers {
  address: String
  associated_id: String
  created_at: DateTimeISO!
  email: String!
  first_name: String!
  id: String!
  is_verified: Boolean!
  last_login: DateTimeISO
  last_name: String!
  password: String!
  phone: String
  profile_picture: String
  role: users_role_enum!
  salt: String!
  updated_at: DateTimeISO!
}

type CreateManyAndReturnVerification_tokens {
  createdAt: DateTimeISO!
  expireAt: DateTimeISO!
  id: String!
  numberofTries: Int!
  token: String!
  user: Users!
  userId: String!
}

type CreateManyAndReturnXray_results {
  description: String
  id: String!
  is_abnormal: Boolean!
  lab_document_id: String!
  lab_documents: Lab_documents!
  result_type: xray_results_result_type_enum!
  title: String!
}

type Ctscan_results {
  description: String
  id: String!
  is_abnormal: Boolean!
  lab_document_id: String!
  lab_documents: Lab_documents!
  result_type: ctscan_results_result_type_enum!
  title: String!
}

type Ctscan_resultsCountAggregate {
  _all: Int!
  description: Int!
  id: Int!
  is_abnormal: Int!
  lab_document_id: Int!
  result_type: Int!
  title: Int!
}

input Ctscan_resultsCountOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  result_type: SortOrder
  title: SortOrder
}

input Ctscan_resultsCreateInput {
  description: String
  id: String
  is_abnormal: Boolean!
  lab_documents: Lab_documentsCreateNestedOneWithoutCtscan_resultsInput!
  result_type: ctscan_results_result_type_enum!
  title: String!
}

input Ctscan_resultsCreateManyInput {
  description: String
  id: String
  is_abnormal: Boolean!
  lab_document_id: String!
  result_type: ctscan_results_result_type_enum!
  title: String!
}

input Ctscan_resultsCreateManyLab_documentsInput {
  description: String
  id: String
  is_abnormal: Boolean!
  result_type: ctscan_results_result_type_enum!
  title: String!
}

input Ctscan_resultsCreateManyLab_documentsInputEnvelope {
  data: [Ctscan_resultsCreateManyLab_documentsInput!]!
  skipDuplicates: Boolean
}

input Ctscan_resultsCreateNestedManyWithoutLab_documentsInput {
  connect: [Ctscan_resultsWhereUniqueInput!]
  connectOrCreate: [Ctscan_resultsCreateOrConnectWithoutLab_documentsInput!]
  create: [Ctscan_resultsCreateWithoutLab_documentsInput!]
  createMany: Ctscan_resultsCreateManyLab_documentsInputEnvelope
}

input Ctscan_resultsCreateOrConnectWithoutLab_documentsInput {
  create: Ctscan_resultsCreateWithoutLab_documentsInput!
  where: Ctscan_resultsWhereUniqueInput!
}

input Ctscan_resultsCreateWithoutLab_documentsInput {
  description: String
  id: String
  is_abnormal: Boolean!
  result_type: ctscan_results_result_type_enum!
  title: String!
}

type Ctscan_resultsGroupBy {
  _count: Ctscan_resultsCountAggregate
  _max: Ctscan_resultsMaxAggregate
  _min: Ctscan_resultsMinAggregate
  description: String
  id: String!
  is_abnormal: Boolean!
  lab_document_id: String!
  result_type: ctscan_results_result_type_enum!
  title: String!
}

input Ctscan_resultsListRelationFilter {
  every: Ctscan_resultsWhereInput
  none: Ctscan_resultsWhereInput
  some: Ctscan_resultsWhereInput
}

type Ctscan_resultsMaxAggregate {
  description: String
  id: String
  is_abnormal: Boolean
  lab_document_id: String
  result_type: ctscan_results_result_type_enum
  title: String
}

input Ctscan_resultsMaxOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  result_type: SortOrder
  title: SortOrder
}

type Ctscan_resultsMinAggregate {
  description: String
  id: String
  is_abnormal: Boolean
  lab_document_id: String
  result_type: ctscan_results_result_type_enum
  title: String
}

input Ctscan_resultsMinOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  result_type: SortOrder
  title: SortOrder
}

input Ctscan_resultsOrderByRelationAggregateInput {
  _count: SortOrder
}

input Ctscan_resultsOrderByWithAggregationInput {
  _count: Ctscan_resultsCountOrderByAggregateInput
  _max: Ctscan_resultsMaxOrderByAggregateInput
  _min: Ctscan_resultsMinOrderByAggregateInput
  description: SortOrderInput
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  result_type: SortOrder
  title: SortOrder
}

input Ctscan_resultsOrderByWithRelationInput {
  description: SortOrderInput
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  lab_documents: Lab_documentsOrderByWithRelationInput
  result_type: SortOrder
  title: SortOrder
}

enum Ctscan_resultsScalarFieldEnum {
  description
  id
  is_abnormal
  lab_document_id
  result_type
  title
}

input Ctscan_resultsScalarWhereInput {
  AND: [Ctscan_resultsScalarWhereInput!]
  NOT: [Ctscan_resultsScalarWhereInput!]
  OR: [Ctscan_resultsScalarWhereInput!]
  description: StringNullableFilter
  id: UuidFilter
  is_abnormal: BoolFilter
  lab_document_id: UuidFilter
  result_type: Enumctscan_results_result_type_enumFilter
  title: StringFilter
}

input Ctscan_resultsScalarWhereWithAggregatesInput {
  AND: [Ctscan_resultsScalarWhereWithAggregatesInput!]
  NOT: [Ctscan_resultsScalarWhereWithAggregatesInput!]
  OR: [Ctscan_resultsScalarWhereWithAggregatesInput!]
  description: StringNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  is_abnormal: BoolWithAggregatesFilter
  lab_document_id: UuidWithAggregatesFilter
  result_type: Enumctscan_results_result_type_enumWithAggregatesFilter
  title: StringWithAggregatesFilter
}

input Ctscan_resultsUpdateInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_abnormal: BoolFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateOneRequiredWithoutCtscan_resultsNestedInput
  result_type: Enumctscan_results_result_type_enumFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input Ctscan_resultsUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_abnormal: BoolFieldUpdateOperationsInput
  result_type: Enumctscan_results_result_type_enumFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input Ctscan_resultsUpdateManyWithWhereWithoutLab_documentsInput {
  data: Ctscan_resultsUpdateManyMutationInput!
  where: Ctscan_resultsScalarWhereInput!
}

input Ctscan_resultsUpdateManyWithoutLab_documentsNestedInput {
  connect: [Ctscan_resultsWhereUniqueInput!]
  connectOrCreate: [Ctscan_resultsCreateOrConnectWithoutLab_documentsInput!]
  create: [Ctscan_resultsCreateWithoutLab_documentsInput!]
  createMany: Ctscan_resultsCreateManyLab_documentsInputEnvelope
  delete: [Ctscan_resultsWhereUniqueInput!]
  deleteMany: [Ctscan_resultsScalarWhereInput!]
  disconnect: [Ctscan_resultsWhereUniqueInput!]
  set: [Ctscan_resultsWhereUniqueInput!]
  update: [Ctscan_resultsUpdateWithWhereUniqueWithoutLab_documentsInput!]
  updateMany: [Ctscan_resultsUpdateManyWithWhereWithoutLab_documentsInput!]
  upsert: [Ctscan_resultsUpsertWithWhereUniqueWithoutLab_documentsInput!]
}

input Ctscan_resultsUpdateWithWhereUniqueWithoutLab_documentsInput {
  data: Ctscan_resultsUpdateWithoutLab_documentsInput!
  where: Ctscan_resultsWhereUniqueInput!
}

input Ctscan_resultsUpdateWithoutLab_documentsInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_abnormal: BoolFieldUpdateOperationsInput
  result_type: Enumctscan_results_result_type_enumFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input Ctscan_resultsUpsertWithWhereUniqueWithoutLab_documentsInput {
  create: Ctscan_resultsCreateWithoutLab_documentsInput!
  update: Ctscan_resultsUpdateWithoutLab_documentsInput!
  where: Ctscan_resultsWhereUniqueInput!
}

input Ctscan_resultsWhereInput {
  AND: [Ctscan_resultsWhereInput!]
  NOT: [Ctscan_resultsWhereInput!]
  OR: [Ctscan_resultsWhereInput!]
  description: StringNullableFilter
  id: UuidFilter
  is_abnormal: BoolFilter
  lab_document_id: UuidFilter
  lab_documents: Lab_documentsRelationFilter
  result_type: Enumctscan_results_result_type_enumFilter
  title: StringFilter
}

input Ctscan_resultsWhereUniqueInput {
  AND: [Ctscan_resultsWhereInput!]
  NOT: [Ctscan_resultsWhereInput!]
  OR: [Ctscan_resultsWhereInput!]
  description: StringNullableFilter
  id: String
  is_abnormal: BoolFilter
  lab_document_id: UuidFilter
  lab_documents: Lab_documentsRelationFilter
  result_type: Enumctscan_results_result_type_enumFilter
  title: StringFilter
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTimeISO
}

input DateTimeFilter {
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeFilter
  notIn: [DateTimeISO!]
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

input DateTimeNullableFilter {
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeNullableFilter
  notIn: [DateTimeISO!]
}

input DateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTimeISO!]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTimeISO!]
}

type Doctors {
  _count: DoctorsCount
  bio: String
  certificates(cursor: CertificatesWhereUniqueInput, distinct: [CertificatesScalarFieldEnum!], orderBy: [CertificatesOrderByWithRelationInput!], skip: Int, take: Int, where: CertificatesWhereInput): [Certificates!]!
  consultations(cursor: ConsultationsWhereUniqueInput, distinct: [ConsultationsScalarFieldEnum!], orderBy: [ConsultationsOrderByWithRelationInput!], skip: Int, take: Int, where: ConsultationsWhereInput): [Consultations!]!
  education: [String!]!
  experience: [String!]!
  first_name: String!
  id: String!
  instituts(cursor: Instituts_medicauxWhereUniqueInput, distinct: [Instituts_medicauxScalarFieldEnum!], orderBy: [Instituts_medicauxOrderByWithRelationInput!], skip: Int, take: Int, where: Instituts_medicauxWhereInput): [Instituts_medicaux!]!
  is_license_verified: Boolean!
  lab_requests(cursor: Lab_requestsWhereUniqueInput, distinct: [Lab_requestsScalarFieldEnum!], orderBy: [Lab_requestsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_requestsWhereInput): [Lab_requests!]!
  languages: [String!]!
  last_name: String!
  prescriptions(cursor: PrescriptionsWhereUniqueInput, distinct: [PrescriptionsScalarFieldEnum!], orderBy: [PrescriptionsOrderByWithRelationInput!], skip: Int, take: Int, where: PrescriptionsWhereInput): [Prescriptions!]!
  profile_image: String
  rdv_requests(cursor: Rdv_requestsWhereUniqueInput, distinct: [Rdv_requestsScalarFieldEnum!], orderBy: [Rdv_requestsOrderByWithRelationInput!], skip: Int, take: Int, where: Rdv_requestsWhereInput): [Rdv_requests!]!
  rdvs(cursor: RdvsWhereUniqueInput, distinct: [RdvsScalarFieldEnum!], orderBy: [RdvsOrderByWithRelationInput!], skip: Int, take: Int, where: RdvsWhereInput): [Rdvs!]!
  receivedMessages(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum!], orderBy: [MessageOrderByWithRelationInput!], skip: Int, take: Int, where: MessageWhereInput): [Message!]!
  sentMessages(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum!], orderBy: [MessageOrderByWithRelationInput!], skip: Int, take: Int, where: MessageWhereInput): [Message!]!
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
  user_id: String!
  users: Users!
}

type DoctorsCount {
  certificates(where: CertificatesWhereInput): Int!
  consultations(where: ConsultationsWhereInput): Int!
  instituts(where: Instituts_medicauxWhereInput): Int!
  lab_requests(where: Lab_requestsWhereInput): Int!
  prescriptions(where: PrescriptionsWhereInput): Int!
  rdv_requests(where: Rdv_requestsWhereInput): Int!
  rdvs(where: RdvsWhereInput): Int!
  receivedMessages(where: MessageWhereInput): Int!
  sentMessages(where: MessageWhereInput): Int!
}

type DoctorsCountAggregate {
  _all: Int!
  bio: Int!
  education: Int!
  experience: Int!
  first_name: Int!
  id: Int!
  is_license_verified: Int!
  languages: Int!
  last_name: Int!
  profile_image: Int!
  specialty: Int!
  type: Int!
  user_id: Int!
}

input DoctorsCountOrderByAggregateInput {
  bio: SortOrder
  education: SortOrder
  experience: SortOrder
  first_name: SortOrder
  id: SortOrder
  is_license_verified: SortOrder
  languages: SortOrder
  last_name: SortOrder
  profile_image: SortOrder
  specialty: SortOrder
  type: SortOrder
  user_id: SortOrder
}

input DoctorsCreateInput {
  bio: String
  certificates: CertificatesCreateNestedManyWithoutDoctorsInput
  consultations: ConsultationsCreateNestedManyWithoutDoctorsInput
  education: DoctorsCreateeducationInput
  experience: DoctorsCreateexperienceInput
  first_name: String!
  id: String
  instituts: Instituts_medicauxCreateNestedManyWithoutDoctorsInput
  is_license_verified: Boolean
  lab_requests: Lab_requestsCreateNestedManyWithoutDoctorsInput
  languages: DoctorsCreatelanguagesInput
  last_name: String!
  prescriptions: PrescriptionsCreateNestedManyWithoutDoctorsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutDoctorsInput
  rdvs: RdvsCreateNestedManyWithoutDoctorsInput
  receivedMessages: MessageCreateNestedManyWithoutReceiverInput
  sentMessages: MessageCreateNestedManyWithoutSenderInput
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
  users: UsersCreateNestedOneWithoutDoctorsInput!
}

input DoctorsCreateManyInput {
  bio: String
  education: DoctorsCreateeducationInput
  experience: DoctorsCreateexperienceInput
  first_name: String!
  id: String
  is_license_verified: Boolean
  languages: DoctorsCreatelanguagesInput
  last_name: String!
  profile_image: String
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
  user_id: String!
}

input DoctorsCreateManyUsersInput {
  bio: String
  education: DoctorsCreateeducationInput
  experience: DoctorsCreateexperienceInput
  first_name: String!
  id: String
  is_license_verified: Boolean
  languages: DoctorsCreatelanguagesInput
  last_name: String!
  profile_image: String
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
}

input DoctorsCreateManyUsersInputEnvelope {
  data: [DoctorsCreateManyUsersInput!]!
  skipDuplicates: Boolean
}

input DoctorsCreateNestedManyWithoutInstitutsInput {
  connect: [DoctorsWhereUniqueInput!]
  connectOrCreate: [DoctorsCreateOrConnectWithoutInstitutsInput!]
  create: [DoctorsCreateWithoutInstitutsInput!]
}

input DoctorsCreateNestedManyWithoutUsersInput {
  connect: [DoctorsWhereUniqueInput!]
  connectOrCreate: [DoctorsCreateOrConnectWithoutUsersInput!]
  create: [DoctorsCreateWithoutUsersInput!]
  createMany: DoctorsCreateManyUsersInputEnvelope
}

input DoctorsCreateNestedOneWithoutCertificatesInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutCertificatesInput
  create: DoctorsCreateWithoutCertificatesInput
}

input DoctorsCreateNestedOneWithoutConsultationsInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutConsultationsInput
  create: DoctorsCreateWithoutConsultationsInput
}

input DoctorsCreateNestedOneWithoutLab_requestsInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutLab_requestsInput
  create: DoctorsCreateWithoutLab_requestsInput
}

input DoctorsCreateNestedOneWithoutPrescriptionsInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutPrescriptionsInput
  create: DoctorsCreateWithoutPrescriptionsInput
}

input DoctorsCreateNestedOneWithoutRdv_requestsInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutRdv_requestsInput
  create: DoctorsCreateWithoutRdv_requestsInput
}

input DoctorsCreateNestedOneWithoutRdvsInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutRdvsInput
  create: DoctorsCreateWithoutRdvsInput
}

input DoctorsCreateNestedOneWithoutReceivedMessagesInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutReceivedMessagesInput
  create: DoctorsCreateWithoutReceivedMessagesInput
}

input DoctorsCreateNestedOneWithoutSentMessagesInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutSentMessagesInput
  create: DoctorsCreateWithoutSentMessagesInput
}

input DoctorsCreateOrConnectWithoutCertificatesInput {
  create: DoctorsCreateWithoutCertificatesInput!
  where: DoctorsWhereUniqueInput!
}

input DoctorsCreateOrConnectWithoutConsultationsInput {
  create: DoctorsCreateWithoutConsultationsInput!
  where: DoctorsWhereUniqueInput!
}

input DoctorsCreateOrConnectWithoutInstitutsInput {
  create: DoctorsCreateWithoutInstitutsInput!
  where: DoctorsWhereUniqueInput!
}

input DoctorsCreateOrConnectWithoutLab_requestsInput {
  create: DoctorsCreateWithoutLab_requestsInput!
  where: DoctorsWhereUniqueInput!
}

input DoctorsCreateOrConnectWithoutPrescriptionsInput {
  create: DoctorsCreateWithoutPrescriptionsInput!
  where: DoctorsWhereUniqueInput!
}

input DoctorsCreateOrConnectWithoutRdv_requestsInput {
  create: DoctorsCreateWithoutRdv_requestsInput!
  where: DoctorsWhereUniqueInput!
}

input DoctorsCreateOrConnectWithoutRdvsInput {
  create: DoctorsCreateWithoutRdvsInput!
  where: DoctorsWhereUniqueInput!
}

input DoctorsCreateOrConnectWithoutReceivedMessagesInput {
  create: DoctorsCreateWithoutReceivedMessagesInput!
  where: DoctorsWhereUniqueInput!
}

input DoctorsCreateOrConnectWithoutSentMessagesInput {
  create: DoctorsCreateWithoutSentMessagesInput!
  where: DoctorsWhereUniqueInput!
}

input DoctorsCreateOrConnectWithoutUsersInput {
  create: DoctorsCreateWithoutUsersInput!
  where: DoctorsWhereUniqueInput!
}

input DoctorsCreateWithoutCertificatesInput {
  bio: String
  consultations: ConsultationsCreateNestedManyWithoutDoctorsInput
  education: DoctorsCreateeducationInput
  experience: DoctorsCreateexperienceInput
  first_name: String!
  id: String
  instituts: Instituts_medicauxCreateNestedManyWithoutDoctorsInput
  is_license_verified: Boolean
  lab_requests: Lab_requestsCreateNestedManyWithoutDoctorsInput
  languages: DoctorsCreatelanguagesInput
  last_name: String!
  prescriptions: PrescriptionsCreateNestedManyWithoutDoctorsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutDoctorsInput
  rdvs: RdvsCreateNestedManyWithoutDoctorsInput
  receivedMessages: MessageCreateNestedManyWithoutReceiverInput
  sentMessages: MessageCreateNestedManyWithoutSenderInput
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
  users: UsersCreateNestedOneWithoutDoctorsInput!
}

input DoctorsCreateWithoutConsultationsInput {
  bio: String
  certificates: CertificatesCreateNestedManyWithoutDoctorsInput
  education: DoctorsCreateeducationInput
  experience: DoctorsCreateexperienceInput
  first_name: String!
  id: String
  instituts: Instituts_medicauxCreateNestedManyWithoutDoctorsInput
  is_license_verified: Boolean
  lab_requests: Lab_requestsCreateNestedManyWithoutDoctorsInput
  languages: DoctorsCreatelanguagesInput
  last_name: String!
  prescriptions: PrescriptionsCreateNestedManyWithoutDoctorsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutDoctorsInput
  rdvs: RdvsCreateNestedManyWithoutDoctorsInput
  receivedMessages: MessageCreateNestedManyWithoutReceiverInput
  sentMessages: MessageCreateNestedManyWithoutSenderInput
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
  users: UsersCreateNestedOneWithoutDoctorsInput!
}

input DoctorsCreateWithoutInstitutsInput {
  bio: String
  certificates: CertificatesCreateNestedManyWithoutDoctorsInput
  consultations: ConsultationsCreateNestedManyWithoutDoctorsInput
  education: DoctorsCreateeducationInput
  experience: DoctorsCreateexperienceInput
  first_name: String!
  id: String
  is_license_verified: Boolean
  lab_requests: Lab_requestsCreateNestedManyWithoutDoctorsInput
  languages: DoctorsCreatelanguagesInput
  last_name: String!
  prescriptions: PrescriptionsCreateNestedManyWithoutDoctorsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutDoctorsInput
  rdvs: RdvsCreateNestedManyWithoutDoctorsInput
  receivedMessages: MessageCreateNestedManyWithoutReceiverInput
  sentMessages: MessageCreateNestedManyWithoutSenderInput
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
  users: UsersCreateNestedOneWithoutDoctorsInput!
}

input DoctorsCreateWithoutLab_requestsInput {
  bio: String
  certificates: CertificatesCreateNestedManyWithoutDoctorsInput
  consultations: ConsultationsCreateNestedManyWithoutDoctorsInput
  education: DoctorsCreateeducationInput
  experience: DoctorsCreateexperienceInput
  first_name: String!
  id: String
  instituts: Instituts_medicauxCreateNestedManyWithoutDoctorsInput
  is_license_verified: Boolean
  languages: DoctorsCreatelanguagesInput
  last_name: String!
  prescriptions: PrescriptionsCreateNestedManyWithoutDoctorsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutDoctorsInput
  rdvs: RdvsCreateNestedManyWithoutDoctorsInput
  receivedMessages: MessageCreateNestedManyWithoutReceiverInput
  sentMessages: MessageCreateNestedManyWithoutSenderInput
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
  users: UsersCreateNestedOneWithoutDoctorsInput!
}

input DoctorsCreateWithoutPrescriptionsInput {
  bio: String
  certificates: CertificatesCreateNestedManyWithoutDoctorsInput
  consultations: ConsultationsCreateNestedManyWithoutDoctorsInput
  education: DoctorsCreateeducationInput
  experience: DoctorsCreateexperienceInput
  first_name: String!
  id: String
  instituts: Instituts_medicauxCreateNestedManyWithoutDoctorsInput
  is_license_verified: Boolean
  lab_requests: Lab_requestsCreateNestedManyWithoutDoctorsInput
  languages: DoctorsCreatelanguagesInput
  last_name: String!
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutDoctorsInput
  rdvs: RdvsCreateNestedManyWithoutDoctorsInput
  receivedMessages: MessageCreateNestedManyWithoutReceiverInput
  sentMessages: MessageCreateNestedManyWithoutSenderInput
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
  users: UsersCreateNestedOneWithoutDoctorsInput!
}

input DoctorsCreateWithoutRdv_requestsInput {
  bio: String
  certificates: CertificatesCreateNestedManyWithoutDoctorsInput
  consultations: ConsultationsCreateNestedManyWithoutDoctorsInput
  education: DoctorsCreateeducationInput
  experience: DoctorsCreateexperienceInput
  first_name: String!
  id: String
  instituts: Instituts_medicauxCreateNestedManyWithoutDoctorsInput
  is_license_verified: Boolean
  lab_requests: Lab_requestsCreateNestedManyWithoutDoctorsInput
  languages: DoctorsCreatelanguagesInput
  last_name: String!
  prescriptions: PrescriptionsCreateNestedManyWithoutDoctorsInput
  profile_image: String
  rdvs: RdvsCreateNestedManyWithoutDoctorsInput
  receivedMessages: MessageCreateNestedManyWithoutReceiverInput
  sentMessages: MessageCreateNestedManyWithoutSenderInput
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
  users: UsersCreateNestedOneWithoutDoctorsInput!
}

input DoctorsCreateWithoutRdvsInput {
  bio: String
  certificates: CertificatesCreateNestedManyWithoutDoctorsInput
  consultations: ConsultationsCreateNestedManyWithoutDoctorsInput
  education: DoctorsCreateeducationInput
  experience: DoctorsCreateexperienceInput
  first_name: String!
  id: String
  instituts: Instituts_medicauxCreateNestedManyWithoutDoctorsInput
  is_license_verified: Boolean
  lab_requests: Lab_requestsCreateNestedManyWithoutDoctorsInput
  languages: DoctorsCreatelanguagesInput
  last_name: String!
  prescriptions: PrescriptionsCreateNestedManyWithoutDoctorsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutDoctorsInput
  receivedMessages: MessageCreateNestedManyWithoutReceiverInput
  sentMessages: MessageCreateNestedManyWithoutSenderInput
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
  users: UsersCreateNestedOneWithoutDoctorsInput!
}

input DoctorsCreateWithoutReceivedMessagesInput {
  bio: String
  certificates: CertificatesCreateNestedManyWithoutDoctorsInput
  consultations: ConsultationsCreateNestedManyWithoutDoctorsInput
  education: DoctorsCreateeducationInput
  experience: DoctorsCreateexperienceInput
  first_name: String!
  id: String
  instituts: Instituts_medicauxCreateNestedManyWithoutDoctorsInput
  is_license_verified: Boolean
  lab_requests: Lab_requestsCreateNestedManyWithoutDoctorsInput
  languages: DoctorsCreatelanguagesInput
  last_name: String!
  prescriptions: PrescriptionsCreateNestedManyWithoutDoctorsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutDoctorsInput
  rdvs: RdvsCreateNestedManyWithoutDoctorsInput
  sentMessages: MessageCreateNestedManyWithoutSenderInput
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
  users: UsersCreateNestedOneWithoutDoctorsInput!
}

input DoctorsCreateWithoutSentMessagesInput {
  bio: String
  certificates: CertificatesCreateNestedManyWithoutDoctorsInput
  consultations: ConsultationsCreateNestedManyWithoutDoctorsInput
  education: DoctorsCreateeducationInput
  experience: DoctorsCreateexperienceInput
  first_name: String!
  id: String
  instituts: Instituts_medicauxCreateNestedManyWithoutDoctorsInput
  is_license_verified: Boolean
  lab_requests: Lab_requestsCreateNestedManyWithoutDoctorsInput
  languages: DoctorsCreatelanguagesInput
  last_name: String!
  prescriptions: PrescriptionsCreateNestedManyWithoutDoctorsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutDoctorsInput
  rdvs: RdvsCreateNestedManyWithoutDoctorsInput
  receivedMessages: MessageCreateNestedManyWithoutReceiverInput
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
  users: UsersCreateNestedOneWithoutDoctorsInput!
}

input DoctorsCreateWithoutUsersInput {
  bio: String
  certificates: CertificatesCreateNestedManyWithoutDoctorsInput
  consultations: ConsultationsCreateNestedManyWithoutDoctorsInput
  education: DoctorsCreateeducationInput
  experience: DoctorsCreateexperienceInput
  first_name: String!
  id: String
  instituts: Instituts_medicauxCreateNestedManyWithoutDoctorsInput
  is_license_verified: Boolean
  lab_requests: Lab_requestsCreateNestedManyWithoutDoctorsInput
  languages: DoctorsCreatelanguagesInput
  last_name: String!
  prescriptions: PrescriptionsCreateNestedManyWithoutDoctorsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutDoctorsInput
  rdvs: RdvsCreateNestedManyWithoutDoctorsInput
  receivedMessages: MessageCreateNestedManyWithoutReceiverInput
  sentMessages: MessageCreateNestedManyWithoutSenderInput
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
}

input DoctorsCreateeducationInput {
  set: [String!]!
}

input DoctorsCreateexperienceInput {
  set: [String!]!
}

input DoctorsCreatelanguagesInput {
  set: [String!]!
}

type DoctorsGroupBy {
  _count: DoctorsCountAggregate
  _max: DoctorsMaxAggregate
  _min: DoctorsMinAggregate
  bio: String
  education: [String!]
  experience: [String!]
  first_name: String!
  id: String!
  is_license_verified: Boolean!
  languages: [String!]
  last_name: String!
  profile_image: String
  specialty: doctors_specialty_enum!
  type: doctors_type_enum!
  user_id: String!
}

input DoctorsListRelationFilter {
  every: DoctorsWhereInput
  none: DoctorsWhereInput
  some: DoctorsWhereInput
}

type DoctorsMaxAggregate {
  bio: String
  first_name: String
  id: String
  is_license_verified: Boolean
  last_name: String
  profile_image: String
  specialty: doctors_specialty_enum
  type: doctors_type_enum
  user_id: String
}

input DoctorsMaxOrderByAggregateInput {
  bio: SortOrder
  first_name: SortOrder
  id: SortOrder
  is_license_verified: SortOrder
  last_name: SortOrder
  profile_image: SortOrder
  specialty: SortOrder
  type: SortOrder
  user_id: SortOrder
}

type DoctorsMinAggregate {
  bio: String
  first_name: String
  id: String
  is_license_verified: Boolean
  last_name: String
  profile_image: String
  specialty: doctors_specialty_enum
  type: doctors_type_enum
  user_id: String
}

input DoctorsMinOrderByAggregateInput {
  bio: SortOrder
  first_name: SortOrder
  id: SortOrder
  is_license_verified: SortOrder
  last_name: SortOrder
  profile_image: SortOrder
  specialty: SortOrder
  type: SortOrder
  user_id: SortOrder
}

input DoctorsNullableRelationFilter {
  is: DoctorsWhereInput
  isNot: DoctorsWhereInput
}

input DoctorsOrderByRelationAggregateInput {
  _count: SortOrder
}

input DoctorsOrderByWithAggregationInput {
  _count: DoctorsCountOrderByAggregateInput
  _max: DoctorsMaxOrderByAggregateInput
  _min: DoctorsMinOrderByAggregateInput
  bio: SortOrderInput
  education: SortOrder
  experience: SortOrder
  first_name: SortOrder
  id: SortOrder
  is_license_verified: SortOrder
  languages: SortOrder
  last_name: SortOrder
  profile_image: SortOrderInput
  specialty: SortOrder
  type: SortOrder
  user_id: SortOrder
}

input DoctorsOrderByWithRelationInput {
  bio: SortOrderInput
  certificates: CertificatesOrderByRelationAggregateInput
  consultations: ConsultationsOrderByRelationAggregateInput
  education: SortOrder
  experience: SortOrder
  first_name: SortOrder
  id: SortOrder
  instituts: Instituts_medicauxOrderByRelationAggregateInput
  is_license_verified: SortOrder
  lab_requests: Lab_requestsOrderByRelationAggregateInput
  languages: SortOrder
  last_name: SortOrder
  prescriptions: PrescriptionsOrderByRelationAggregateInput
  profile_image: SortOrderInput
  rdv_requests: Rdv_requestsOrderByRelationAggregateInput
  rdvs: RdvsOrderByRelationAggregateInput
  receivedMessages: MessageOrderByRelationAggregateInput
  sentMessages: MessageOrderByRelationAggregateInput
  specialty: SortOrder
  type: SortOrder
  user_id: SortOrder
  users: UsersOrderByWithRelationInput
}

input DoctorsRelationFilter {
  is: DoctorsWhereInput
  isNot: DoctorsWhereInput
}

enum DoctorsScalarFieldEnum {
  bio
  education
  experience
  first_name
  id
  is_license_verified
  languages
  last_name
  profile_image
  specialty
  type
  user_id
}

input DoctorsScalarWhereInput {
  AND: [DoctorsScalarWhereInput!]
  NOT: [DoctorsScalarWhereInput!]
  OR: [DoctorsScalarWhereInput!]
  bio: StringNullableFilter
  education: StringNullableListFilter
  experience: StringNullableListFilter
  first_name: StringFilter
  id: UuidFilter
  is_license_verified: BoolFilter
  languages: StringNullableListFilter
  last_name: StringFilter
  profile_image: StringNullableFilter
  specialty: Enumdoctors_specialty_enumFilter
  type: Enumdoctors_type_enumFilter
  user_id: UuidFilter
}

input DoctorsScalarWhereWithAggregatesInput {
  AND: [DoctorsScalarWhereWithAggregatesInput!]
  NOT: [DoctorsScalarWhereWithAggregatesInput!]
  OR: [DoctorsScalarWhereWithAggregatesInput!]
  bio: StringNullableWithAggregatesFilter
  education: StringNullableListFilter
  experience: StringNullableListFilter
  first_name: StringWithAggregatesFilter
  id: UuidWithAggregatesFilter
  is_license_verified: BoolWithAggregatesFilter
  languages: StringNullableListFilter
  last_name: StringWithAggregatesFilter
  profile_image: StringNullableWithAggregatesFilter
  specialty: Enumdoctors_specialty_enumWithAggregatesFilter
  type: Enumdoctors_type_enumWithAggregatesFilter
  user_id: UuidWithAggregatesFilter
}

input DoctorsUpdateInput {
  bio: NullableStringFieldUpdateOperationsInput
  certificates: CertificatesUpdateManyWithoutDoctorsNestedInput
  consultations: ConsultationsUpdateManyWithoutDoctorsNestedInput
  education: DoctorsUpdateeducationInput
  experience: DoctorsUpdateexperienceInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instituts: Instituts_medicauxUpdateManyWithoutDoctorsNestedInput
  is_license_verified: BoolFieldUpdateOperationsInput
  lab_requests: Lab_requestsUpdateManyWithoutDoctorsNestedInput
  languages: DoctorsUpdatelanguagesInput
  last_name: StringFieldUpdateOperationsInput
  prescriptions: PrescriptionsUpdateManyWithoutDoctorsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutDoctorsNestedInput
  rdvs: RdvsUpdateManyWithoutDoctorsNestedInput
  receivedMessages: MessageUpdateManyWithoutReceiverNestedInput
  sentMessages: MessageUpdateManyWithoutSenderNestedInput
  specialty: Enumdoctors_specialty_enumFieldUpdateOperationsInput
  type: Enumdoctors_type_enumFieldUpdateOperationsInput
  users: UsersUpdateOneRequiredWithoutDoctorsNestedInput
}

input DoctorsUpdateManyMutationInput {
  bio: NullableStringFieldUpdateOperationsInput
  education: DoctorsUpdateeducationInput
  experience: DoctorsUpdateexperienceInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_license_verified: BoolFieldUpdateOperationsInput
  languages: DoctorsUpdatelanguagesInput
  last_name: StringFieldUpdateOperationsInput
  profile_image: NullableStringFieldUpdateOperationsInput
  specialty: Enumdoctors_specialty_enumFieldUpdateOperationsInput
  type: Enumdoctors_type_enumFieldUpdateOperationsInput
}

input DoctorsUpdateManyWithWhereWithoutInstitutsInput {
  data: DoctorsUpdateManyMutationInput!
  where: DoctorsScalarWhereInput!
}

input DoctorsUpdateManyWithWhereWithoutUsersInput {
  data: DoctorsUpdateManyMutationInput!
  where: DoctorsScalarWhereInput!
}

input DoctorsUpdateManyWithoutInstitutsNestedInput {
  connect: [DoctorsWhereUniqueInput!]
  connectOrCreate: [DoctorsCreateOrConnectWithoutInstitutsInput!]
  create: [DoctorsCreateWithoutInstitutsInput!]
  delete: [DoctorsWhereUniqueInput!]
  deleteMany: [DoctorsScalarWhereInput!]
  disconnect: [DoctorsWhereUniqueInput!]
  set: [DoctorsWhereUniqueInput!]
  update: [DoctorsUpdateWithWhereUniqueWithoutInstitutsInput!]
  updateMany: [DoctorsUpdateManyWithWhereWithoutInstitutsInput!]
  upsert: [DoctorsUpsertWithWhereUniqueWithoutInstitutsInput!]
}

input DoctorsUpdateManyWithoutUsersNestedInput {
  connect: [DoctorsWhereUniqueInput!]
  connectOrCreate: [DoctorsCreateOrConnectWithoutUsersInput!]
  create: [DoctorsCreateWithoutUsersInput!]
  createMany: DoctorsCreateManyUsersInputEnvelope
  delete: [DoctorsWhereUniqueInput!]
  deleteMany: [DoctorsScalarWhereInput!]
  disconnect: [DoctorsWhereUniqueInput!]
  set: [DoctorsWhereUniqueInput!]
  update: [DoctorsUpdateWithWhereUniqueWithoutUsersInput!]
  updateMany: [DoctorsUpdateManyWithWhereWithoutUsersInput!]
  upsert: [DoctorsUpsertWithWhereUniqueWithoutUsersInput!]
}

input DoctorsUpdateOneRequiredWithoutReceivedMessagesNestedInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutReceivedMessagesInput
  create: DoctorsCreateWithoutReceivedMessagesInput
  update: DoctorsUpdateToOneWithWhereWithoutReceivedMessagesInput
  upsert: DoctorsUpsertWithoutReceivedMessagesInput
}

input DoctorsUpdateOneRequiredWithoutSentMessagesNestedInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutSentMessagesInput
  create: DoctorsCreateWithoutSentMessagesInput
  update: DoctorsUpdateToOneWithWhereWithoutSentMessagesInput
  upsert: DoctorsUpsertWithoutSentMessagesInput
}

input DoctorsUpdateOneWithoutCertificatesNestedInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutCertificatesInput
  create: DoctorsCreateWithoutCertificatesInput
  delete: DoctorsWhereInput
  disconnect: DoctorsWhereInput
  update: DoctorsUpdateToOneWithWhereWithoutCertificatesInput
  upsert: DoctorsUpsertWithoutCertificatesInput
}

input DoctorsUpdateOneWithoutConsultationsNestedInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutConsultationsInput
  create: DoctorsCreateWithoutConsultationsInput
  delete: DoctorsWhereInput
  disconnect: DoctorsWhereInput
  update: DoctorsUpdateToOneWithWhereWithoutConsultationsInput
  upsert: DoctorsUpsertWithoutConsultationsInput
}

input DoctorsUpdateOneWithoutLab_requestsNestedInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutLab_requestsInput
  create: DoctorsCreateWithoutLab_requestsInput
  delete: DoctorsWhereInput
  disconnect: DoctorsWhereInput
  update: DoctorsUpdateToOneWithWhereWithoutLab_requestsInput
  upsert: DoctorsUpsertWithoutLab_requestsInput
}

input DoctorsUpdateOneWithoutPrescriptionsNestedInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutPrescriptionsInput
  create: DoctorsCreateWithoutPrescriptionsInput
  delete: DoctorsWhereInput
  disconnect: DoctorsWhereInput
  update: DoctorsUpdateToOneWithWhereWithoutPrescriptionsInput
  upsert: DoctorsUpsertWithoutPrescriptionsInput
}

input DoctorsUpdateOneWithoutRdv_requestsNestedInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutRdv_requestsInput
  create: DoctorsCreateWithoutRdv_requestsInput
  delete: DoctorsWhereInput
  disconnect: DoctorsWhereInput
  update: DoctorsUpdateToOneWithWhereWithoutRdv_requestsInput
  upsert: DoctorsUpsertWithoutRdv_requestsInput
}

input DoctorsUpdateOneWithoutRdvsNestedInput {
  connect: DoctorsWhereUniqueInput
  connectOrCreate: DoctorsCreateOrConnectWithoutRdvsInput
  create: DoctorsCreateWithoutRdvsInput
  delete: DoctorsWhereInput
  disconnect: DoctorsWhereInput
  update: DoctorsUpdateToOneWithWhereWithoutRdvsInput
  upsert: DoctorsUpsertWithoutRdvsInput
}

input DoctorsUpdateToOneWithWhereWithoutCertificatesInput {
  data: DoctorsUpdateWithoutCertificatesInput!
  where: DoctorsWhereInput
}

input DoctorsUpdateToOneWithWhereWithoutConsultationsInput {
  data: DoctorsUpdateWithoutConsultationsInput!
  where: DoctorsWhereInput
}

input DoctorsUpdateToOneWithWhereWithoutLab_requestsInput {
  data: DoctorsUpdateWithoutLab_requestsInput!
  where: DoctorsWhereInput
}

input DoctorsUpdateToOneWithWhereWithoutPrescriptionsInput {
  data: DoctorsUpdateWithoutPrescriptionsInput!
  where: DoctorsWhereInput
}

input DoctorsUpdateToOneWithWhereWithoutRdv_requestsInput {
  data: DoctorsUpdateWithoutRdv_requestsInput!
  where: DoctorsWhereInput
}

input DoctorsUpdateToOneWithWhereWithoutRdvsInput {
  data: DoctorsUpdateWithoutRdvsInput!
  where: DoctorsWhereInput
}

input DoctorsUpdateToOneWithWhereWithoutReceivedMessagesInput {
  data: DoctorsUpdateWithoutReceivedMessagesInput!
  where: DoctorsWhereInput
}

input DoctorsUpdateToOneWithWhereWithoutSentMessagesInput {
  data: DoctorsUpdateWithoutSentMessagesInput!
  where: DoctorsWhereInput
}

input DoctorsUpdateWithWhereUniqueWithoutInstitutsInput {
  data: DoctorsUpdateWithoutInstitutsInput!
  where: DoctorsWhereUniqueInput!
}

input DoctorsUpdateWithWhereUniqueWithoutUsersInput {
  data: DoctorsUpdateWithoutUsersInput!
  where: DoctorsWhereUniqueInput!
}

input DoctorsUpdateWithoutCertificatesInput {
  bio: NullableStringFieldUpdateOperationsInput
  consultations: ConsultationsUpdateManyWithoutDoctorsNestedInput
  education: DoctorsUpdateeducationInput
  experience: DoctorsUpdateexperienceInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instituts: Instituts_medicauxUpdateManyWithoutDoctorsNestedInput
  is_license_verified: BoolFieldUpdateOperationsInput
  lab_requests: Lab_requestsUpdateManyWithoutDoctorsNestedInput
  languages: DoctorsUpdatelanguagesInput
  last_name: StringFieldUpdateOperationsInput
  prescriptions: PrescriptionsUpdateManyWithoutDoctorsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutDoctorsNestedInput
  rdvs: RdvsUpdateManyWithoutDoctorsNestedInput
  receivedMessages: MessageUpdateManyWithoutReceiverNestedInput
  sentMessages: MessageUpdateManyWithoutSenderNestedInput
  specialty: Enumdoctors_specialty_enumFieldUpdateOperationsInput
  type: Enumdoctors_type_enumFieldUpdateOperationsInput
  users: UsersUpdateOneRequiredWithoutDoctorsNestedInput
}

input DoctorsUpdateWithoutConsultationsInput {
  bio: NullableStringFieldUpdateOperationsInput
  certificates: CertificatesUpdateManyWithoutDoctorsNestedInput
  education: DoctorsUpdateeducationInput
  experience: DoctorsUpdateexperienceInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instituts: Instituts_medicauxUpdateManyWithoutDoctorsNestedInput
  is_license_verified: BoolFieldUpdateOperationsInput
  lab_requests: Lab_requestsUpdateManyWithoutDoctorsNestedInput
  languages: DoctorsUpdatelanguagesInput
  last_name: StringFieldUpdateOperationsInput
  prescriptions: PrescriptionsUpdateManyWithoutDoctorsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutDoctorsNestedInput
  rdvs: RdvsUpdateManyWithoutDoctorsNestedInput
  receivedMessages: MessageUpdateManyWithoutReceiverNestedInput
  sentMessages: MessageUpdateManyWithoutSenderNestedInput
  specialty: Enumdoctors_specialty_enumFieldUpdateOperationsInput
  type: Enumdoctors_type_enumFieldUpdateOperationsInput
  users: UsersUpdateOneRequiredWithoutDoctorsNestedInput
}

input DoctorsUpdateWithoutInstitutsInput {
  bio: NullableStringFieldUpdateOperationsInput
  certificates: CertificatesUpdateManyWithoutDoctorsNestedInput
  consultations: ConsultationsUpdateManyWithoutDoctorsNestedInput
  education: DoctorsUpdateeducationInput
  experience: DoctorsUpdateexperienceInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_license_verified: BoolFieldUpdateOperationsInput
  lab_requests: Lab_requestsUpdateManyWithoutDoctorsNestedInput
  languages: DoctorsUpdatelanguagesInput
  last_name: StringFieldUpdateOperationsInput
  prescriptions: PrescriptionsUpdateManyWithoutDoctorsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutDoctorsNestedInput
  rdvs: RdvsUpdateManyWithoutDoctorsNestedInput
  receivedMessages: MessageUpdateManyWithoutReceiverNestedInput
  sentMessages: MessageUpdateManyWithoutSenderNestedInput
  specialty: Enumdoctors_specialty_enumFieldUpdateOperationsInput
  type: Enumdoctors_type_enumFieldUpdateOperationsInput
  users: UsersUpdateOneRequiredWithoutDoctorsNestedInput
}

input DoctorsUpdateWithoutLab_requestsInput {
  bio: NullableStringFieldUpdateOperationsInput
  certificates: CertificatesUpdateManyWithoutDoctorsNestedInput
  consultations: ConsultationsUpdateManyWithoutDoctorsNestedInput
  education: DoctorsUpdateeducationInput
  experience: DoctorsUpdateexperienceInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instituts: Instituts_medicauxUpdateManyWithoutDoctorsNestedInput
  is_license_verified: BoolFieldUpdateOperationsInput
  languages: DoctorsUpdatelanguagesInput
  last_name: StringFieldUpdateOperationsInput
  prescriptions: PrescriptionsUpdateManyWithoutDoctorsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutDoctorsNestedInput
  rdvs: RdvsUpdateManyWithoutDoctorsNestedInput
  receivedMessages: MessageUpdateManyWithoutReceiverNestedInput
  sentMessages: MessageUpdateManyWithoutSenderNestedInput
  specialty: Enumdoctors_specialty_enumFieldUpdateOperationsInput
  type: Enumdoctors_type_enumFieldUpdateOperationsInput
  users: UsersUpdateOneRequiredWithoutDoctorsNestedInput
}

input DoctorsUpdateWithoutPrescriptionsInput {
  bio: NullableStringFieldUpdateOperationsInput
  certificates: CertificatesUpdateManyWithoutDoctorsNestedInput
  consultations: ConsultationsUpdateManyWithoutDoctorsNestedInput
  education: DoctorsUpdateeducationInput
  experience: DoctorsUpdateexperienceInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instituts: Instituts_medicauxUpdateManyWithoutDoctorsNestedInput
  is_license_verified: BoolFieldUpdateOperationsInput
  lab_requests: Lab_requestsUpdateManyWithoutDoctorsNestedInput
  languages: DoctorsUpdatelanguagesInput
  last_name: StringFieldUpdateOperationsInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutDoctorsNestedInput
  rdvs: RdvsUpdateManyWithoutDoctorsNestedInput
  receivedMessages: MessageUpdateManyWithoutReceiverNestedInput
  sentMessages: MessageUpdateManyWithoutSenderNestedInput
  specialty: Enumdoctors_specialty_enumFieldUpdateOperationsInput
  type: Enumdoctors_type_enumFieldUpdateOperationsInput
  users: UsersUpdateOneRequiredWithoutDoctorsNestedInput
}

input DoctorsUpdateWithoutRdv_requestsInput {
  bio: NullableStringFieldUpdateOperationsInput
  certificates: CertificatesUpdateManyWithoutDoctorsNestedInput
  consultations: ConsultationsUpdateManyWithoutDoctorsNestedInput
  education: DoctorsUpdateeducationInput
  experience: DoctorsUpdateexperienceInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instituts: Instituts_medicauxUpdateManyWithoutDoctorsNestedInput
  is_license_verified: BoolFieldUpdateOperationsInput
  lab_requests: Lab_requestsUpdateManyWithoutDoctorsNestedInput
  languages: DoctorsUpdatelanguagesInput
  last_name: StringFieldUpdateOperationsInput
  prescriptions: PrescriptionsUpdateManyWithoutDoctorsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdvs: RdvsUpdateManyWithoutDoctorsNestedInput
  receivedMessages: MessageUpdateManyWithoutReceiverNestedInput
  sentMessages: MessageUpdateManyWithoutSenderNestedInput
  specialty: Enumdoctors_specialty_enumFieldUpdateOperationsInput
  type: Enumdoctors_type_enumFieldUpdateOperationsInput
  users: UsersUpdateOneRequiredWithoutDoctorsNestedInput
}

input DoctorsUpdateWithoutRdvsInput {
  bio: NullableStringFieldUpdateOperationsInput
  certificates: CertificatesUpdateManyWithoutDoctorsNestedInput
  consultations: ConsultationsUpdateManyWithoutDoctorsNestedInput
  education: DoctorsUpdateeducationInput
  experience: DoctorsUpdateexperienceInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instituts: Instituts_medicauxUpdateManyWithoutDoctorsNestedInput
  is_license_verified: BoolFieldUpdateOperationsInput
  lab_requests: Lab_requestsUpdateManyWithoutDoctorsNestedInput
  languages: DoctorsUpdatelanguagesInput
  last_name: StringFieldUpdateOperationsInput
  prescriptions: PrescriptionsUpdateManyWithoutDoctorsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutDoctorsNestedInput
  receivedMessages: MessageUpdateManyWithoutReceiverNestedInput
  sentMessages: MessageUpdateManyWithoutSenderNestedInput
  specialty: Enumdoctors_specialty_enumFieldUpdateOperationsInput
  type: Enumdoctors_type_enumFieldUpdateOperationsInput
  users: UsersUpdateOneRequiredWithoutDoctorsNestedInput
}

input DoctorsUpdateWithoutReceivedMessagesInput {
  bio: NullableStringFieldUpdateOperationsInput
  certificates: CertificatesUpdateManyWithoutDoctorsNestedInput
  consultations: ConsultationsUpdateManyWithoutDoctorsNestedInput
  education: DoctorsUpdateeducationInput
  experience: DoctorsUpdateexperienceInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instituts: Instituts_medicauxUpdateManyWithoutDoctorsNestedInput
  is_license_verified: BoolFieldUpdateOperationsInput
  lab_requests: Lab_requestsUpdateManyWithoutDoctorsNestedInput
  languages: DoctorsUpdatelanguagesInput
  last_name: StringFieldUpdateOperationsInput
  prescriptions: PrescriptionsUpdateManyWithoutDoctorsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutDoctorsNestedInput
  rdvs: RdvsUpdateManyWithoutDoctorsNestedInput
  sentMessages: MessageUpdateManyWithoutSenderNestedInput
  specialty: Enumdoctors_specialty_enumFieldUpdateOperationsInput
  type: Enumdoctors_type_enumFieldUpdateOperationsInput
  users: UsersUpdateOneRequiredWithoutDoctorsNestedInput
}

input DoctorsUpdateWithoutSentMessagesInput {
  bio: NullableStringFieldUpdateOperationsInput
  certificates: CertificatesUpdateManyWithoutDoctorsNestedInput
  consultations: ConsultationsUpdateManyWithoutDoctorsNestedInput
  education: DoctorsUpdateeducationInput
  experience: DoctorsUpdateexperienceInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instituts: Instituts_medicauxUpdateManyWithoutDoctorsNestedInput
  is_license_verified: BoolFieldUpdateOperationsInput
  lab_requests: Lab_requestsUpdateManyWithoutDoctorsNestedInput
  languages: DoctorsUpdatelanguagesInput
  last_name: StringFieldUpdateOperationsInput
  prescriptions: PrescriptionsUpdateManyWithoutDoctorsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutDoctorsNestedInput
  rdvs: RdvsUpdateManyWithoutDoctorsNestedInput
  receivedMessages: MessageUpdateManyWithoutReceiverNestedInput
  specialty: Enumdoctors_specialty_enumFieldUpdateOperationsInput
  type: Enumdoctors_type_enumFieldUpdateOperationsInput
  users: UsersUpdateOneRequiredWithoutDoctorsNestedInput
}

input DoctorsUpdateWithoutUsersInput {
  bio: NullableStringFieldUpdateOperationsInput
  certificates: CertificatesUpdateManyWithoutDoctorsNestedInput
  consultations: ConsultationsUpdateManyWithoutDoctorsNestedInput
  education: DoctorsUpdateeducationInput
  experience: DoctorsUpdateexperienceInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instituts: Instituts_medicauxUpdateManyWithoutDoctorsNestedInput
  is_license_verified: BoolFieldUpdateOperationsInput
  lab_requests: Lab_requestsUpdateManyWithoutDoctorsNestedInput
  languages: DoctorsUpdatelanguagesInput
  last_name: StringFieldUpdateOperationsInput
  prescriptions: PrescriptionsUpdateManyWithoutDoctorsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutDoctorsNestedInput
  rdvs: RdvsUpdateManyWithoutDoctorsNestedInput
  receivedMessages: MessageUpdateManyWithoutReceiverNestedInput
  sentMessages: MessageUpdateManyWithoutSenderNestedInput
  specialty: Enumdoctors_specialty_enumFieldUpdateOperationsInput
  type: Enumdoctors_type_enumFieldUpdateOperationsInput
}

input DoctorsUpdateeducationInput {
  push: [String!]
  set: [String!]
}

input DoctorsUpdateexperienceInput {
  push: [String!]
  set: [String!]
}

input DoctorsUpdatelanguagesInput {
  push: [String!]
  set: [String!]
}

input DoctorsUpsertWithWhereUniqueWithoutInstitutsInput {
  create: DoctorsCreateWithoutInstitutsInput!
  update: DoctorsUpdateWithoutInstitutsInput!
  where: DoctorsWhereUniqueInput!
}

input DoctorsUpsertWithWhereUniqueWithoutUsersInput {
  create: DoctorsCreateWithoutUsersInput!
  update: DoctorsUpdateWithoutUsersInput!
  where: DoctorsWhereUniqueInput!
}

input DoctorsUpsertWithoutCertificatesInput {
  create: DoctorsCreateWithoutCertificatesInput!
  update: DoctorsUpdateWithoutCertificatesInput!
  where: DoctorsWhereInput
}

input DoctorsUpsertWithoutConsultationsInput {
  create: DoctorsCreateWithoutConsultationsInput!
  update: DoctorsUpdateWithoutConsultationsInput!
  where: DoctorsWhereInput
}

input DoctorsUpsertWithoutLab_requestsInput {
  create: DoctorsCreateWithoutLab_requestsInput!
  update: DoctorsUpdateWithoutLab_requestsInput!
  where: DoctorsWhereInput
}

input DoctorsUpsertWithoutPrescriptionsInput {
  create: DoctorsCreateWithoutPrescriptionsInput!
  update: DoctorsUpdateWithoutPrescriptionsInput!
  where: DoctorsWhereInput
}

input DoctorsUpsertWithoutRdv_requestsInput {
  create: DoctorsCreateWithoutRdv_requestsInput!
  update: DoctorsUpdateWithoutRdv_requestsInput!
  where: DoctorsWhereInput
}

input DoctorsUpsertWithoutRdvsInput {
  create: DoctorsCreateWithoutRdvsInput!
  update: DoctorsUpdateWithoutRdvsInput!
  where: DoctorsWhereInput
}

input DoctorsUpsertWithoutReceivedMessagesInput {
  create: DoctorsCreateWithoutReceivedMessagesInput!
  update: DoctorsUpdateWithoutReceivedMessagesInput!
  where: DoctorsWhereInput
}

input DoctorsUpsertWithoutSentMessagesInput {
  create: DoctorsCreateWithoutSentMessagesInput!
  update: DoctorsUpdateWithoutSentMessagesInput!
  where: DoctorsWhereInput
}

input DoctorsWhereInput {
  AND: [DoctorsWhereInput!]
  NOT: [DoctorsWhereInput!]
  OR: [DoctorsWhereInput!]
  bio: StringNullableFilter
  certificates: CertificatesListRelationFilter
  consultations: ConsultationsListRelationFilter
  education: StringNullableListFilter
  experience: StringNullableListFilter
  first_name: StringFilter
  id: UuidFilter
  instituts: Instituts_medicauxListRelationFilter
  is_license_verified: BoolFilter
  lab_requests: Lab_requestsListRelationFilter
  languages: StringNullableListFilter
  last_name: StringFilter
  prescriptions: PrescriptionsListRelationFilter
  profile_image: StringNullableFilter
  rdv_requests: Rdv_requestsListRelationFilter
  rdvs: RdvsListRelationFilter
  receivedMessages: MessageListRelationFilter
  sentMessages: MessageListRelationFilter
  specialty: Enumdoctors_specialty_enumFilter
  type: Enumdoctors_type_enumFilter
  user_id: UuidFilter
  users: UsersRelationFilter
}

input DoctorsWhereUniqueInput {
  AND: [DoctorsWhereInput!]
  NOT: [DoctorsWhereInput!]
  OR: [DoctorsWhereInput!]
  bio: StringNullableFilter
  certificates: CertificatesListRelationFilter
  consultations: ConsultationsListRelationFilter
  education: StringNullableListFilter
  experience: StringNullableListFilter
  first_name: StringFilter
  id: String
  instituts: Instituts_medicauxListRelationFilter
  is_license_verified: BoolFilter
  lab_requests: Lab_requestsListRelationFilter
  languages: StringNullableListFilter
  last_name: StringFilter
  prescriptions: PrescriptionsListRelationFilter
  profile_image: StringNullableFilter
  rdv_requests: Rdv_requestsListRelationFilter
  rdvs: RdvsListRelationFilter
  receivedMessages: MessageListRelationFilter
  sentMessages: MessageListRelationFilter
  specialty: Enumdoctors_specialty_enumFilter
  type: Enumdoctors_type_enumFilter
  user_id: String
  users: UsersRelationFilter
}

input Enumanalysis_results_result_type_enumFieldUpdateOperationsInput {
  set: analysis_results_result_type_enum
}

input Enumanalysis_results_result_type_enumFilter {
  equals: analysis_results_result_type_enum
  in: [analysis_results_result_type_enum!]
  not: NestedEnumanalysis_results_result_type_enumFilter
  notIn: [analysis_results_result_type_enum!]
}

input Enumanalysis_results_result_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumanalysis_results_result_type_enumFilter
  _min: NestedEnumanalysis_results_result_type_enumFilter
  equals: analysis_results_result_type_enum
  in: [analysis_results_result_type_enum!]
  not: NestedEnumanalysis_results_result_type_enumWithAggregatesFilter
  notIn: [analysis_results_result_type_enum!]
}

input Enumauthorizations_level_enumFieldUpdateOperationsInput {
  set: authorizations_level_enum
}

input Enumauthorizations_level_enumFilter {
  equals: authorizations_level_enum
  in: [authorizations_level_enum!]
  not: NestedEnumauthorizations_level_enumFilter
  notIn: [authorizations_level_enum!]
}

input Enumauthorizations_level_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumauthorizations_level_enumFilter
  _min: NestedEnumauthorizations_level_enumFilter
  equals: authorizations_level_enum
  in: [authorizations_level_enum!]
  not: NestedEnumauthorizations_level_enumWithAggregatesFilter
  notIn: [authorizations_level_enum!]
}

input Enumcliniques_type_enumFieldUpdateOperationsInput {
  set: cliniques_type_enum
}

input Enumcliniques_type_enumFilter {
  equals: cliniques_type_enum
  in: [cliniques_type_enum!]
  not: NestedEnumcliniques_type_enumFilter
  notIn: [cliniques_type_enum!]
}

input Enumcliniques_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumcliniques_type_enumFilter
  _min: NestedEnumcliniques_type_enumFilter
  equals: cliniques_type_enum
  in: [cliniques_type_enum!]
  not: NestedEnumcliniques_type_enumWithAggregatesFilter
  notIn: [cliniques_type_enum!]
}

input Enumctscan_results_result_type_enumFieldUpdateOperationsInput {
  set: ctscan_results_result_type_enum
}

input Enumctscan_results_result_type_enumFilter {
  equals: ctscan_results_result_type_enum
  in: [ctscan_results_result_type_enum!]
  not: NestedEnumctscan_results_result_type_enumFilter
  notIn: [ctscan_results_result_type_enum!]
}

input Enumctscan_results_result_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumctscan_results_result_type_enumFilter
  _min: NestedEnumctscan_results_result_type_enumFilter
  equals: ctscan_results_result_type_enum
  in: [ctscan_results_result_type_enum!]
  not: NestedEnumctscan_results_result_type_enumWithAggregatesFilter
  notIn: [ctscan_results_result_type_enum!]
}

input Enumdoctors_specialty_enumFieldUpdateOperationsInput {
  set: doctors_specialty_enum
}

input Enumdoctors_specialty_enumFilter {
  equals: doctors_specialty_enum
  in: [doctors_specialty_enum!]
  not: NestedEnumdoctors_specialty_enumFilter
  notIn: [doctors_specialty_enum!]
}

input Enumdoctors_specialty_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumdoctors_specialty_enumFilter
  _min: NestedEnumdoctors_specialty_enumFilter
  equals: doctors_specialty_enum
  in: [doctors_specialty_enum!]
  not: NestedEnumdoctors_specialty_enumWithAggregatesFilter
  notIn: [doctors_specialty_enum!]
}

input Enumdoctors_type_enumFieldUpdateOperationsInput {
  set: doctors_type_enum
}

input Enumdoctors_type_enumFilter {
  equals: doctors_type_enum
  in: [doctors_type_enum!]
  not: NestedEnumdoctors_type_enumFilter
  notIn: [doctors_type_enum!]
}

input Enumdoctors_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumdoctors_type_enumFilter
  _min: NestedEnumdoctors_type_enumFilter
  equals: doctors_type_enum
  in: [doctors_type_enum!]
  not: NestedEnumdoctors_type_enumWithAggregatesFilter
  notIn: [doctors_type_enum!]
}

input Enumhopitaux_type_enumFieldUpdateOperationsInput {
  set: hopitaux_type_enum
}

input Enumhopitaux_type_enumFilter {
  equals: hopitaux_type_enum
  in: [hopitaux_type_enum!]
  not: NestedEnumhopitaux_type_enumFilter
  notIn: [hopitaux_type_enum!]
}

input Enumhopitaux_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumhopitaux_type_enumFilter
  _min: NestedEnumhopitaux_type_enumFilter
  equals: hopitaux_type_enum
  in: [hopitaux_type_enum!]
  not: NestedEnumhopitaux_type_enumWithAggregatesFilter
  notIn: [hopitaux_type_enum!]
}

input Enuminstituts_medicaux_type_enumFieldUpdateOperationsInput {
  set: instituts_medicaux_type_enum
}

input Enuminstituts_medicaux_type_enumFilter {
  equals: instituts_medicaux_type_enum
  in: [instituts_medicaux_type_enum!]
  not: NestedEnuminstituts_medicaux_type_enumFilter
  notIn: [instituts_medicaux_type_enum!]
}

input Enuminstituts_medicaux_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnuminstituts_medicaux_type_enumFilter
  _min: NestedEnuminstituts_medicaux_type_enumFilter
  equals: instituts_medicaux_type_enum
  in: [instituts_medicaux_type_enum!]
  not: NestedEnuminstituts_medicaux_type_enumWithAggregatesFilter
  notIn: [instituts_medicaux_type_enum!]
}

input Enumlab_documents_status_enumFieldUpdateOperationsInput {
  set: lab_documents_status_enum
}

input Enumlab_documents_status_enumFilter {
  equals: lab_documents_status_enum
  in: [lab_documents_status_enum!]
  not: NestedEnumlab_documents_status_enumFilter
  notIn: [lab_documents_status_enum!]
}

input Enumlab_documents_status_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumlab_documents_status_enumFilter
  _min: NestedEnumlab_documents_status_enumFilter
  equals: lab_documents_status_enum
  in: [lab_documents_status_enum!]
  not: NestedEnumlab_documents_status_enumWithAggregatesFilter
  notIn: [lab_documents_status_enum!]
}

input Enumlab_requests_priority_enumNullableFilter {
  equals: lab_requests_priority_enum
  in: [lab_requests_priority_enum!]
  not: NestedEnumlab_requests_priority_enumNullableFilter
  notIn: [lab_requests_priority_enum!]
}

input Enumlab_requests_priority_enumNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedEnumlab_requests_priority_enumNullableFilter
  _min: NestedEnumlab_requests_priority_enumNullableFilter
  equals: lab_requests_priority_enum
  in: [lab_requests_priority_enum!]
  not: NestedEnumlab_requests_priority_enumNullableWithAggregatesFilter
  notIn: [lab_requests_priority_enum!]
}

input Enumlab_results_result_type_enumFieldUpdateOperationsInput {
  set: lab_results_result_type_enum
}

input Enumlab_results_result_type_enumFilter {
  equals: lab_results_result_type_enum
  in: [lab_results_result_type_enum!]
  not: NestedEnumlab_results_result_type_enumFilter
  notIn: [lab_results_result_type_enum!]
}

input Enumlab_results_result_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumlab_results_result_type_enumFilter
  _min: NestedEnumlab_results_result_type_enumFilter
  equals: lab_results_result_type_enum
  in: [lab_results_result_type_enum!]
  not: NestedEnumlab_results_result_type_enumWithAggregatesFilter
  notIn: [lab_results_result_type_enum!]
}

input Enumpatients_gender_enumFieldUpdateOperationsInput {
  set: patients_gender_enum
}

input Enumpatients_gender_enumFilter {
  equals: patients_gender_enum
  in: [patients_gender_enum!]
  not: NestedEnumpatients_gender_enumFilter
  notIn: [patients_gender_enum!]
}

input Enumpatients_gender_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumpatients_gender_enumFilter
  _min: NestedEnumpatients_gender_enumFilter
  equals: patients_gender_enum
  in: [patients_gender_enum!]
  not: NestedEnumpatients_gender_enumWithAggregatesFilter
  notIn: [patients_gender_enum!]
}

input Enumprescriptions_status_enumFieldUpdateOperationsInput {
  set: prescriptions_status_enum
}

input Enumprescriptions_status_enumFilter {
  equals: prescriptions_status_enum
  in: [prescriptions_status_enum!]
  not: NestedEnumprescriptions_status_enumFilter
  notIn: [prescriptions_status_enum!]
}

input Enumprescriptions_status_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumprescriptions_status_enumFilter
  _min: NestedEnumprescriptions_status_enumFilter
  equals: prescriptions_status_enum
  in: [prescriptions_status_enum!]
  not: NestedEnumprescriptions_status_enumWithAggregatesFilter
  notIn: [prescriptions_status_enum!]
}

input Enumusers_role_enumFieldUpdateOperationsInput {
  set: users_role_enum
}

input Enumusers_role_enumFilter {
  equals: users_role_enum
  in: [users_role_enum!]
  not: NestedEnumusers_role_enumFilter
  notIn: [users_role_enum!]
}

input Enumusers_role_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumusers_role_enumFilter
  _min: NestedEnumusers_role_enumFilter
  equals: users_role_enum
  in: [users_role_enum!]
  not: NestedEnumusers_role_enumWithAggregatesFilter
  notIn: [users_role_enum!]
}

input Enumxray_results_result_type_enumFieldUpdateOperationsInput {
  set: xray_results_result_type_enum
}

input Enumxray_results_result_type_enumFilter {
  equals: xray_results_result_type_enum
  in: [xray_results_result_type_enum!]
  not: NestedEnumxray_results_result_type_enumFilter
  notIn: [xray_results_result_type_enum!]
}

input Enumxray_results_result_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumxray_results_result_type_enumFilter
  _min: NestedEnumxray_results_result_type_enumFilter
  equals: xray_results_result_type_enum
  in: [xray_results_result_type_enum!]
  not: NestedEnumxray_results_result_type_enumWithAggregatesFilter
  notIn: [xray_results_result_type_enum!]
}

input FloatFieldUpdateOperationsInput {
  decrement: Float
  divide: Float
  increment: Float
  multiply: Float
  set: Float
}

input FloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input FloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input FloatNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedFloatNullableFilter
  _min: NestedFloatNullableFilter
  _sum: NestedFloatNullableFilter
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableWithAggregatesFilter
  notIn: [Float!]
}

input FloatWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedFloatFilter
  _min: NestedFloatFilter
  _sum: NestedFloatFilter
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatWithAggregatesFilter
  notIn: [Float!]
}

type GeneralMedicalRecords {
  allergies: [String!]!
  birthDate: DateTimeISO
  bloodType: String
  height: Float
  id: String!
  patient_id: String!
  patients_GeneralMedicalRecords_patient_idTopatients: Patients!
  patients_patients_general_medical_record_idToGeneralMedicalRecords(where: PatientsWhereInput): Patients
  weight: Float
}

type GeneralMedicalRecordsAvgAggregate {
  height: Float
  weight: Float
}

input GeneralMedicalRecordsAvgOrderByAggregateInput {
  height: SortOrder
  weight: SortOrder
}

type GeneralMedicalRecordsCountAggregate {
  _all: Int!
  allergies: Int!
  birthDate: Int!
  bloodType: Int!
  height: Int!
  id: Int!
  patient_id: Int!
  weight: Int!
}

input GeneralMedicalRecordsCountOrderByAggregateInput {
  allergies: SortOrder
  birthDate: SortOrder
  bloodType: SortOrder
  height: SortOrder
  id: SortOrder
  patient_id: SortOrder
  weight: SortOrder
}

input GeneralMedicalRecordsCreateInput {
  allergies: GeneralMedicalRecordsCreateallergiesInput
  birthDate: DateTimeISO
  bloodType: String
  height: Float
  id: String
  patients_GeneralMedicalRecords_patient_idTopatients: PatientsCreateNestedOneWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput!
  patients_patients_general_medical_record_idToGeneralMedicalRecords: PatientsCreateNestedOneWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput
  weight: Float
}

input GeneralMedicalRecordsCreateManyInput {
  allergies: GeneralMedicalRecordsCreateallergiesInput
  birthDate: DateTimeISO
  bloodType: String
  height: Float
  id: String
  patient_id: String!
  weight: Float
}

input GeneralMedicalRecordsCreateNestedOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput {
  connect: GeneralMedicalRecordsWhereUniqueInput
  connectOrCreate: GeneralMedicalRecordsCreateOrConnectWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  create: GeneralMedicalRecordsCreateWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
}

input GeneralMedicalRecordsCreateNestedOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput {
  connect: GeneralMedicalRecordsWhereUniqueInput
  connectOrCreate: GeneralMedicalRecordsCreateOrConnectWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  create: GeneralMedicalRecordsCreateWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
}

input GeneralMedicalRecordsCreateOrConnectWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput {
  create: GeneralMedicalRecordsCreateWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput!
  where: GeneralMedicalRecordsWhereUniqueInput!
}

input GeneralMedicalRecordsCreateOrConnectWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput {
  create: GeneralMedicalRecordsCreateWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput!
  where: GeneralMedicalRecordsWhereUniqueInput!
}

input GeneralMedicalRecordsCreateWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput {
  allergies: GeneralMedicalRecordsCreateallergiesInput
  birthDate: DateTimeISO
  bloodType: String
  height: Float
  id: String
  patients_patients_general_medical_record_idToGeneralMedicalRecords: PatientsCreateNestedOneWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput
  weight: Float
}

input GeneralMedicalRecordsCreateWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput {
  allergies: GeneralMedicalRecordsCreateallergiesInput
  birthDate: DateTimeISO
  bloodType: String
  height: Float
  id: String
  patients_GeneralMedicalRecords_patient_idTopatients: PatientsCreateNestedOneWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput!
  weight: Float
}

input GeneralMedicalRecordsCreateallergiesInput {
  set: [String!]!
}

type GeneralMedicalRecordsGroupBy {
  _avg: GeneralMedicalRecordsAvgAggregate
  _count: GeneralMedicalRecordsCountAggregate
  _max: GeneralMedicalRecordsMaxAggregate
  _min: GeneralMedicalRecordsMinAggregate
  _sum: GeneralMedicalRecordsSumAggregate
  allergies: [String!]
  birthDate: DateTimeISO
  bloodType: String
  height: Float
  id: String!
  patient_id: String!
  weight: Float
}

type GeneralMedicalRecordsMaxAggregate {
  birthDate: DateTimeISO
  bloodType: String
  height: Float
  id: String
  patient_id: String
  weight: Float
}

input GeneralMedicalRecordsMaxOrderByAggregateInput {
  birthDate: SortOrder
  bloodType: SortOrder
  height: SortOrder
  id: SortOrder
  patient_id: SortOrder
  weight: SortOrder
}

type GeneralMedicalRecordsMinAggregate {
  birthDate: DateTimeISO
  bloodType: String
  height: Float
  id: String
  patient_id: String
  weight: Float
}

input GeneralMedicalRecordsMinOrderByAggregateInput {
  birthDate: SortOrder
  bloodType: SortOrder
  height: SortOrder
  id: SortOrder
  patient_id: SortOrder
  weight: SortOrder
}

input GeneralMedicalRecordsNullableRelationFilter {
  is: GeneralMedicalRecordsWhereInput
  isNot: GeneralMedicalRecordsWhereInput
}

input GeneralMedicalRecordsOrderByWithAggregationInput {
  _avg: GeneralMedicalRecordsAvgOrderByAggregateInput
  _count: GeneralMedicalRecordsCountOrderByAggregateInput
  _max: GeneralMedicalRecordsMaxOrderByAggregateInput
  _min: GeneralMedicalRecordsMinOrderByAggregateInput
  _sum: GeneralMedicalRecordsSumOrderByAggregateInput
  allergies: SortOrder
  birthDate: SortOrderInput
  bloodType: SortOrderInput
  height: SortOrderInput
  id: SortOrder
  patient_id: SortOrder
  weight: SortOrderInput
}

input GeneralMedicalRecordsOrderByWithRelationInput {
  allergies: SortOrder
  birthDate: SortOrderInput
  bloodType: SortOrderInput
  height: SortOrderInput
  id: SortOrder
  patient_id: SortOrder
  patients_GeneralMedicalRecords_patient_idTopatients: PatientsOrderByWithRelationInput
  patients_patients_general_medical_record_idToGeneralMedicalRecords: PatientsOrderByWithRelationInput
  weight: SortOrderInput
}

enum GeneralMedicalRecordsScalarFieldEnum {
  allergies
  birthDate
  bloodType
  height
  id
  patient_id
  weight
}

input GeneralMedicalRecordsScalarWhereWithAggregatesInput {
  AND: [GeneralMedicalRecordsScalarWhereWithAggregatesInput!]
  NOT: [GeneralMedicalRecordsScalarWhereWithAggregatesInput!]
  OR: [GeneralMedicalRecordsScalarWhereWithAggregatesInput!]
  allergies: StringNullableListFilter
  birthDate: DateTimeNullableWithAggregatesFilter
  bloodType: StringNullableWithAggregatesFilter
  height: FloatNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  patient_id: UuidWithAggregatesFilter
  weight: FloatNullableWithAggregatesFilter
}

type GeneralMedicalRecordsSumAggregate {
  height: Float
  weight: Float
}

input GeneralMedicalRecordsSumOrderByAggregateInput {
  height: SortOrder
  weight: SortOrder
}

input GeneralMedicalRecordsUpdateInput {
  allergies: GeneralMedicalRecordsUpdateallergiesInput
  birthDate: NullableDateTimeFieldUpdateOperationsInput
  bloodType: NullableStringFieldUpdateOperationsInput
  height: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  patients_GeneralMedicalRecords_patient_idTopatients: PatientsUpdateOneRequiredWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsNestedInput
  patients_patients_general_medical_record_idToGeneralMedicalRecords: PatientsUpdateOneWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput
  weight: NullableFloatFieldUpdateOperationsInput
}

input GeneralMedicalRecordsUpdateManyMutationInput {
  allergies: GeneralMedicalRecordsUpdateallergiesInput
  birthDate: NullableDateTimeFieldUpdateOperationsInput
  bloodType: NullableStringFieldUpdateOperationsInput
  height: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  weight: NullableFloatFieldUpdateOperationsInput
}

input GeneralMedicalRecordsUpdateOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsNestedInput {
  connect: GeneralMedicalRecordsWhereUniqueInput
  connectOrCreate: GeneralMedicalRecordsCreateOrConnectWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  create: GeneralMedicalRecordsCreateWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  delete: GeneralMedicalRecordsWhereInput
  disconnect: GeneralMedicalRecordsWhereInput
  update: GeneralMedicalRecordsUpdateToOneWithWhereWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  upsert: GeneralMedicalRecordsUpsertWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
}

input GeneralMedicalRecordsUpdateOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput {
  connect: GeneralMedicalRecordsWhereUniqueInput
  connectOrCreate: GeneralMedicalRecordsCreateOrConnectWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  create: GeneralMedicalRecordsCreateWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  delete: GeneralMedicalRecordsWhereInput
  disconnect: GeneralMedicalRecordsWhereInput
  update: GeneralMedicalRecordsUpdateToOneWithWhereWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  upsert: GeneralMedicalRecordsUpsertWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
}

input GeneralMedicalRecordsUpdateToOneWithWhereWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput {
  data: GeneralMedicalRecordsUpdateWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput!
  where: GeneralMedicalRecordsWhereInput
}

input GeneralMedicalRecordsUpdateToOneWithWhereWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput {
  data: GeneralMedicalRecordsUpdateWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput!
  where: GeneralMedicalRecordsWhereInput
}

input GeneralMedicalRecordsUpdateWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput {
  allergies: GeneralMedicalRecordsUpdateallergiesInput
  birthDate: NullableDateTimeFieldUpdateOperationsInput
  bloodType: NullableStringFieldUpdateOperationsInput
  height: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  patients_patients_general_medical_record_idToGeneralMedicalRecords: PatientsUpdateOneWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput
  weight: NullableFloatFieldUpdateOperationsInput
}

input GeneralMedicalRecordsUpdateWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput {
  allergies: GeneralMedicalRecordsUpdateallergiesInput
  birthDate: NullableDateTimeFieldUpdateOperationsInput
  bloodType: NullableStringFieldUpdateOperationsInput
  height: NullableFloatFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  patients_GeneralMedicalRecords_patient_idTopatients: PatientsUpdateOneRequiredWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsNestedInput
  weight: NullableFloatFieldUpdateOperationsInput
}

input GeneralMedicalRecordsUpdateallergiesInput {
  push: [String!]
  set: [String!]
}

input GeneralMedicalRecordsUpsertWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput {
  create: GeneralMedicalRecordsCreateWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput!
  update: GeneralMedicalRecordsUpdateWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput!
  where: GeneralMedicalRecordsWhereInput
}

input GeneralMedicalRecordsUpsertWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput {
  create: GeneralMedicalRecordsCreateWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput!
  update: GeneralMedicalRecordsUpdateWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput!
  where: GeneralMedicalRecordsWhereInput
}

input GeneralMedicalRecordsWhereInput {
  AND: [GeneralMedicalRecordsWhereInput!]
  NOT: [GeneralMedicalRecordsWhereInput!]
  OR: [GeneralMedicalRecordsWhereInput!]
  allergies: StringNullableListFilter
  birthDate: DateTimeNullableFilter
  bloodType: StringNullableFilter
  height: FloatNullableFilter
  id: UuidFilter
  patient_id: UuidFilter
  patients_GeneralMedicalRecords_patient_idTopatients: PatientsRelationFilter
  patients_patients_general_medical_record_idToGeneralMedicalRecords: PatientsNullableRelationFilter
  weight: FloatNullableFilter
}

input GeneralMedicalRecordsWhereUniqueInput {
  AND: [GeneralMedicalRecordsWhereInput!]
  NOT: [GeneralMedicalRecordsWhereInput!]
  OR: [GeneralMedicalRecordsWhereInput!]
  allergies: StringNullableListFilter
  birthDate: DateTimeNullableFilter
  bloodType: StringNullableFilter
  height: FloatNullableFilter
  id: String
  patient_id: String
  patients_GeneralMedicalRecords_patient_idTopatients: PatientsRelationFilter
  patients_patients_general_medical_record_idToGeneralMedicalRecords: PatientsNullableRelationFilter
  weight: FloatNullableFilter
}

type Hopitaux {
  address: String
  email: String
  id: String!
  name: String!
  phone: String
  type: hopitaux_type_enum!
}

type HopitauxCountAggregate {
  _all: Int!
  address: Int!
  email: Int!
  id: Int!
  name: Int!
  phone: Int!
  type: Int!
}

input HopitauxCountOrderByAggregateInput {
  address: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  type: SortOrder
}

input HopitauxCreateInput {
  address: String
  email: String
  id: String
  name: String!
  phone: String
  type: hopitaux_type_enum!
}

input HopitauxCreateManyInput {
  address: String
  email: String
  id: String
  name: String!
  phone: String
  type: hopitaux_type_enum!
}

type HopitauxGroupBy {
  _count: HopitauxCountAggregate
  _max: HopitauxMaxAggregate
  _min: HopitauxMinAggregate
  address: String
  email: String
  id: String!
  name: String!
  phone: String
  type: hopitaux_type_enum!
}

type HopitauxMaxAggregate {
  address: String
  email: String
  id: String
  name: String
  phone: String
  type: hopitaux_type_enum
}

input HopitauxMaxOrderByAggregateInput {
  address: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  type: SortOrder
}

type HopitauxMinAggregate {
  address: String
  email: String
  id: String
  name: String
  phone: String
  type: hopitaux_type_enum
}

input HopitauxMinOrderByAggregateInput {
  address: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  type: SortOrder
}

input HopitauxOrderByWithAggregationInput {
  _count: HopitauxCountOrderByAggregateInput
  _max: HopitauxMaxOrderByAggregateInput
  _min: HopitauxMinOrderByAggregateInput
  address: SortOrderInput
  email: SortOrderInput
  id: SortOrder
  name: SortOrder
  phone: SortOrderInput
  type: SortOrder
}

input HopitauxOrderByWithRelationInput {
  address: SortOrderInput
  email: SortOrderInput
  id: SortOrder
  name: SortOrder
  phone: SortOrderInput
  type: SortOrder
}

enum HopitauxScalarFieldEnum {
  address
  email
  id
  name
  phone
  type
}

input HopitauxScalarWhereWithAggregatesInput {
  AND: [HopitauxScalarWhereWithAggregatesInput!]
  NOT: [HopitauxScalarWhereWithAggregatesInput!]
  OR: [HopitauxScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  name: StringWithAggregatesFilter
  phone: StringNullableWithAggregatesFilter
  type: Enumhopitaux_type_enumWithAggregatesFilter
}

input HopitauxUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  type: Enumhopitaux_type_enumFieldUpdateOperationsInput
}

input HopitauxUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  type: Enumhopitaux_type_enumFieldUpdateOperationsInput
}

input HopitauxWhereInput {
  AND: [HopitauxWhereInput!]
  NOT: [HopitauxWhereInput!]
  OR: [HopitauxWhereInput!]
  address: StringNullableFilter
  email: StringNullableFilter
  id: UuidFilter
  name: StringFilter
  phone: StringNullableFilter
  type: Enumhopitaux_type_enumFilter
}

input HopitauxWhereUniqueInput {
  AND: [HopitauxWhereInput!]
  NOT: [HopitauxWhereInput!]
  OR: [HopitauxWhereInput!]
  address: StringNullableFilter
  email: StringNullableFilter
  id: String
  name: StringFilter
  phone: StringNullableFilter
  type: Enumhopitaux_type_enumFilter
}

type Instituts_medicaux {
  _count: Instituts_medicauxCount
  authorizations(cursor: AuthorizationsWhereUniqueInput, distinct: [AuthorizationsScalarFieldEnum!], orderBy: [AuthorizationsOrderByWithRelationInput!], skip: Int, take: Int, where: AuthorizationsWhereInput): [Authorizations!]!
  consultations(cursor: ConsultationsWhereUniqueInput, distinct: [ConsultationsScalarFieldEnum!], orderBy: [ConsultationsOrderByWithRelationInput!], skip: Int, take: Int, where: ConsultationsWhereInput): [Consultations!]!
  doctors(cursor: DoctorsWhereUniqueInput, distinct: [DoctorsScalarFieldEnum!], orderBy: [DoctorsOrderByWithRelationInput!], skip: Int, take: Int, where: DoctorsWhereInput): [Doctors!]!
  id: String!
  type: instituts_medicaux_type_enum!
}

type Instituts_medicauxCount {
  authorizations(where: AuthorizationsWhereInput): Int!
  consultations(where: ConsultationsWhereInput): Int!
  doctors(where: DoctorsWhereInput): Int!
}

type Instituts_medicauxCountAggregate {
  _all: Int!
  id: Int!
  type: Int!
}

input Instituts_medicauxCountOrderByAggregateInput {
  id: SortOrder
  type: SortOrder
}

input Instituts_medicauxCreateInput {
  authorizations: AuthorizationsCreateNestedManyWithoutInstituts_medicauxInput
  consultations: ConsultationsCreateNestedManyWithoutInstituts_medicauxInput
  doctors: DoctorsCreateNestedManyWithoutInstitutsInput
  id: String
  type: instituts_medicaux_type_enum!
}

input Instituts_medicauxCreateManyInput {
  id: String
  type: instituts_medicaux_type_enum!
}

input Instituts_medicauxCreateNestedManyWithoutDoctorsInput {
  connect: [Instituts_medicauxWhereUniqueInput!]
  connectOrCreate: [Instituts_medicauxCreateOrConnectWithoutDoctorsInput!]
  create: [Instituts_medicauxCreateWithoutDoctorsInput!]
}

input Instituts_medicauxCreateNestedOneWithoutAuthorizationsInput {
  connect: Instituts_medicauxWhereUniqueInput
  connectOrCreate: Instituts_medicauxCreateOrConnectWithoutAuthorizationsInput
  create: Instituts_medicauxCreateWithoutAuthorizationsInput
}

input Instituts_medicauxCreateNestedOneWithoutConsultationsInput {
  connect: Instituts_medicauxWhereUniqueInput
  connectOrCreate: Instituts_medicauxCreateOrConnectWithoutConsultationsInput
  create: Instituts_medicauxCreateWithoutConsultationsInput
}

input Instituts_medicauxCreateOrConnectWithoutAuthorizationsInput {
  create: Instituts_medicauxCreateWithoutAuthorizationsInput!
  where: Instituts_medicauxWhereUniqueInput!
}

input Instituts_medicauxCreateOrConnectWithoutConsultationsInput {
  create: Instituts_medicauxCreateWithoutConsultationsInput!
  where: Instituts_medicauxWhereUniqueInput!
}

input Instituts_medicauxCreateOrConnectWithoutDoctorsInput {
  create: Instituts_medicauxCreateWithoutDoctorsInput!
  where: Instituts_medicauxWhereUniqueInput!
}

input Instituts_medicauxCreateWithoutAuthorizationsInput {
  consultations: ConsultationsCreateNestedManyWithoutInstituts_medicauxInput
  doctors: DoctorsCreateNestedManyWithoutInstitutsInput
  id: String
  type: instituts_medicaux_type_enum!
}

input Instituts_medicauxCreateWithoutConsultationsInput {
  authorizations: AuthorizationsCreateNestedManyWithoutInstituts_medicauxInput
  doctors: DoctorsCreateNestedManyWithoutInstitutsInput
  id: String
  type: instituts_medicaux_type_enum!
}

input Instituts_medicauxCreateWithoutDoctorsInput {
  authorizations: AuthorizationsCreateNestedManyWithoutInstituts_medicauxInput
  consultations: ConsultationsCreateNestedManyWithoutInstituts_medicauxInput
  id: String
  type: instituts_medicaux_type_enum!
}

type Instituts_medicauxGroupBy {
  _count: Instituts_medicauxCountAggregate
  _max: Instituts_medicauxMaxAggregate
  _min: Instituts_medicauxMinAggregate
  id: String!
  type: instituts_medicaux_type_enum!
}

input Instituts_medicauxListRelationFilter {
  every: Instituts_medicauxWhereInput
  none: Instituts_medicauxWhereInput
  some: Instituts_medicauxWhereInput
}

type Instituts_medicauxMaxAggregate {
  id: String
  type: instituts_medicaux_type_enum
}

input Instituts_medicauxMaxOrderByAggregateInput {
  id: SortOrder
  type: SortOrder
}

type Instituts_medicauxMinAggregate {
  id: String
  type: instituts_medicaux_type_enum
}

input Instituts_medicauxMinOrderByAggregateInput {
  id: SortOrder
  type: SortOrder
}

input Instituts_medicauxNullableRelationFilter {
  is: Instituts_medicauxWhereInput
  isNot: Instituts_medicauxWhereInput
}

input Instituts_medicauxOrderByRelationAggregateInput {
  _count: SortOrder
}

input Instituts_medicauxOrderByWithAggregationInput {
  _count: Instituts_medicauxCountOrderByAggregateInput
  _max: Instituts_medicauxMaxOrderByAggregateInput
  _min: Instituts_medicauxMinOrderByAggregateInput
  id: SortOrder
  type: SortOrder
}

input Instituts_medicauxOrderByWithRelationInput {
  authorizations: AuthorizationsOrderByRelationAggregateInput
  consultations: ConsultationsOrderByRelationAggregateInput
  doctors: DoctorsOrderByRelationAggregateInput
  id: SortOrder
  type: SortOrder
}

enum Instituts_medicauxScalarFieldEnum {
  id
  type
}

input Instituts_medicauxScalarWhereInput {
  AND: [Instituts_medicauxScalarWhereInput!]
  NOT: [Instituts_medicauxScalarWhereInput!]
  OR: [Instituts_medicauxScalarWhereInput!]
  id: UuidFilter
  type: Enuminstituts_medicaux_type_enumFilter
}

input Instituts_medicauxScalarWhereWithAggregatesInput {
  AND: [Instituts_medicauxScalarWhereWithAggregatesInput!]
  NOT: [Instituts_medicauxScalarWhereWithAggregatesInput!]
  OR: [Instituts_medicauxScalarWhereWithAggregatesInput!]
  id: UuidWithAggregatesFilter
  type: Enuminstituts_medicaux_type_enumWithAggregatesFilter
}

input Instituts_medicauxUpdateInput {
  authorizations: AuthorizationsUpdateManyWithoutInstituts_medicauxNestedInput
  consultations: ConsultationsUpdateManyWithoutInstituts_medicauxNestedInput
  doctors: DoctorsUpdateManyWithoutInstitutsNestedInput
  id: StringFieldUpdateOperationsInput
  type: Enuminstituts_medicaux_type_enumFieldUpdateOperationsInput
}

input Instituts_medicauxUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  type: Enuminstituts_medicaux_type_enumFieldUpdateOperationsInput
}

input Instituts_medicauxUpdateManyWithWhereWithoutDoctorsInput {
  data: Instituts_medicauxUpdateManyMutationInput!
  where: Instituts_medicauxScalarWhereInput!
}

input Instituts_medicauxUpdateManyWithoutDoctorsNestedInput {
  connect: [Instituts_medicauxWhereUniqueInput!]
  connectOrCreate: [Instituts_medicauxCreateOrConnectWithoutDoctorsInput!]
  create: [Instituts_medicauxCreateWithoutDoctorsInput!]
  delete: [Instituts_medicauxWhereUniqueInput!]
  deleteMany: [Instituts_medicauxScalarWhereInput!]
  disconnect: [Instituts_medicauxWhereUniqueInput!]
  set: [Instituts_medicauxWhereUniqueInput!]
  update: [Instituts_medicauxUpdateWithWhereUniqueWithoutDoctorsInput!]
  updateMany: [Instituts_medicauxUpdateManyWithWhereWithoutDoctorsInput!]
  upsert: [Instituts_medicauxUpsertWithWhereUniqueWithoutDoctorsInput!]
}

input Instituts_medicauxUpdateOneWithoutAuthorizationsNestedInput {
  connect: Instituts_medicauxWhereUniqueInput
  connectOrCreate: Instituts_medicauxCreateOrConnectWithoutAuthorizationsInput
  create: Instituts_medicauxCreateWithoutAuthorizationsInput
  delete: Instituts_medicauxWhereInput
  disconnect: Instituts_medicauxWhereInput
  update: Instituts_medicauxUpdateToOneWithWhereWithoutAuthorizationsInput
  upsert: Instituts_medicauxUpsertWithoutAuthorizationsInput
}

input Instituts_medicauxUpdateOneWithoutConsultationsNestedInput {
  connect: Instituts_medicauxWhereUniqueInput
  connectOrCreate: Instituts_medicauxCreateOrConnectWithoutConsultationsInput
  create: Instituts_medicauxCreateWithoutConsultationsInput
  delete: Instituts_medicauxWhereInput
  disconnect: Instituts_medicauxWhereInput
  update: Instituts_medicauxUpdateToOneWithWhereWithoutConsultationsInput
  upsert: Instituts_medicauxUpsertWithoutConsultationsInput
}

input Instituts_medicauxUpdateToOneWithWhereWithoutAuthorizationsInput {
  data: Instituts_medicauxUpdateWithoutAuthorizationsInput!
  where: Instituts_medicauxWhereInput
}

input Instituts_medicauxUpdateToOneWithWhereWithoutConsultationsInput {
  data: Instituts_medicauxUpdateWithoutConsultationsInput!
  where: Instituts_medicauxWhereInput
}

input Instituts_medicauxUpdateWithWhereUniqueWithoutDoctorsInput {
  data: Instituts_medicauxUpdateWithoutDoctorsInput!
  where: Instituts_medicauxWhereUniqueInput!
}

input Instituts_medicauxUpdateWithoutAuthorizationsInput {
  consultations: ConsultationsUpdateManyWithoutInstituts_medicauxNestedInput
  doctors: DoctorsUpdateManyWithoutInstitutsNestedInput
  id: StringFieldUpdateOperationsInput
  type: Enuminstituts_medicaux_type_enumFieldUpdateOperationsInput
}

input Instituts_medicauxUpdateWithoutConsultationsInput {
  authorizations: AuthorizationsUpdateManyWithoutInstituts_medicauxNestedInput
  doctors: DoctorsUpdateManyWithoutInstitutsNestedInput
  id: StringFieldUpdateOperationsInput
  type: Enuminstituts_medicaux_type_enumFieldUpdateOperationsInput
}

input Instituts_medicauxUpdateWithoutDoctorsInput {
  authorizations: AuthorizationsUpdateManyWithoutInstituts_medicauxNestedInput
  consultations: ConsultationsUpdateManyWithoutInstituts_medicauxNestedInput
  id: StringFieldUpdateOperationsInput
  type: Enuminstituts_medicaux_type_enumFieldUpdateOperationsInput
}

input Instituts_medicauxUpsertWithWhereUniqueWithoutDoctorsInput {
  create: Instituts_medicauxCreateWithoutDoctorsInput!
  update: Instituts_medicauxUpdateWithoutDoctorsInput!
  where: Instituts_medicauxWhereUniqueInput!
}

input Instituts_medicauxUpsertWithoutAuthorizationsInput {
  create: Instituts_medicauxCreateWithoutAuthorizationsInput!
  update: Instituts_medicauxUpdateWithoutAuthorizationsInput!
  where: Instituts_medicauxWhereInput
}

input Instituts_medicauxUpsertWithoutConsultationsInput {
  create: Instituts_medicauxCreateWithoutConsultationsInput!
  update: Instituts_medicauxUpdateWithoutConsultationsInput!
  where: Instituts_medicauxWhereInput
}

input Instituts_medicauxWhereInput {
  AND: [Instituts_medicauxWhereInput!]
  NOT: [Instituts_medicauxWhereInput!]
  OR: [Instituts_medicauxWhereInput!]
  authorizations: AuthorizationsListRelationFilter
  consultations: ConsultationsListRelationFilter
  doctors: DoctorsListRelationFilter
  id: UuidFilter
  type: Enuminstituts_medicaux_type_enumFilter
}

input Instituts_medicauxWhereUniqueInput {
  AND: [Instituts_medicauxWhereInput!]
  NOT: [Instituts_medicauxWhereInput!]
  OR: [Instituts_medicauxWhereInput!]
  authorizations: AuthorizationsListRelationFilter
  consultations: ConsultationsListRelationFilter
  doctors: DoctorsListRelationFilter
  id: String
  type: Enuminstituts_medicaux_type_enumFilter
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

input JsonNullableFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input JsonNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedJsonNullableFilter
  _min: NestedJsonNullableFilter
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

type Lab_attachments {
  id: String!
  lab_document_id: String!
  lab_documents: Lab_documents!
  name: String!
  type: String!
  url: String!
}

type Lab_attachmentsCountAggregate {
  _all: Int!
  id: Int!
  lab_document_id: Int!
  name: Int!
  type: Int!
  url: Int!
}

input Lab_attachmentsCountOrderByAggregateInput {
  id: SortOrder
  lab_document_id: SortOrder
  name: SortOrder
  type: SortOrder
  url: SortOrder
}

input Lab_attachmentsCreateInput {
  id: String
  lab_documents: Lab_documentsCreateNestedOneWithoutLab_attachmentsInput!
  name: String!
  type: String!
  url: String!
}

input Lab_attachmentsCreateManyInput {
  id: String
  lab_document_id: String!
  name: String!
  type: String!
  url: String!
}

input Lab_attachmentsCreateManyLab_documentsInput {
  id: String
  name: String!
  type: String!
  url: String!
}

input Lab_attachmentsCreateManyLab_documentsInputEnvelope {
  data: [Lab_attachmentsCreateManyLab_documentsInput!]!
  skipDuplicates: Boolean
}

input Lab_attachmentsCreateNestedManyWithoutLab_documentsInput {
  connect: [Lab_attachmentsWhereUniqueInput!]
  connectOrCreate: [Lab_attachmentsCreateOrConnectWithoutLab_documentsInput!]
  create: [Lab_attachmentsCreateWithoutLab_documentsInput!]
  createMany: Lab_attachmentsCreateManyLab_documentsInputEnvelope
}

input Lab_attachmentsCreateOrConnectWithoutLab_documentsInput {
  create: Lab_attachmentsCreateWithoutLab_documentsInput!
  where: Lab_attachmentsWhereUniqueInput!
}

input Lab_attachmentsCreateWithoutLab_documentsInput {
  id: String
  name: String!
  type: String!
  url: String!
}

type Lab_attachmentsGroupBy {
  _count: Lab_attachmentsCountAggregate
  _max: Lab_attachmentsMaxAggregate
  _min: Lab_attachmentsMinAggregate
  id: String!
  lab_document_id: String!
  name: String!
  type: String!
  url: String!
}

input Lab_attachmentsListRelationFilter {
  every: Lab_attachmentsWhereInput
  none: Lab_attachmentsWhereInput
  some: Lab_attachmentsWhereInput
}

type Lab_attachmentsMaxAggregate {
  id: String
  lab_document_id: String
  name: String
  type: String
  url: String
}

input Lab_attachmentsMaxOrderByAggregateInput {
  id: SortOrder
  lab_document_id: SortOrder
  name: SortOrder
  type: SortOrder
  url: SortOrder
}

type Lab_attachmentsMinAggregate {
  id: String
  lab_document_id: String
  name: String
  type: String
  url: String
}

input Lab_attachmentsMinOrderByAggregateInput {
  id: SortOrder
  lab_document_id: SortOrder
  name: SortOrder
  type: SortOrder
  url: SortOrder
}

input Lab_attachmentsOrderByRelationAggregateInput {
  _count: SortOrder
}

input Lab_attachmentsOrderByWithAggregationInput {
  _count: Lab_attachmentsCountOrderByAggregateInput
  _max: Lab_attachmentsMaxOrderByAggregateInput
  _min: Lab_attachmentsMinOrderByAggregateInput
  id: SortOrder
  lab_document_id: SortOrder
  name: SortOrder
  type: SortOrder
  url: SortOrder
}

input Lab_attachmentsOrderByWithRelationInput {
  id: SortOrder
  lab_document_id: SortOrder
  lab_documents: Lab_documentsOrderByWithRelationInput
  name: SortOrder
  type: SortOrder
  url: SortOrder
}

enum Lab_attachmentsScalarFieldEnum {
  id
  lab_document_id
  name
  type
  url
}

input Lab_attachmentsScalarWhereInput {
  AND: [Lab_attachmentsScalarWhereInput!]
  NOT: [Lab_attachmentsScalarWhereInput!]
  OR: [Lab_attachmentsScalarWhereInput!]
  id: UuidFilter
  lab_document_id: UuidFilter
  name: StringFilter
  type: StringFilter
  url: StringFilter
}

input Lab_attachmentsScalarWhereWithAggregatesInput {
  AND: [Lab_attachmentsScalarWhereWithAggregatesInput!]
  NOT: [Lab_attachmentsScalarWhereWithAggregatesInput!]
  OR: [Lab_attachmentsScalarWhereWithAggregatesInput!]
  id: UuidWithAggregatesFilter
  lab_document_id: UuidWithAggregatesFilter
  name: StringWithAggregatesFilter
  type: StringWithAggregatesFilter
  url: StringWithAggregatesFilter
}

input Lab_attachmentsUpdateInput {
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateOneRequiredWithoutLab_attachmentsNestedInput
  name: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input Lab_attachmentsUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input Lab_attachmentsUpdateManyWithWhereWithoutLab_documentsInput {
  data: Lab_attachmentsUpdateManyMutationInput!
  where: Lab_attachmentsScalarWhereInput!
}

input Lab_attachmentsUpdateManyWithoutLab_documentsNestedInput {
  connect: [Lab_attachmentsWhereUniqueInput!]
  connectOrCreate: [Lab_attachmentsCreateOrConnectWithoutLab_documentsInput!]
  create: [Lab_attachmentsCreateWithoutLab_documentsInput!]
  createMany: Lab_attachmentsCreateManyLab_documentsInputEnvelope
  delete: [Lab_attachmentsWhereUniqueInput!]
  deleteMany: [Lab_attachmentsScalarWhereInput!]
  disconnect: [Lab_attachmentsWhereUniqueInput!]
  set: [Lab_attachmentsWhereUniqueInput!]
  update: [Lab_attachmentsUpdateWithWhereUniqueWithoutLab_documentsInput!]
  updateMany: [Lab_attachmentsUpdateManyWithWhereWithoutLab_documentsInput!]
  upsert: [Lab_attachmentsUpsertWithWhereUniqueWithoutLab_documentsInput!]
}

input Lab_attachmentsUpdateWithWhereUniqueWithoutLab_documentsInput {
  data: Lab_attachmentsUpdateWithoutLab_documentsInput!
  where: Lab_attachmentsWhereUniqueInput!
}

input Lab_attachmentsUpdateWithoutLab_documentsInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input Lab_attachmentsUpsertWithWhereUniqueWithoutLab_documentsInput {
  create: Lab_attachmentsCreateWithoutLab_documentsInput!
  update: Lab_attachmentsUpdateWithoutLab_documentsInput!
  where: Lab_attachmentsWhereUniqueInput!
}

input Lab_attachmentsWhereInput {
  AND: [Lab_attachmentsWhereInput!]
  NOT: [Lab_attachmentsWhereInput!]
  OR: [Lab_attachmentsWhereInput!]
  id: UuidFilter
  lab_document_id: UuidFilter
  lab_documents: Lab_documentsRelationFilter
  name: StringFilter
  type: StringFilter
  url: StringFilter
}

input Lab_attachmentsWhereUniqueInput {
  AND: [Lab_attachmentsWhereInput!]
  NOT: [Lab_attachmentsWhereInput!]
  OR: [Lab_attachmentsWhereInput!]
  id: String
  lab_document_id: UuidFilter
  lab_documents: Lab_documentsRelationFilter
  name: StringFilter
  type: StringFilter
  url: StringFilter
}

type Lab_documents {
  _count: Lab_documentsCount
  analysis_results(cursor: Analysis_resultsWhereUniqueInput, distinct: [Analysis_resultsScalarFieldEnum!], orderBy: [Analysis_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Analysis_resultsWhereInput): [Analysis_results!]!
  completed_at: DateTimeISO
  created_at: DateTimeISO!
  ctscan_results(cursor: Ctscan_resultsWhereUniqueInput, distinct: [Ctscan_resultsScalarFieldEnum!], orderBy: [Ctscan_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Ctscan_resultsWhereInput): [Ctscan_results!]!
  id: String!
  lab_attachments(cursor: Lab_attachmentsWhereUniqueInput, distinct: [Lab_attachmentsScalarFieldEnum!], orderBy: [Lab_attachmentsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_attachmentsWhereInput): [Lab_attachments!]!
  lab_request_id: String
  lab_requests(where: Lab_requestsWhereInput): Lab_requests
  lab_results(cursor: Lab_resultsWhereUniqueInput, distinct: [Lab_resultsScalarFieldEnum!], orderBy: [Lab_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_resultsWhereInput): [Lab_results!]!
  laboratories(where: LaboratoriesWhereInput): Laboratories
  laboratory_id: String
  notes: String
  patient_id: String!
  patients: Patients!
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
  xray_results(cursor: Xray_resultsWhereUniqueInput, distinct: [Xray_resultsScalarFieldEnum!], orderBy: [Xray_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Xray_resultsWhereInput): [Xray_results!]!
}

type Lab_documentsCount {
  analysis_results(where: Analysis_resultsWhereInput): Int!
  ctscan_results(where: Ctscan_resultsWhereInput): Int!
  lab_attachments(where: Lab_attachmentsWhereInput): Int!
  lab_results(where: Lab_resultsWhereInput): Int!
  xray_results(where: Xray_resultsWhereInput): Int!
}

type Lab_documentsCountAggregate {
  _all: Int!
  completed_at: Int!
  created_at: Int!
  id: Int!
  lab_request_id: Int!
  laboratory_id: Int!
  notes: Int!
  patient_id: Int!
  requested_at: Int!
  section: Int!
  status: Int!
}

input Lab_documentsCountOrderByAggregateInput {
  completed_at: SortOrder
  created_at: SortOrder
  id: SortOrder
  lab_request_id: SortOrder
  laboratory_id: SortOrder
  notes: SortOrder
  patient_id: SortOrder
  requested_at: SortOrder
  section: SortOrder
  status: SortOrder
}

input Lab_documentsCreateInput {
  analysis_results: Analysis_resultsCreateNestedManyWithoutLab_documentsInput
  completed_at: DateTimeISO
  created_at: DateTimeISO
  ctscan_results: Ctscan_resultsCreateNestedManyWithoutLab_documentsInput
  id: String
  lab_attachments: Lab_attachmentsCreateNestedManyWithoutLab_documentsInput
  lab_requests: Lab_requestsCreateNestedOneWithoutLab_documentsInput
  lab_results: Lab_resultsCreateNestedManyWithoutLab_documentsInput
  laboratories: LaboratoriesCreateNestedOneWithoutLab_documentsInput
  notes: String
  patients: PatientsCreateNestedOneWithoutLab_documentsInput!
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
  xray_results: Xray_resultsCreateNestedManyWithoutLab_documentsInput
}

input Lab_documentsCreateManyInput {
  completed_at: DateTimeISO
  created_at: DateTimeISO
  id: String
  lab_request_id: String
  laboratory_id: String
  notes: String
  patient_id: String!
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
}

input Lab_documentsCreateManyLab_requestsInput {
  completed_at: DateTimeISO
  created_at: DateTimeISO
  id: String
  laboratory_id: String
  notes: String
  patient_id: String!
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
}

input Lab_documentsCreateManyLab_requestsInputEnvelope {
  data: [Lab_documentsCreateManyLab_requestsInput!]!
  skipDuplicates: Boolean
}

input Lab_documentsCreateManyLaboratoriesInput {
  completed_at: DateTimeISO
  created_at: DateTimeISO
  id: String
  lab_request_id: String
  notes: String
  patient_id: String!
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
}

input Lab_documentsCreateManyLaboratoriesInputEnvelope {
  data: [Lab_documentsCreateManyLaboratoriesInput!]!
  skipDuplicates: Boolean
}

input Lab_documentsCreateManyPatientsInput {
  completed_at: DateTimeISO
  created_at: DateTimeISO
  id: String
  lab_request_id: String
  laboratory_id: String
  notes: String
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
}

input Lab_documentsCreateManyPatientsInputEnvelope {
  data: [Lab_documentsCreateManyPatientsInput!]!
  skipDuplicates: Boolean
}

input Lab_documentsCreateNestedManyWithoutLab_requestsInput {
  connect: [Lab_documentsWhereUniqueInput!]
  connectOrCreate: [Lab_documentsCreateOrConnectWithoutLab_requestsInput!]
  create: [Lab_documentsCreateWithoutLab_requestsInput!]
  createMany: Lab_documentsCreateManyLab_requestsInputEnvelope
}

input Lab_documentsCreateNestedManyWithoutLaboratoriesInput {
  connect: [Lab_documentsWhereUniqueInput!]
  connectOrCreate: [Lab_documentsCreateOrConnectWithoutLaboratoriesInput!]
  create: [Lab_documentsCreateWithoutLaboratoriesInput!]
  createMany: Lab_documentsCreateManyLaboratoriesInputEnvelope
}

input Lab_documentsCreateNestedManyWithoutPatientsInput {
  connect: [Lab_documentsWhereUniqueInput!]
  connectOrCreate: [Lab_documentsCreateOrConnectWithoutPatientsInput!]
  create: [Lab_documentsCreateWithoutPatientsInput!]
  createMany: Lab_documentsCreateManyPatientsInputEnvelope
}

input Lab_documentsCreateNestedOneWithoutAnalysis_resultsInput {
  connect: Lab_documentsWhereUniqueInput
  connectOrCreate: Lab_documentsCreateOrConnectWithoutAnalysis_resultsInput
  create: Lab_documentsCreateWithoutAnalysis_resultsInput
}

input Lab_documentsCreateNestedOneWithoutCtscan_resultsInput {
  connect: Lab_documentsWhereUniqueInput
  connectOrCreate: Lab_documentsCreateOrConnectWithoutCtscan_resultsInput
  create: Lab_documentsCreateWithoutCtscan_resultsInput
}

input Lab_documentsCreateNestedOneWithoutLab_attachmentsInput {
  connect: Lab_documentsWhereUniqueInput
  connectOrCreate: Lab_documentsCreateOrConnectWithoutLab_attachmentsInput
  create: Lab_documentsCreateWithoutLab_attachmentsInput
}

input Lab_documentsCreateNestedOneWithoutLab_resultsInput {
  connect: Lab_documentsWhereUniqueInput
  connectOrCreate: Lab_documentsCreateOrConnectWithoutLab_resultsInput
  create: Lab_documentsCreateWithoutLab_resultsInput
}

input Lab_documentsCreateNestedOneWithoutXray_resultsInput {
  connect: Lab_documentsWhereUniqueInput
  connectOrCreate: Lab_documentsCreateOrConnectWithoutXray_resultsInput
  create: Lab_documentsCreateWithoutXray_resultsInput
}

input Lab_documentsCreateOrConnectWithoutAnalysis_resultsInput {
  create: Lab_documentsCreateWithoutAnalysis_resultsInput!
  where: Lab_documentsWhereUniqueInput!
}

input Lab_documentsCreateOrConnectWithoutCtscan_resultsInput {
  create: Lab_documentsCreateWithoutCtscan_resultsInput!
  where: Lab_documentsWhereUniqueInput!
}

input Lab_documentsCreateOrConnectWithoutLab_attachmentsInput {
  create: Lab_documentsCreateWithoutLab_attachmentsInput!
  where: Lab_documentsWhereUniqueInput!
}

input Lab_documentsCreateOrConnectWithoutLab_requestsInput {
  create: Lab_documentsCreateWithoutLab_requestsInput!
  where: Lab_documentsWhereUniqueInput!
}

input Lab_documentsCreateOrConnectWithoutLab_resultsInput {
  create: Lab_documentsCreateWithoutLab_resultsInput!
  where: Lab_documentsWhereUniqueInput!
}

input Lab_documentsCreateOrConnectWithoutLaboratoriesInput {
  create: Lab_documentsCreateWithoutLaboratoriesInput!
  where: Lab_documentsWhereUniqueInput!
}

input Lab_documentsCreateOrConnectWithoutPatientsInput {
  create: Lab_documentsCreateWithoutPatientsInput!
  where: Lab_documentsWhereUniqueInput!
}

input Lab_documentsCreateOrConnectWithoutXray_resultsInput {
  create: Lab_documentsCreateWithoutXray_resultsInput!
  where: Lab_documentsWhereUniqueInput!
}

input Lab_documentsCreateWithoutAnalysis_resultsInput {
  completed_at: DateTimeISO
  created_at: DateTimeISO
  ctscan_results: Ctscan_resultsCreateNestedManyWithoutLab_documentsInput
  id: String
  lab_attachments: Lab_attachmentsCreateNestedManyWithoutLab_documentsInput
  lab_requests: Lab_requestsCreateNestedOneWithoutLab_documentsInput
  lab_results: Lab_resultsCreateNestedManyWithoutLab_documentsInput
  laboratories: LaboratoriesCreateNestedOneWithoutLab_documentsInput
  notes: String
  patients: PatientsCreateNestedOneWithoutLab_documentsInput!
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
  xray_results: Xray_resultsCreateNestedManyWithoutLab_documentsInput
}

input Lab_documentsCreateWithoutCtscan_resultsInput {
  analysis_results: Analysis_resultsCreateNestedManyWithoutLab_documentsInput
  completed_at: DateTimeISO
  created_at: DateTimeISO
  id: String
  lab_attachments: Lab_attachmentsCreateNestedManyWithoutLab_documentsInput
  lab_requests: Lab_requestsCreateNestedOneWithoutLab_documentsInput
  lab_results: Lab_resultsCreateNestedManyWithoutLab_documentsInput
  laboratories: LaboratoriesCreateNestedOneWithoutLab_documentsInput
  notes: String
  patients: PatientsCreateNestedOneWithoutLab_documentsInput!
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
  xray_results: Xray_resultsCreateNestedManyWithoutLab_documentsInput
}

input Lab_documentsCreateWithoutLab_attachmentsInput {
  analysis_results: Analysis_resultsCreateNestedManyWithoutLab_documentsInput
  completed_at: DateTimeISO
  created_at: DateTimeISO
  ctscan_results: Ctscan_resultsCreateNestedManyWithoutLab_documentsInput
  id: String
  lab_requests: Lab_requestsCreateNestedOneWithoutLab_documentsInput
  lab_results: Lab_resultsCreateNestedManyWithoutLab_documentsInput
  laboratories: LaboratoriesCreateNestedOneWithoutLab_documentsInput
  notes: String
  patients: PatientsCreateNestedOneWithoutLab_documentsInput!
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
  xray_results: Xray_resultsCreateNestedManyWithoutLab_documentsInput
}

input Lab_documentsCreateWithoutLab_requestsInput {
  analysis_results: Analysis_resultsCreateNestedManyWithoutLab_documentsInput
  completed_at: DateTimeISO
  created_at: DateTimeISO
  ctscan_results: Ctscan_resultsCreateNestedManyWithoutLab_documentsInput
  id: String
  lab_attachments: Lab_attachmentsCreateNestedManyWithoutLab_documentsInput
  lab_results: Lab_resultsCreateNestedManyWithoutLab_documentsInput
  laboratories: LaboratoriesCreateNestedOneWithoutLab_documentsInput
  notes: String
  patients: PatientsCreateNestedOneWithoutLab_documentsInput!
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
  xray_results: Xray_resultsCreateNestedManyWithoutLab_documentsInput
}

input Lab_documentsCreateWithoutLab_resultsInput {
  analysis_results: Analysis_resultsCreateNestedManyWithoutLab_documentsInput
  completed_at: DateTimeISO
  created_at: DateTimeISO
  ctscan_results: Ctscan_resultsCreateNestedManyWithoutLab_documentsInput
  id: String
  lab_attachments: Lab_attachmentsCreateNestedManyWithoutLab_documentsInput
  lab_requests: Lab_requestsCreateNestedOneWithoutLab_documentsInput
  laboratories: LaboratoriesCreateNestedOneWithoutLab_documentsInput
  notes: String
  patients: PatientsCreateNestedOneWithoutLab_documentsInput!
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
  xray_results: Xray_resultsCreateNestedManyWithoutLab_documentsInput
}

input Lab_documentsCreateWithoutLaboratoriesInput {
  analysis_results: Analysis_resultsCreateNestedManyWithoutLab_documentsInput
  completed_at: DateTimeISO
  created_at: DateTimeISO
  ctscan_results: Ctscan_resultsCreateNestedManyWithoutLab_documentsInput
  id: String
  lab_attachments: Lab_attachmentsCreateNestedManyWithoutLab_documentsInput
  lab_requests: Lab_requestsCreateNestedOneWithoutLab_documentsInput
  lab_results: Lab_resultsCreateNestedManyWithoutLab_documentsInput
  notes: String
  patients: PatientsCreateNestedOneWithoutLab_documentsInput!
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
  xray_results: Xray_resultsCreateNestedManyWithoutLab_documentsInput
}

input Lab_documentsCreateWithoutPatientsInput {
  analysis_results: Analysis_resultsCreateNestedManyWithoutLab_documentsInput
  completed_at: DateTimeISO
  created_at: DateTimeISO
  ctscan_results: Ctscan_resultsCreateNestedManyWithoutLab_documentsInput
  id: String
  lab_attachments: Lab_attachmentsCreateNestedManyWithoutLab_documentsInput
  lab_requests: Lab_requestsCreateNestedOneWithoutLab_documentsInput
  lab_results: Lab_resultsCreateNestedManyWithoutLab_documentsInput
  laboratories: LaboratoriesCreateNestedOneWithoutLab_documentsInput
  notes: String
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
  xray_results: Xray_resultsCreateNestedManyWithoutLab_documentsInput
}

input Lab_documentsCreateWithoutXray_resultsInput {
  analysis_results: Analysis_resultsCreateNestedManyWithoutLab_documentsInput
  completed_at: DateTimeISO
  created_at: DateTimeISO
  ctscan_results: Ctscan_resultsCreateNestedManyWithoutLab_documentsInput
  id: String
  lab_attachments: Lab_attachmentsCreateNestedManyWithoutLab_documentsInput
  lab_requests: Lab_requestsCreateNestedOneWithoutLab_documentsInput
  lab_results: Lab_resultsCreateNestedManyWithoutLab_documentsInput
  laboratories: LaboratoriesCreateNestedOneWithoutLab_documentsInput
  notes: String
  patients: PatientsCreateNestedOneWithoutLab_documentsInput!
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
}

type Lab_documentsGroupBy {
  _count: Lab_documentsCountAggregate
  _max: Lab_documentsMaxAggregate
  _min: Lab_documentsMinAggregate
  completed_at: DateTimeISO
  created_at: DateTimeISO!
  id: String!
  lab_request_id: String
  laboratory_id: String
  notes: String
  patient_id: String!
  requested_at: DateTimeISO!
  section: String
  status: lab_documents_status_enum!
}

input Lab_documentsListRelationFilter {
  every: Lab_documentsWhereInput
  none: Lab_documentsWhereInput
  some: Lab_documentsWhereInput
}

type Lab_documentsMaxAggregate {
  completed_at: DateTimeISO
  created_at: DateTimeISO
  id: String
  lab_request_id: String
  laboratory_id: String
  notes: String
  patient_id: String
  requested_at: DateTimeISO
  section: String
  status: lab_documents_status_enum
}

input Lab_documentsMaxOrderByAggregateInput {
  completed_at: SortOrder
  created_at: SortOrder
  id: SortOrder
  lab_request_id: SortOrder
  laboratory_id: SortOrder
  notes: SortOrder
  patient_id: SortOrder
  requested_at: SortOrder
  section: SortOrder
  status: SortOrder
}

type Lab_documentsMinAggregate {
  completed_at: DateTimeISO
  created_at: DateTimeISO
  id: String
  lab_request_id: String
  laboratory_id: String
  notes: String
  patient_id: String
  requested_at: DateTimeISO
  section: String
  status: lab_documents_status_enum
}

input Lab_documentsMinOrderByAggregateInput {
  completed_at: SortOrder
  created_at: SortOrder
  id: SortOrder
  lab_request_id: SortOrder
  laboratory_id: SortOrder
  notes: SortOrder
  patient_id: SortOrder
  requested_at: SortOrder
  section: SortOrder
  status: SortOrder
}

input Lab_documentsOrderByRelationAggregateInput {
  _count: SortOrder
}

input Lab_documentsOrderByWithAggregationInput {
  _count: Lab_documentsCountOrderByAggregateInput
  _max: Lab_documentsMaxOrderByAggregateInput
  _min: Lab_documentsMinOrderByAggregateInput
  completed_at: SortOrderInput
  created_at: SortOrder
  id: SortOrder
  lab_request_id: SortOrderInput
  laboratory_id: SortOrderInput
  notes: SortOrderInput
  patient_id: SortOrder
  requested_at: SortOrder
  section: SortOrderInput
  status: SortOrder
}

input Lab_documentsOrderByWithRelationInput {
  analysis_results: Analysis_resultsOrderByRelationAggregateInput
  completed_at: SortOrderInput
  created_at: SortOrder
  ctscan_results: Ctscan_resultsOrderByRelationAggregateInput
  id: SortOrder
  lab_attachments: Lab_attachmentsOrderByRelationAggregateInput
  lab_request_id: SortOrderInput
  lab_requests: Lab_requestsOrderByWithRelationInput
  lab_results: Lab_resultsOrderByRelationAggregateInput
  laboratories: LaboratoriesOrderByWithRelationInput
  laboratory_id: SortOrderInput
  notes: SortOrderInput
  patient_id: SortOrder
  patients: PatientsOrderByWithRelationInput
  requested_at: SortOrder
  section: SortOrderInput
  status: SortOrder
  xray_results: Xray_resultsOrderByRelationAggregateInput
}

input Lab_documentsRelationFilter {
  is: Lab_documentsWhereInput
  isNot: Lab_documentsWhereInput
}

enum Lab_documentsScalarFieldEnum {
  completed_at
  created_at
  id
  lab_request_id
  laboratory_id
  notes
  patient_id
  requested_at
  section
  status
}

input Lab_documentsScalarWhereInput {
  AND: [Lab_documentsScalarWhereInput!]
  NOT: [Lab_documentsScalarWhereInput!]
  OR: [Lab_documentsScalarWhereInput!]
  completed_at: DateTimeNullableFilter
  created_at: DateTimeFilter
  id: UuidFilter
  lab_request_id: UuidNullableFilter
  laboratory_id: UuidNullableFilter
  notes: StringNullableFilter
  patient_id: UuidFilter
  requested_at: DateTimeFilter
  section: StringNullableFilter
  status: Enumlab_documents_status_enumFilter
}

input Lab_documentsScalarWhereWithAggregatesInput {
  AND: [Lab_documentsScalarWhereWithAggregatesInput!]
  NOT: [Lab_documentsScalarWhereWithAggregatesInput!]
  OR: [Lab_documentsScalarWhereWithAggregatesInput!]
  completed_at: DateTimeNullableWithAggregatesFilter
  created_at: DateTimeWithAggregatesFilter
  id: UuidWithAggregatesFilter
  lab_request_id: UuidNullableWithAggregatesFilter
  laboratory_id: UuidNullableWithAggregatesFilter
  notes: StringNullableWithAggregatesFilter
  patient_id: UuidWithAggregatesFilter
  requested_at: DateTimeWithAggregatesFilter
  section: StringNullableWithAggregatesFilter
  status: Enumlab_documents_status_enumWithAggregatesFilter
}

input Lab_documentsUpdateInput {
  analysis_results: Analysis_resultsUpdateManyWithoutLab_documentsNestedInput
  completed_at: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  ctscan_results: Ctscan_resultsUpdateManyWithoutLab_documentsNestedInput
  id: StringFieldUpdateOperationsInput
  lab_attachments: Lab_attachmentsUpdateManyWithoutLab_documentsNestedInput
  lab_requests: Lab_requestsUpdateOneWithoutLab_documentsNestedInput
  lab_results: Lab_resultsUpdateManyWithoutLab_documentsNestedInput
  laboratories: LaboratoriesUpdateOneWithoutLab_documentsNestedInput
  notes: NullableStringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutLab_documentsNestedInput
  requested_at: DateTimeFieldUpdateOperationsInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumlab_documents_status_enumFieldUpdateOperationsInput
  xray_results: Xray_resultsUpdateManyWithoutLab_documentsNestedInput
}

input Lab_documentsUpdateManyMutationInput {
  completed_at: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  requested_at: DateTimeFieldUpdateOperationsInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumlab_documents_status_enumFieldUpdateOperationsInput
}

input Lab_documentsUpdateManyWithWhereWithoutLab_requestsInput {
  data: Lab_documentsUpdateManyMutationInput!
  where: Lab_documentsScalarWhereInput!
}

input Lab_documentsUpdateManyWithWhereWithoutLaboratoriesInput {
  data: Lab_documentsUpdateManyMutationInput!
  where: Lab_documentsScalarWhereInput!
}

input Lab_documentsUpdateManyWithWhereWithoutPatientsInput {
  data: Lab_documentsUpdateManyMutationInput!
  where: Lab_documentsScalarWhereInput!
}

input Lab_documentsUpdateManyWithoutLab_requestsNestedInput {
  connect: [Lab_documentsWhereUniqueInput!]
  connectOrCreate: [Lab_documentsCreateOrConnectWithoutLab_requestsInput!]
  create: [Lab_documentsCreateWithoutLab_requestsInput!]
  createMany: Lab_documentsCreateManyLab_requestsInputEnvelope
  delete: [Lab_documentsWhereUniqueInput!]
  deleteMany: [Lab_documentsScalarWhereInput!]
  disconnect: [Lab_documentsWhereUniqueInput!]
  set: [Lab_documentsWhereUniqueInput!]
  update: [Lab_documentsUpdateWithWhereUniqueWithoutLab_requestsInput!]
  updateMany: [Lab_documentsUpdateManyWithWhereWithoutLab_requestsInput!]
  upsert: [Lab_documentsUpsertWithWhereUniqueWithoutLab_requestsInput!]
}

input Lab_documentsUpdateManyWithoutLaboratoriesNestedInput {
  connect: [Lab_documentsWhereUniqueInput!]
  connectOrCreate: [Lab_documentsCreateOrConnectWithoutLaboratoriesInput!]
  create: [Lab_documentsCreateWithoutLaboratoriesInput!]
  createMany: Lab_documentsCreateManyLaboratoriesInputEnvelope
  delete: [Lab_documentsWhereUniqueInput!]
  deleteMany: [Lab_documentsScalarWhereInput!]
  disconnect: [Lab_documentsWhereUniqueInput!]
  set: [Lab_documentsWhereUniqueInput!]
  update: [Lab_documentsUpdateWithWhereUniqueWithoutLaboratoriesInput!]
  updateMany: [Lab_documentsUpdateManyWithWhereWithoutLaboratoriesInput!]
  upsert: [Lab_documentsUpsertWithWhereUniqueWithoutLaboratoriesInput!]
}

input Lab_documentsUpdateManyWithoutPatientsNestedInput {
  connect: [Lab_documentsWhereUniqueInput!]
  connectOrCreate: [Lab_documentsCreateOrConnectWithoutPatientsInput!]
  create: [Lab_documentsCreateWithoutPatientsInput!]
  createMany: Lab_documentsCreateManyPatientsInputEnvelope
  delete: [Lab_documentsWhereUniqueInput!]
  deleteMany: [Lab_documentsScalarWhereInput!]
  disconnect: [Lab_documentsWhereUniqueInput!]
  set: [Lab_documentsWhereUniqueInput!]
  update: [Lab_documentsUpdateWithWhereUniqueWithoutPatientsInput!]
  updateMany: [Lab_documentsUpdateManyWithWhereWithoutPatientsInput!]
  upsert: [Lab_documentsUpsertWithWhereUniqueWithoutPatientsInput!]
}

input Lab_documentsUpdateOneRequiredWithoutAnalysis_resultsNestedInput {
  connect: Lab_documentsWhereUniqueInput
  connectOrCreate: Lab_documentsCreateOrConnectWithoutAnalysis_resultsInput
  create: Lab_documentsCreateWithoutAnalysis_resultsInput
  update: Lab_documentsUpdateToOneWithWhereWithoutAnalysis_resultsInput
  upsert: Lab_documentsUpsertWithoutAnalysis_resultsInput
}

input Lab_documentsUpdateOneRequiredWithoutCtscan_resultsNestedInput {
  connect: Lab_documentsWhereUniqueInput
  connectOrCreate: Lab_documentsCreateOrConnectWithoutCtscan_resultsInput
  create: Lab_documentsCreateWithoutCtscan_resultsInput
  update: Lab_documentsUpdateToOneWithWhereWithoutCtscan_resultsInput
  upsert: Lab_documentsUpsertWithoutCtscan_resultsInput
}

input Lab_documentsUpdateOneRequiredWithoutLab_attachmentsNestedInput {
  connect: Lab_documentsWhereUniqueInput
  connectOrCreate: Lab_documentsCreateOrConnectWithoutLab_attachmentsInput
  create: Lab_documentsCreateWithoutLab_attachmentsInput
  update: Lab_documentsUpdateToOneWithWhereWithoutLab_attachmentsInput
  upsert: Lab_documentsUpsertWithoutLab_attachmentsInput
}

input Lab_documentsUpdateOneRequiredWithoutLab_resultsNestedInput {
  connect: Lab_documentsWhereUniqueInput
  connectOrCreate: Lab_documentsCreateOrConnectWithoutLab_resultsInput
  create: Lab_documentsCreateWithoutLab_resultsInput
  update: Lab_documentsUpdateToOneWithWhereWithoutLab_resultsInput
  upsert: Lab_documentsUpsertWithoutLab_resultsInput
}

input Lab_documentsUpdateOneRequiredWithoutXray_resultsNestedInput {
  connect: Lab_documentsWhereUniqueInput
  connectOrCreate: Lab_documentsCreateOrConnectWithoutXray_resultsInput
  create: Lab_documentsCreateWithoutXray_resultsInput
  update: Lab_documentsUpdateToOneWithWhereWithoutXray_resultsInput
  upsert: Lab_documentsUpsertWithoutXray_resultsInput
}

input Lab_documentsUpdateToOneWithWhereWithoutAnalysis_resultsInput {
  data: Lab_documentsUpdateWithoutAnalysis_resultsInput!
  where: Lab_documentsWhereInput
}

input Lab_documentsUpdateToOneWithWhereWithoutCtscan_resultsInput {
  data: Lab_documentsUpdateWithoutCtscan_resultsInput!
  where: Lab_documentsWhereInput
}

input Lab_documentsUpdateToOneWithWhereWithoutLab_attachmentsInput {
  data: Lab_documentsUpdateWithoutLab_attachmentsInput!
  where: Lab_documentsWhereInput
}

input Lab_documentsUpdateToOneWithWhereWithoutLab_resultsInput {
  data: Lab_documentsUpdateWithoutLab_resultsInput!
  where: Lab_documentsWhereInput
}

input Lab_documentsUpdateToOneWithWhereWithoutXray_resultsInput {
  data: Lab_documentsUpdateWithoutXray_resultsInput!
  where: Lab_documentsWhereInput
}

input Lab_documentsUpdateWithWhereUniqueWithoutLab_requestsInput {
  data: Lab_documentsUpdateWithoutLab_requestsInput!
  where: Lab_documentsWhereUniqueInput!
}

input Lab_documentsUpdateWithWhereUniqueWithoutLaboratoriesInput {
  data: Lab_documentsUpdateWithoutLaboratoriesInput!
  where: Lab_documentsWhereUniqueInput!
}

input Lab_documentsUpdateWithWhereUniqueWithoutPatientsInput {
  data: Lab_documentsUpdateWithoutPatientsInput!
  where: Lab_documentsWhereUniqueInput!
}

input Lab_documentsUpdateWithoutAnalysis_resultsInput {
  completed_at: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  ctscan_results: Ctscan_resultsUpdateManyWithoutLab_documentsNestedInput
  id: StringFieldUpdateOperationsInput
  lab_attachments: Lab_attachmentsUpdateManyWithoutLab_documentsNestedInput
  lab_requests: Lab_requestsUpdateOneWithoutLab_documentsNestedInput
  lab_results: Lab_resultsUpdateManyWithoutLab_documentsNestedInput
  laboratories: LaboratoriesUpdateOneWithoutLab_documentsNestedInput
  notes: NullableStringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutLab_documentsNestedInput
  requested_at: DateTimeFieldUpdateOperationsInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumlab_documents_status_enumFieldUpdateOperationsInput
  xray_results: Xray_resultsUpdateManyWithoutLab_documentsNestedInput
}

input Lab_documentsUpdateWithoutCtscan_resultsInput {
  analysis_results: Analysis_resultsUpdateManyWithoutLab_documentsNestedInput
  completed_at: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_attachments: Lab_attachmentsUpdateManyWithoutLab_documentsNestedInput
  lab_requests: Lab_requestsUpdateOneWithoutLab_documentsNestedInput
  lab_results: Lab_resultsUpdateManyWithoutLab_documentsNestedInput
  laboratories: LaboratoriesUpdateOneWithoutLab_documentsNestedInput
  notes: NullableStringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutLab_documentsNestedInput
  requested_at: DateTimeFieldUpdateOperationsInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumlab_documents_status_enumFieldUpdateOperationsInput
  xray_results: Xray_resultsUpdateManyWithoutLab_documentsNestedInput
}

input Lab_documentsUpdateWithoutLab_attachmentsInput {
  analysis_results: Analysis_resultsUpdateManyWithoutLab_documentsNestedInput
  completed_at: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  ctscan_results: Ctscan_resultsUpdateManyWithoutLab_documentsNestedInput
  id: StringFieldUpdateOperationsInput
  lab_requests: Lab_requestsUpdateOneWithoutLab_documentsNestedInput
  lab_results: Lab_resultsUpdateManyWithoutLab_documentsNestedInput
  laboratories: LaboratoriesUpdateOneWithoutLab_documentsNestedInput
  notes: NullableStringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutLab_documentsNestedInput
  requested_at: DateTimeFieldUpdateOperationsInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumlab_documents_status_enumFieldUpdateOperationsInput
  xray_results: Xray_resultsUpdateManyWithoutLab_documentsNestedInput
}

input Lab_documentsUpdateWithoutLab_requestsInput {
  analysis_results: Analysis_resultsUpdateManyWithoutLab_documentsNestedInput
  completed_at: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  ctscan_results: Ctscan_resultsUpdateManyWithoutLab_documentsNestedInput
  id: StringFieldUpdateOperationsInput
  lab_attachments: Lab_attachmentsUpdateManyWithoutLab_documentsNestedInput
  lab_results: Lab_resultsUpdateManyWithoutLab_documentsNestedInput
  laboratories: LaboratoriesUpdateOneWithoutLab_documentsNestedInput
  notes: NullableStringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutLab_documentsNestedInput
  requested_at: DateTimeFieldUpdateOperationsInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumlab_documents_status_enumFieldUpdateOperationsInput
  xray_results: Xray_resultsUpdateManyWithoutLab_documentsNestedInput
}

input Lab_documentsUpdateWithoutLab_resultsInput {
  analysis_results: Analysis_resultsUpdateManyWithoutLab_documentsNestedInput
  completed_at: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  ctscan_results: Ctscan_resultsUpdateManyWithoutLab_documentsNestedInput
  id: StringFieldUpdateOperationsInput
  lab_attachments: Lab_attachmentsUpdateManyWithoutLab_documentsNestedInput
  lab_requests: Lab_requestsUpdateOneWithoutLab_documentsNestedInput
  laboratories: LaboratoriesUpdateOneWithoutLab_documentsNestedInput
  notes: NullableStringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutLab_documentsNestedInput
  requested_at: DateTimeFieldUpdateOperationsInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumlab_documents_status_enumFieldUpdateOperationsInput
  xray_results: Xray_resultsUpdateManyWithoutLab_documentsNestedInput
}

input Lab_documentsUpdateWithoutLaboratoriesInput {
  analysis_results: Analysis_resultsUpdateManyWithoutLab_documentsNestedInput
  completed_at: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  ctscan_results: Ctscan_resultsUpdateManyWithoutLab_documentsNestedInput
  id: StringFieldUpdateOperationsInput
  lab_attachments: Lab_attachmentsUpdateManyWithoutLab_documentsNestedInput
  lab_requests: Lab_requestsUpdateOneWithoutLab_documentsNestedInput
  lab_results: Lab_resultsUpdateManyWithoutLab_documentsNestedInput
  notes: NullableStringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutLab_documentsNestedInput
  requested_at: DateTimeFieldUpdateOperationsInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumlab_documents_status_enumFieldUpdateOperationsInput
  xray_results: Xray_resultsUpdateManyWithoutLab_documentsNestedInput
}

input Lab_documentsUpdateWithoutPatientsInput {
  analysis_results: Analysis_resultsUpdateManyWithoutLab_documentsNestedInput
  completed_at: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  ctscan_results: Ctscan_resultsUpdateManyWithoutLab_documentsNestedInput
  id: StringFieldUpdateOperationsInput
  lab_attachments: Lab_attachmentsUpdateManyWithoutLab_documentsNestedInput
  lab_requests: Lab_requestsUpdateOneWithoutLab_documentsNestedInput
  lab_results: Lab_resultsUpdateManyWithoutLab_documentsNestedInput
  laboratories: LaboratoriesUpdateOneWithoutLab_documentsNestedInput
  notes: NullableStringFieldUpdateOperationsInput
  requested_at: DateTimeFieldUpdateOperationsInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumlab_documents_status_enumFieldUpdateOperationsInput
  xray_results: Xray_resultsUpdateManyWithoutLab_documentsNestedInput
}

input Lab_documentsUpdateWithoutXray_resultsInput {
  analysis_results: Analysis_resultsUpdateManyWithoutLab_documentsNestedInput
  completed_at: NullableDateTimeFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  ctscan_results: Ctscan_resultsUpdateManyWithoutLab_documentsNestedInput
  id: StringFieldUpdateOperationsInput
  lab_attachments: Lab_attachmentsUpdateManyWithoutLab_documentsNestedInput
  lab_requests: Lab_requestsUpdateOneWithoutLab_documentsNestedInput
  lab_results: Lab_resultsUpdateManyWithoutLab_documentsNestedInput
  laboratories: LaboratoriesUpdateOneWithoutLab_documentsNestedInput
  notes: NullableStringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutLab_documentsNestedInput
  requested_at: DateTimeFieldUpdateOperationsInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumlab_documents_status_enumFieldUpdateOperationsInput
}

input Lab_documentsUpsertWithWhereUniqueWithoutLab_requestsInput {
  create: Lab_documentsCreateWithoutLab_requestsInput!
  update: Lab_documentsUpdateWithoutLab_requestsInput!
  where: Lab_documentsWhereUniqueInput!
}

input Lab_documentsUpsertWithWhereUniqueWithoutLaboratoriesInput {
  create: Lab_documentsCreateWithoutLaboratoriesInput!
  update: Lab_documentsUpdateWithoutLaboratoriesInput!
  where: Lab_documentsWhereUniqueInput!
}

input Lab_documentsUpsertWithWhereUniqueWithoutPatientsInput {
  create: Lab_documentsCreateWithoutPatientsInput!
  update: Lab_documentsUpdateWithoutPatientsInput!
  where: Lab_documentsWhereUniqueInput!
}

input Lab_documentsUpsertWithoutAnalysis_resultsInput {
  create: Lab_documentsCreateWithoutAnalysis_resultsInput!
  update: Lab_documentsUpdateWithoutAnalysis_resultsInput!
  where: Lab_documentsWhereInput
}

input Lab_documentsUpsertWithoutCtscan_resultsInput {
  create: Lab_documentsCreateWithoutCtscan_resultsInput!
  update: Lab_documentsUpdateWithoutCtscan_resultsInput!
  where: Lab_documentsWhereInput
}

input Lab_documentsUpsertWithoutLab_attachmentsInput {
  create: Lab_documentsCreateWithoutLab_attachmentsInput!
  update: Lab_documentsUpdateWithoutLab_attachmentsInput!
  where: Lab_documentsWhereInput
}

input Lab_documentsUpsertWithoutLab_resultsInput {
  create: Lab_documentsCreateWithoutLab_resultsInput!
  update: Lab_documentsUpdateWithoutLab_resultsInput!
  where: Lab_documentsWhereInput
}

input Lab_documentsUpsertWithoutXray_resultsInput {
  create: Lab_documentsCreateWithoutXray_resultsInput!
  update: Lab_documentsUpdateWithoutXray_resultsInput!
  where: Lab_documentsWhereInput
}

input Lab_documentsWhereInput {
  AND: [Lab_documentsWhereInput!]
  NOT: [Lab_documentsWhereInput!]
  OR: [Lab_documentsWhereInput!]
  analysis_results: Analysis_resultsListRelationFilter
  completed_at: DateTimeNullableFilter
  created_at: DateTimeFilter
  ctscan_results: Ctscan_resultsListRelationFilter
  id: UuidFilter
  lab_attachments: Lab_attachmentsListRelationFilter
  lab_request_id: UuidNullableFilter
  lab_requests: Lab_requestsNullableRelationFilter
  lab_results: Lab_resultsListRelationFilter
  laboratories: LaboratoriesNullableRelationFilter
  laboratory_id: UuidNullableFilter
  notes: StringNullableFilter
  patient_id: UuidFilter
  patients: PatientsRelationFilter
  requested_at: DateTimeFilter
  section: StringNullableFilter
  status: Enumlab_documents_status_enumFilter
  xray_results: Xray_resultsListRelationFilter
}

input Lab_documentsWhereUniqueInput {
  AND: [Lab_documentsWhereInput!]
  NOT: [Lab_documentsWhereInput!]
  OR: [Lab_documentsWhereInput!]
  analysis_results: Analysis_resultsListRelationFilter
  completed_at: DateTimeNullableFilter
  created_at: DateTimeFilter
  ctscan_results: Ctscan_resultsListRelationFilter
  id: String
  lab_attachments: Lab_attachmentsListRelationFilter
  lab_request_id: UuidNullableFilter
  lab_requests: Lab_requestsNullableRelationFilter
  lab_results: Lab_resultsListRelationFilter
  laboratories: LaboratoriesNullableRelationFilter
  laboratory_id: UuidNullableFilter
  notes: StringNullableFilter
  patient_id: UuidFilter
  patients: PatientsRelationFilter
  requested_at: DateTimeFilter
  section: StringNullableFilter
  status: Enumlab_documents_status_enumFilter
  xray_results: Xray_resultsListRelationFilter
}

type Lab_requests {
  _count: Lab_requestsCount
  consultations(cursor: ConsultationsWhereUniqueInput, distinct: [ConsultationsScalarFieldEnum!], orderBy: [ConsultationsOrderByWithRelationInput!], skip: Int, take: Int, where: ConsultationsWhereInput): [Consultations!]!
  description: String
  doctor_id: String
  doctors(where: DoctorsWhereInput): Doctors
  id: String!
  lab_documents(cursor: Lab_documentsWhereUniqueInput, distinct: [Lab_documentsScalarFieldEnum!], orderBy: [Lab_documentsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_documentsWhereInput): [Lab_documents!]!
  patient_id: String!
  patients: Patients!
  priority: lab_requests_priority_enum
  type: String!
}

type Lab_requestsCount {
  consultations(where: ConsultationsWhereInput): Int!
  lab_documents(where: Lab_documentsWhereInput): Int!
}

type Lab_requestsCountAggregate {
  _all: Int!
  description: Int!
  doctor_id: Int!
  id: Int!
  patient_id: Int!
  priority: Int!
  type: Int!
}

input Lab_requestsCountOrderByAggregateInput {
  description: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  patient_id: SortOrder
  priority: SortOrder
  type: SortOrder
}

input Lab_requestsCreateInput {
  consultations: ConsultationsCreateNestedManyWithoutLab_requestsInput
  description: String
  doctors: DoctorsCreateNestedOneWithoutLab_requestsInput
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutLab_requestsInput
  patients: PatientsCreateNestedOneWithoutLab_requestsInput!
  priority: lab_requests_priority_enum
  type: String!
}

input Lab_requestsCreateManyDoctorsInput {
  description: String
  id: String
  patient_id: String!
  priority: lab_requests_priority_enum
  type: String!
}

input Lab_requestsCreateManyDoctorsInputEnvelope {
  data: [Lab_requestsCreateManyDoctorsInput!]!
  skipDuplicates: Boolean
}

input Lab_requestsCreateManyInput {
  description: String
  doctor_id: String
  id: String
  patient_id: String!
  priority: lab_requests_priority_enum
  type: String!
}

input Lab_requestsCreateManyPatientsInput {
  description: String
  doctor_id: String
  id: String
  priority: lab_requests_priority_enum
  type: String!
}

input Lab_requestsCreateManyPatientsInputEnvelope {
  data: [Lab_requestsCreateManyPatientsInput!]!
  skipDuplicates: Boolean
}

input Lab_requestsCreateNestedManyWithoutConsultationsInput {
  connect: [Lab_requestsWhereUniqueInput!]
  connectOrCreate: [Lab_requestsCreateOrConnectWithoutConsultationsInput!]
  create: [Lab_requestsCreateWithoutConsultationsInput!]
}

input Lab_requestsCreateNestedManyWithoutDoctorsInput {
  connect: [Lab_requestsWhereUniqueInput!]
  connectOrCreate: [Lab_requestsCreateOrConnectWithoutDoctorsInput!]
  create: [Lab_requestsCreateWithoutDoctorsInput!]
  createMany: Lab_requestsCreateManyDoctorsInputEnvelope
}

input Lab_requestsCreateNestedManyWithoutPatientsInput {
  connect: [Lab_requestsWhereUniqueInput!]
  connectOrCreate: [Lab_requestsCreateOrConnectWithoutPatientsInput!]
  create: [Lab_requestsCreateWithoutPatientsInput!]
  createMany: Lab_requestsCreateManyPatientsInputEnvelope
}

input Lab_requestsCreateNestedOneWithoutLab_documentsInput {
  connect: Lab_requestsWhereUniqueInput
  connectOrCreate: Lab_requestsCreateOrConnectWithoutLab_documentsInput
  create: Lab_requestsCreateWithoutLab_documentsInput
}

input Lab_requestsCreateOrConnectWithoutConsultationsInput {
  create: Lab_requestsCreateWithoutConsultationsInput!
  where: Lab_requestsWhereUniqueInput!
}

input Lab_requestsCreateOrConnectWithoutDoctorsInput {
  create: Lab_requestsCreateWithoutDoctorsInput!
  where: Lab_requestsWhereUniqueInput!
}

input Lab_requestsCreateOrConnectWithoutLab_documentsInput {
  create: Lab_requestsCreateWithoutLab_documentsInput!
  where: Lab_requestsWhereUniqueInput!
}

input Lab_requestsCreateOrConnectWithoutPatientsInput {
  create: Lab_requestsCreateWithoutPatientsInput!
  where: Lab_requestsWhereUniqueInput!
}

input Lab_requestsCreateWithoutConsultationsInput {
  description: String
  doctors: DoctorsCreateNestedOneWithoutLab_requestsInput
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutLab_requestsInput
  patients: PatientsCreateNestedOneWithoutLab_requestsInput!
  priority: lab_requests_priority_enum
  type: String!
}

input Lab_requestsCreateWithoutDoctorsInput {
  consultations: ConsultationsCreateNestedManyWithoutLab_requestsInput
  description: String
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutLab_requestsInput
  patients: PatientsCreateNestedOneWithoutLab_requestsInput!
  priority: lab_requests_priority_enum
  type: String!
}

input Lab_requestsCreateWithoutLab_documentsInput {
  consultations: ConsultationsCreateNestedManyWithoutLab_requestsInput
  description: String
  doctors: DoctorsCreateNestedOneWithoutLab_requestsInput
  id: String
  patients: PatientsCreateNestedOneWithoutLab_requestsInput!
  priority: lab_requests_priority_enum
  type: String!
}

input Lab_requestsCreateWithoutPatientsInput {
  consultations: ConsultationsCreateNestedManyWithoutLab_requestsInput
  description: String
  doctors: DoctorsCreateNestedOneWithoutLab_requestsInput
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutLab_requestsInput
  priority: lab_requests_priority_enum
  type: String!
}

type Lab_requestsGroupBy {
  _count: Lab_requestsCountAggregate
  _max: Lab_requestsMaxAggregate
  _min: Lab_requestsMinAggregate
  description: String
  doctor_id: String
  id: String!
  patient_id: String!
  priority: lab_requests_priority_enum
  type: String!
}

input Lab_requestsListRelationFilter {
  every: Lab_requestsWhereInput
  none: Lab_requestsWhereInput
  some: Lab_requestsWhereInput
}

type Lab_requestsMaxAggregate {
  description: String
  doctor_id: String
  id: String
  patient_id: String
  priority: lab_requests_priority_enum
  type: String
}

input Lab_requestsMaxOrderByAggregateInput {
  description: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  patient_id: SortOrder
  priority: SortOrder
  type: SortOrder
}

type Lab_requestsMinAggregate {
  description: String
  doctor_id: String
  id: String
  patient_id: String
  priority: lab_requests_priority_enum
  type: String
}

input Lab_requestsMinOrderByAggregateInput {
  description: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  patient_id: SortOrder
  priority: SortOrder
  type: SortOrder
}

input Lab_requestsNullableRelationFilter {
  is: Lab_requestsWhereInput
  isNot: Lab_requestsWhereInput
}

input Lab_requestsOrderByRelationAggregateInput {
  _count: SortOrder
}

input Lab_requestsOrderByWithAggregationInput {
  _count: Lab_requestsCountOrderByAggregateInput
  _max: Lab_requestsMaxOrderByAggregateInput
  _min: Lab_requestsMinOrderByAggregateInput
  description: SortOrderInput
  doctor_id: SortOrderInput
  id: SortOrder
  patient_id: SortOrder
  priority: SortOrderInput
  type: SortOrder
}

input Lab_requestsOrderByWithRelationInput {
  consultations: ConsultationsOrderByRelationAggregateInput
  description: SortOrderInput
  doctor_id: SortOrderInput
  doctors: DoctorsOrderByWithRelationInput
  id: SortOrder
  lab_documents: Lab_documentsOrderByRelationAggregateInput
  patient_id: SortOrder
  patients: PatientsOrderByWithRelationInput
  priority: SortOrderInput
  type: SortOrder
}

enum Lab_requestsScalarFieldEnum {
  description
  doctor_id
  id
  patient_id
  priority
  type
}

input Lab_requestsScalarWhereInput {
  AND: [Lab_requestsScalarWhereInput!]
  NOT: [Lab_requestsScalarWhereInput!]
  OR: [Lab_requestsScalarWhereInput!]
  description: StringNullableFilter
  doctor_id: UuidNullableFilter
  id: UuidFilter
  patient_id: UuidFilter
  priority: Enumlab_requests_priority_enumNullableFilter
  type: StringFilter
}

input Lab_requestsScalarWhereWithAggregatesInput {
  AND: [Lab_requestsScalarWhereWithAggregatesInput!]
  NOT: [Lab_requestsScalarWhereWithAggregatesInput!]
  OR: [Lab_requestsScalarWhereWithAggregatesInput!]
  description: StringNullableWithAggregatesFilter
  doctor_id: UuidNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  patient_id: UuidWithAggregatesFilter
  priority: Enumlab_requests_priority_enumNullableWithAggregatesFilter
  type: StringWithAggregatesFilter
}

input Lab_requestsUpdateInput {
  consultations: ConsultationsUpdateManyWithoutLab_requestsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutLab_requestsNestedInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutLab_requestsNestedInput
  patients: PatientsUpdateOneRequiredWithoutLab_requestsNestedInput
  priority: NullableEnumlab_requests_priority_enumFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input Lab_requestsUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  priority: NullableEnumlab_requests_priority_enumFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input Lab_requestsUpdateManyWithWhereWithoutConsultationsInput {
  data: Lab_requestsUpdateManyMutationInput!
  where: Lab_requestsScalarWhereInput!
}

input Lab_requestsUpdateManyWithWhereWithoutDoctorsInput {
  data: Lab_requestsUpdateManyMutationInput!
  where: Lab_requestsScalarWhereInput!
}

input Lab_requestsUpdateManyWithWhereWithoutPatientsInput {
  data: Lab_requestsUpdateManyMutationInput!
  where: Lab_requestsScalarWhereInput!
}

input Lab_requestsUpdateManyWithoutConsultationsNestedInput {
  connect: [Lab_requestsWhereUniqueInput!]
  connectOrCreate: [Lab_requestsCreateOrConnectWithoutConsultationsInput!]
  create: [Lab_requestsCreateWithoutConsultationsInput!]
  delete: [Lab_requestsWhereUniqueInput!]
  deleteMany: [Lab_requestsScalarWhereInput!]
  disconnect: [Lab_requestsWhereUniqueInput!]
  set: [Lab_requestsWhereUniqueInput!]
  update: [Lab_requestsUpdateWithWhereUniqueWithoutConsultationsInput!]
  updateMany: [Lab_requestsUpdateManyWithWhereWithoutConsultationsInput!]
  upsert: [Lab_requestsUpsertWithWhereUniqueWithoutConsultationsInput!]
}

input Lab_requestsUpdateManyWithoutDoctorsNestedInput {
  connect: [Lab_requestsWhereUniqueInput!]
  connectOrCreate: [Lab_requestsCreateOrConnectWithoutDoctorsInput!]
  create: [Lab_requestsCreateWithoutDoctorsInput!]
  createMany: Lab_requestsCreateManyDoctorsInputEnvelope
  delete: [Lab_requestsWhereUniqueInput!]
  deleteMany: [Lab_requestsScalarWhereInput!]
  disconnect: [Lab_requestsWhereUniqueInput!]
  set: [Lab_requestsWhereUniqueInput!]
  update: [Lab_requestsUpdateWithWhereUniqueWithoutDoctorsInput!]
  updateMany: [Lab_requestsUpdateManyWithWhereWithoutDoctorsInput!]
  upsert: [Lab_requestsUpsertWithWhereUniqueWithoutDoctorsInput!]
}

input Lab_requestsUpdateManyWithoutPatientsNestedInput {
  connect: [Lab_requestsWhereUniqueInput!]
  connectOrCreate: [Lab_requestsCreateOrConnectWithoutPatientsInput!]
  create: [Lab_requestsCreateWithoutPatientsInput!]
  createMany: Lab_requestsCreateManyPatientsInputEnvelope
  delete: [Lab_requestsWhereUniqueInput!]
  deleteMany: [Lab_requestsScalarWhereInput!]
  disconnect: [Lab_requestsWhereUniqueInput!]
  set: [Lab_requestsWhereUniqueInput!]
  update: [Lab_requestsUpdateWithWhereUniqueWithoutPatientsInput!]
  updateMany: [Lab_requestsUpdateManyWithWhereWithoutPatientsInput!]
  upsert: [Lab_requestsUpsertWithWhereUniqueWithoutPatientsInput!]
}

input Lab_requestsUpdateOneWithoutLab_documentsNestedInput {
  connect: Lab_requestsWhereUniqueInput
  connectOrCreate: Lab_requestsCreateOrConnectWithoutLab_documentsInput
  create: Lab_requestsCreateWithoutLab_documentsInput
  delete: Lab_requestsWhereInput
  disconnect: Lab_requestsWhereInput
  update: Lab_requestsUpdateToOneWithWhereWithoutLab_documentsInput
  upsert: Lab_requestsUpsertWithoutLab_documentsInput
}

input Lab_requestsUpdateToOneWithWhereWithoutLab_documentsInput {
  data: Lab_requestsUpdateWithoutLab_documentsInput!
  where: Lab_requestsWhereInput
}

input Lab_requestsUpdateWithWhereUniqueWithoutConsultationsInput {
  data: Lab_requestsUpdateWithoutConsultationsInput!
  where: Lab_requestsWhereUniqueInput!
}

input Lab_requestsUpdateWithWhereUniqueWithoutDoctorsInput {
  data: Lab_requestsUpdateWithoutDoctorsInput!
  where: Lab_requestsWhereUniqueInput!
}

input Lab_requestsUpdateWithWhereUniqueWithoutPatientsInput {
  data: Lab_requestsUpdateWithoutPatientsInput!
  where: Lab_requestsWhereUniqueInput!
}

input Lab_requestsUpdateWithoutConsultationsInput {
  description: NullableStringFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutLab_requestsNestedInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutLab_requestsNestedInput
  patients: PatientsUpdateOneRequiredWithoutLab_requestsNestedInput
  priority: NullableEnumlab_requests_priority_enumFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input Lab_requestsUpdateWithoutDoctorsInput {
  consultations: ConsultationsUpdateManyWithoutLab_requestsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutLab_requestsNestedInput
  patients: PatientsUpdateOneRequiredWithoutLab_requestsNestedInput
  priority: NullableEnumlab_requests_priority_enumFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input Lab_requestsUpdateWithoutLab_documentsInput {
  consultations: ConsultationsUpdateManyWithoutLab_requestsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutLab_requestsNestedInput
  id: StringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutLab_requestsNestedInput
  priority: NullableEnumlab_requests_priority_enumFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input Lab_requestsUpdateWithoutPatientsInput {
  consultations: ConsultationsUpdateManyWithoutLab_requestsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutLab_requestsNestedInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutLab_requestsNestedInput
  priority: NullableEnumlab_requests_priority_enumFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input Lab_requestsUpsertWithWhereUniqueWithoutConsultationsInput {
  create: Lab_requestsCreateWithoutConsultationsInput!
  update: Lab_requestsUpdateWithoutConsultationsInput!
  where: Lab_requestsWhereUniqueInput!
}

input Lab_requestsUpsertWithWhereUniqueWithoutDoctorsInput {
  create: Lab_requestsCreateWithoutDoctorsInput!
  update: Lab_requestsUpdateWithoutDoctorsInput!
  where: Lab_requestsWhereUniqueInput!
}

input Lab_requestsUpsertWithWhereUniqueWithoutPatientsInput {
  create: Lab_requestsCreateWithoutPatientsInput!
  update: Lab_requestsUpdateWithoutPatientsInput!
  where: Lab_requestsWhereUniqueInput!
}

input Lab_requestsUpsertWithoutLab_documentsInput {
  create: Lab_requestsCreateWithoutLab_documentsInput!
  update: Lab_requestsUpdateWithoutLab_documentsInput!
  where: Lab_requestsWhereInput
}

input Lab_requestsWhereInput {
  AND: [Lab_requestsWhereInput!]
  NOT: [Lab_requestsWhereInput!]
  OR: [Lab_requestsWhereInput!]
  consultations: ConsultationsListRelationFilter
  description: StringNullableFilter
  doctor_id: UuidNullableFilter
  doctors: DoctorsNullableRelationFilter
  id: UuidFilter
  lab_documents: Lab_documentsListRelationFilter
  patient_id: UuidFilter
  patients: PatientsRelationFilter
  priority: Enumlab_requests_priority_enumNullableFilter
  type: StringFilter
}

input Lab_requestsWhereUniqueInput {
  AND: [Lab_requestsWhereInput!]
  NOT: [Lab_requestsWhereInput!]
  OR: [Lab_requestsWhereInput!]
  consultations: ConsultationsListRelationFilter
  description: StringNullableFilter
  doctor_id: UuidNullableFilter
  doctors: DoctorsNullableRelationFilter
  id: String
  lab_documents: Lab_documentsListRelationFilter
  patient_id: UuidFilter
  patients: PatientsRelationFilter
  priority: Enumlab_requests_priority_enumNullableFilter
  type: StringFilter
}

type Lab_results {
  description: String
  id: String!
  is_abnormal: Boolean!
  lab_document_id: String!
  lab_documents: Lab_documents!
  result_type: lab_results_result_type_enum!
  title: String!
}

type Lab_resultsCountAggregate {
  _all: Int!
  description: Int!
  id: Int!
  is_abnormal: Int!
  lab_document_id: Int!
  result_type: Int!
  title: Int!
}

input Lab_resultsCountOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  result_type: SortOrder
  title: SortOrder
}

input Lab_resultsCreateInput {
  description: String
  id: String
  is_abnormal: Boolean!
  lab_documents: Lab_documentsCreateNestedOneWithoutLab_resultsInput!
  result_type: lab_results_result_type_enum!
  title: String!
}

input Lab_resultsCreateManyInput {
  description: String
  id: String
  is_abnormal: Boolean!
  lab_document_id: String!
  result_type: lab_results_result_type_enum!
  title: String!
}

input Lab_resultsCreateManyLab_documentsInput {
  description: String
  id: String
  is_abnormal: Boolean!
  result_type: lab_results_result_type_enum!
  title: String!
}

input Lab_resultsCreateManyLab_documentsInputEnvelope {
  data: [Lab_resultsCreateManyLab_documentsInput!]!
  skipDuplicates: Boolean
}

input Lab_resultsCreateNestedManyWithoutLab_documentsInput {
  connect: [Lab_resultsWhereUniqueInput!]
  connectOrCreate: [Lab_resultsCreateOrConnectWithoutLab_documentsInput!]
  create: [Lab_resultsCreateWithoutLab_documentsInput!]
  createMany: Lab_resultsCreateManyLab_documentsInputEnvelope
}

input Lab_resultsCreateOrConnectWithoutLab_documentsInput {
  create: Lab_resultsCreateWithoutLab_documentsInput!
  where: Lab_resultsWhereUniqueInput!
}

input Lab_resultsCreateWithoutLab_documentsInput {
  description: String
  id: String
  is_abnormal: Boolean!
  result_type: lab_results_result_type_enum!
  title: String!
}

type Lab_resultsGroupBy {
  _count: Lab_resultsCountAggregate
  _max: Lab_resultsMaxAggregate
  _min: Lab_resultsMinAggregate
  description: String
  id: String!
  is_abnormal: Boolean!
  lab_document_id: String!
  result_type: lab_results_result_type_enum!
  title: String!
}

input Lab_resultsListRelationFilter {
  every: Lab_resultsWhereInput
  none: Lab_resultsWhereInput
  some: Lab_resultsWhereInput
}

type Lab_resultsMaxAggregate {
  description: String
  id: String
  is_abnormal: Boolean
  lab_document_id: String
  result_type: lab_results_result_type_enum
  title: String
}

input Lab_resultsMaxOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  result_type: SortOrder
  title: SortOrder
}

type Lab_resultsMinAggregate {
  description: String
  id: String
  is_abnormal: Boolean
  lab_document_id: String
  result_type: lab_results_result_type_enum
  title: String
}

input Lab_resultsMinOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  result_type: SortOrder
  title: SortOrder
}

input Lab_resultsOrderByRelationAggregateInput {
  _count: SortOrder
}

input Lab_resultsOrderByWithAggregationInput {
  _count: Lab_resultsCountOrderByAggregateInput
  _max: Lab_resultsMaxOrderByAggregateInput
  _min: Lab_resultsMinOrderByAggregateInput
  description: SortOrderInput
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  result_type: SortOrder
  title: SortOrder
}

input Lab_resultsOrderByWithRelationInput {
  description: SortOrderInput
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  lab_documents: Lab_documentsOrderByWithRelationInput
  result_type: SortOrder
  title: SortOrder
}

enum Lab_resultsScalarFieldEnum {
  description
  id
  is_abnormal
  lab_document_id
  result_type
  title
}

input Lab_resultsScalarWhereInput {
  AND: [Lab_resultsScalarWhereInput!]
  NOT: [Lab_resultsScalarWhereInput!]
  OR: [Lab_resultsScalarWhereInput!]
  description: StringNullableFilter
  id: UuidFilter
  is_abnormal: BoolFilter
  lab_document_id: UuidFilter
  result_type: Enumlab_results_result_type_enumFilter
  title: StringFilter
}

input Lab_resultsScalarWhereWithAggregatesInput {
  AND: [Lab_resultsScalarWhereWithAggregatesInput!]
  NOT: [Lab_resultsScalarWhereWithAggregatesInput!]
  OR: [Lab_resultsScalarWhereWithAggregatesInput!]
  description: StringNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  is_abnormal: BoolWithAggregatesFilter
  lab_document_id: UuidWithAggregatesFilter
  result_type: Enumlab_results_result_type_enumWithAggregatesFilter
  title: StringWithAggregatesFilter
}

input Lab_resultsUpdateInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_abnormal: BoolFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateOneRequiredWithoutLab_resultsNestedInput
  result_type: Enumlab_results_result_type_enumFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input Lab_resultsUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_abnormal: BoolFieldUpdateOperationsInput
  result_type: Enumlab_results_result_type_enumFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input Lab_resultsUpdateManyWithWhereWithoutLab_documentsInput {
  data: Lab_resultsUpdateManyMutationInput!
  where: Lab_resultsScalarWhereInput!
}

input Lab_resultsUpdateManyWithoutLab_documentsNestedInput {
  connect: [Lab_resultsWhereUniqueInput!]
  connectOrCreate: [Lab_resultsCreateOrConnectWithoutLab_documentsInput!]
  create: [Lab_resultsCreateWithoutLab_documentsInput!]
  createMany: Lab_resultsCreateManyLab_documentsInputEnvelope
  delete: [Lab_resultsWhereUniqueInput!]
  deleteMany: [Lab_resultsScalarWhereInput!]
  disconnect: [Lab_resultsWhereUniqueInput!]
  set: [Lab_resultsWhereUniqueInput!]
  update: [Lab_resultsUpdateWithWhereUniqueWithoutLab_documentsInput!]
  updateMany: [Lab_resultsUpdateManyWithWhereWithoutLab_documentsInput!]
  upsert: [Lab_resultsUpsertWithWhereUniqueWithoutLab_documentsInput!]
}

input Lab_resultsUpdateWithWhereUniqueWithoutLab_documentsInput {
  data: Lab_resultsUpdateWithoutLab_documentsInput!
  where: Lab_resultsWhereUniqueInput!
}

input Lab_resultsUpdateWithoutLab_documentsInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_abnormal: BoolFieldUpdateOperationsInput
  result_type: Enumlab_results_result_type_enumFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input Lab_resultsUpsertWithWhereUniqueWithoutLab_documentsInput {
  create: Lab_resultsCreateWithoutLab_documentsInput!
  update: Lab_resultsUpdateWithoutLab_documentsInput!
  where: Lab_resultsWhereUniqueInput!
}

input Lab_resultsWhereInput {
  AND: [Lab_resultsWhereInput!]
  NOT: [Lab_resultsWhereInput!]
  OR: [Lab_resultsWhereInput!]
  description: StringNullableFilter
  id: UuidFilter
  is_abnormal: BoolFilter
  lab_document_id: UuidFilter
  lab_documents: Lab_documentsRelationFilter
  result_type: Enumlab_results_result_type_enumFilter
  title: StringFilter
}

input Lab_resultsWhereUniqueInput {
  AND: [Lab_resultsWhereInput!]
  NOT: [Lab_resultsWhereInput!]
  OR: [Lab_resultsWhereInput!]
  description: StringNullableFilter
  id: String
  is_abnormal: BoolFilter
  lab_document_id: UuidFilter
  lab_documents: Lab_documentsRelationFilter
  result_type: Enumlab_results_result_type_enumFilter
  title: StringFilter
}

type Laboratories {
  _count: LaboratoriesCount
  address: String
  email: String
  id: String!
  lab_documents(cursor: Lab_documentsWhereUniqueInput, distinct: [Lab_documentsScalarFieldEnum!], orderBy: [Lab_documentsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_documentsWhereInput): [Lab_documents!]!
  name: String!
  phone: String
}

type LaboratoriesCount {
  lab_documents(where: Lab_documentsWhereInput): Int!
}

type LaboratoriesCountAggregate {
  _all: Int!
  address: Int!
  email: Int!
  id: Int!
  name: Int!
  phone: Int!
}

input LaboratoriesCountOrderByAggregateInput {
  address: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
}

input LaboratoriesCreateInput {
  address: String
  email: String
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutLaboratoriesInput
  name: String!
  phone: String
}

input LaboratoriesCreateManyInput {
  address: String
  email: String
  id: String
  name: String!
  phone: String
}

input LaboratoriesCreateNestedOneWithoutLab_documentsInput {
  connect: LaboratoriesWhereUniqueInput
  connectOrCreate: LaboratoriesCreateOrConnectWithoutLab_documentsInput
  create: LaboratoriesCreateWithoutLab_documentsInput
}

input LaboratoriesCreateOrConnectWithoutLab_documentsInput {
  create: LaboratoriesCreateWithoutLab_documentsInput!
  where: LaboratoriesWhereUniqueInput!
}

input LaboratoriesCreateWithoutLab_documentsInput {
  address: String
  email: String
  id: String
  name: String!
  phone: String
}

type LaboratoriesGroupBy {
  _count: LaboratoriesCountAggregate
  _max: LaboratoriesMaxAggregate
  _min: LaboratoriesMinAggregate
  address: String
  email: String
  id: String!
  name: String!
  phone: String
}

type LaboratoriesMaxAggregate {
  address: String
  email: String
  id: String
  name: String
  phone: String
}

input LaboratoriesMaxOrderByAggregateInput {
  address: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
}

type LaboratoriesMinAggregate {
  address: String
  email: String
  id: String
  name: String
  phone: String
}

input LaboratoriesMinOrderByAggregateInput {
  address: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
}

input LaboratoriesNullableRelationFilter {
  is: LaboratoriesWhereInput
  isNot: LaboratoriesWhereInput
}

input LaboratoriesOrderByWithAggregationInput {
  _count: LaboratoriesCountOrderByAggregateInput
  _max: LaboratoriesMaxOrderByAggregateInput
  _min: LaboratoriesMinOrderByAggregateInput
  address: SortOrderInput
  email: SortOrderInput
  id: SortOrder
  name: SortOrder
  phone: SortOrderInput
}

input LaboratoriesOrderByWithRelationInput {
  address: SortOrderInput
  email: SortOrderInput
  id: SortOrder
  lab_documents: Lab_documentsOrderByRelationAggregateInput
  name: SortOrder
  phone: SortOrderInput
}

enum LaboratoriesScalarFieldEnum {
  address
  email
  id
  name
  phone
}

input LaboratoriesScalarWhereWithAggregatesInput {
  AND: [LaboratoriesScalarWhereWithAggregatesInput!]
  NOT: [LaboratoriesScalarWhereWithAggregatesInput!]
  OR: [LaboratoriesScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  name: StringWithAggregatesFilter
  phone: StringNullableWithAggregatesFilter
}

input LaboratoriesUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutLaboratoriesNestedInput
  name: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
}

input LaboratoriesUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
}

input LaboratoriesUpdateOneWithoutLab_documentsNestedInput {
  connect: LaboratoriesWhereUniqueInput
  connectOrCreate: LaboratoriesCreateOrConnectWithoutLab_documentsInput
  create: LaboratoriesCreateWithoutLab_documentsInput
  delete: LaboratoriesWhereInput
  disconnect: LaboratoriesWhereInput
  update: LaboratoriesUpdateToOneWithWhereWithoutLab_documentsInput
  upsert: LaboratoriesUpsertWithoutLab_documentsInput
}

input LaboratoriesUpdateToOneWithWhereWithoutLab_documentsInput {
  data: LaboratoriesUpdateWithoutLab_documentsInput!
  where: LaboratoriesWhereInput
}

input LaboratoriesUpdateWithoutLab_documentsInput {
  address: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
}

input LaboratoriesUpsertWithoutLab_documentsInput {
  create: LaboratoriesCreateWithoutLab_documentsInput!
  update: LaboratoriesUpdateWithoutLab_documentsInput!
  where: LaboratoriesWhereInput
}

input LaboratoriesWhereInput {
  AND: [LaboratoriesWhereInput!]
  NOT: [LaboratoriesWhereInput!]
  OR: [LaboratoriesWhereInput!]
  address: StringNullableFilter
  email: StringNullableFilter
  id: UuidFilter
  lab_documents: Lab_documentsListRelationFilter
  name: StringFilter
  phone: StringNullableFilter
}

input LaboratoriesWhereUniqueInput {
  AND: [LaboratoriesWhereInput!]
  NOT: [LaboratoriesWhereInput!]
  OR: [LaboratoriesWhereInput!]
  address: StringNullableFilter
  email: StringNullableFilter
  id: String
  lab_documents: Lab_documentsListRelationFilter
  name: StringFilter
  phone: StringNullableFilter
}

type Medications {
  dosage: String!
  duration: String!
  frequency: String!
  id: String!
  name: String!
  prescription_id: String!
  prescriptions: Prescriptions!
  quantity: Float!
}

type MedicationsAvgAggregate {
  quantity: Float
}

input MedicationsAvgOrderByAggregateInput {
  quantity: SortOrder
}

type MedicationsCountAggregate {
  _all: Int!
  dosage: Int!
  duration: Int!
  frequency: Int!
  id: Int!
  name: Int!
  prescription_id: Int!
  quantity: Int!
}

input MedicationsCountOrderByAggregateInput {
  dosage: SortOrder
  duration: SortOrder
  frequency: SortOrder
  id: SortOrder
  name: SortOrder
  prescription_id: SortOrder
  quantity: SortOrder
}

input MedicationsCreateInput {
  dosage: String!
  duration: String!
  frequency: String!
  id: String
  name: String!
  prescriptions: PrescriptionsCreateNestedOneWithoutMedicationsInput!
  quantity: Float!
}

input MedicationsCreateManyInput {
  dosage: String!
  duration: String!
  frequency: String!
  id: String
  name: String!
  prescription_id: String!
  quantity: Float!
}

input MedicationsCreateManyPrescriptionsInput {
  dosage: String!
  duration: String!
  frequency: String!
  id: String
  name: String!
  quantity: Float!
}

input MedicationsCreateManyPrescriptionsInputEnvelope {
  data: [MedicationsCreateManyPrescriptionsInput!]!
  skipDuplicates: Boolean
}

input MedicationsCreateNestedManyWithoutPrescriptionsInput {
  connect: [MedicationsWhereUniqueInput!]
  connectOrCreate: [MedicationsCreateOrConnectWithoutPrescriptionsInput!]
  create: [MedicationsCreateWithoutPrescriptionsInput!]
  createMany: MedicationsCreateManyPrescriptionsInputEnvelope
}

input MedicationsCreateOrConnectWithoutPrescriptionsInput {
  create: MedicationsCreateWithoutPrescriptionsInput!
  where: MedicationsWhereUniqueInput!
}

input MedicationsCreateWithoutPrescriptionsInput {
  dosage: String!
  duration: String!
  frequency: String!
  id: String
  name: String!
  quantity: Float!
}

type MedicationsGroupBy {
  _avg: MedicationsAvgAggregate
  _count: MedicationsCountAggregate
  _max: MedicationsMaxAggregate
  _min: MedicationsMinAggregate
  _sum: MedicationsSumAggregate
  dosage: String!
  duration: String!
  frequency: String!
  id: String!
  name: String!
  prescription_id: String!
  quantity: Float!
}

input MedicationsListRelationFilter {
  every: MedicationsWhereInput
  none: MedicationsWhereInput
  some: MedicationsWhereInput
}

type MedicationsMaxAggregate {
  dosage: String
  duration: String
  frequency: String
  id: String
  name: String
  prescription_id: String
  quantity: Float
}

input MedicationsMaxOrderByAggregateInput {
  dosage: SortOrder
  duration: SortOrder
  frequency: SortOrder
  id: SortOrder
  name: SortOrder
  prescription_id: SortOrder
  quantity: SortOrder
}

type MedicationsMinAggregate {
  dosage: String
  duration: String
  frequency: String
  id: String
  name: String
  prescription_id: String
  quantity: Float
}

input MedicationsMinOrderByAggregateInput {
  dosage: SortOrder
  duration: SortOrder
  frequency: SortOrder
  id: SortOrder
  name: SortOrder
  prescription_id: SortOrder
  quantity: SortOrder
}

input MedicationsOrderByRelationAggregateInput {
  _count: SortOrder
}

input MedicationsOrderByWithAggregationInput {
  _avg: MedicationsAvgOrderByAggregateInput
  _count: MedicationsCountOrderByAggregateInput
  _max: MedicationsMaxOrderByAggregateInput
  _min: MedicationsMinOrderByAggregateInput
  _sum: MedicationsSumOrderByAggregateInput
  dosage: SortOrder
  duration: SortOrder
  frequency: SortOrder
  id: SortOrder
  name: SortOrder
  prescription_id: SortOrder
  quantity: SortOrder
}

input MedicationsOrderByWithRelationInput {
  dosage: SortOrder
  duration: SortOrder
  frequency: SortOrder
  id: SortOrder
  name: SortOrder
  prescription_id: SortOrder
  prescriptions: PrescriptionsOrderByWithRelationInput
  quantity: SortOrder
}

enum MedicationsScalarFieldEnum {
  dosage
  duration
  frequency
  id
  name
  prescription_id
  quantity
}

input MedicationsScalarWhereInput {
  AND: [MedicationsScalarWhereInput!]
  NOT: [MedicationsScalarWhereInput!]
  OR: [MedicationsScalarWhereInput!]
  dosage: StringFilter
  duration: StringFilter
  frequency: StringFilter
  id: UuidFilter
  name: StringFilter
  prescription_id: UuidFilter
  quantity: FloatFilter
}

input MedicationsScalarWhereWithAggregatesInput {
  AND: [MedicationsScalarWhereWithAggregatesInput!]
  NOT: [MedicationsScalarWhereWithAggregatesInput!]
  OR: [MedicationsScalarWhereWithAggregatesInput!]
  dosage: StringWithAggregatesFilter
  duration: StringWithAggregatesFilter
  frequency: StringWithAggregatesFilter
  id: UuidWithAggregatesFilter
  name: StringWithAggregatesFilter
  prescription_id: UuidWithAggregatesFilter
  quantity: FloatWithAggregatesFilter
}

type MedicationsSumAggregate {
  quantity: Float
}

input MedicationsSumOrderByAggregateInput {
  quantity: SortOrder
}

input MedicationsUpdateInput {
  dosage: StringFieldUpdateOperationsInput
  duration: StringFieldUpdateOperationsInput
  frequency: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  prescriptions: PrescriptionsUpdateOneRequiredWithoutMedicationsNestedInput
  quantity: FloatFieldUpdateOperationsInput
}

input MedicationsUpdateManyMutationInput {
  dosage: StringFieldUpdateOperationsInput
  duration: StringFieldUpdateOperationsInput
  frequency: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  quantity: FloatFieldUpdateOperationsInput
}

input MedicationsUpdateManyWithWhereWithoutPrescriptionsInput {
  data: MedicationsUpdateManyMutationInput!
  where: MedicationsScalarWhereInput!
}

input MedicationsUpdateManyWithoutPrescriptionsNestedInput {
  connect: [MedicationsWhereUniqueInput!]
  connectOrCreate: [MedicationsCreateOrConnectWithoutPrescriptionsInput!]
  create: [MedicationsCreateWithoutPrescriptionsInput!]
  createMany: MedicationsCreateManyPrescriptionsInputEnvelope
  delete: [MedicationsWhereUniqueInput!]
  deleteMany: [MedicationsScalarWhereInput!]
  disconnect: [MedicationsWhereUniqueInput!]
  set: [MedicationsWhereUniqueInput!]
  update: [MedicationsUpdateWithWhereUniqueWithoutPrescriptionsInput!]
  updateMany: [MedicationsUpdateManyWithWhereWithoutPrescriptionsInput!]
  upsert: [MedicationsUpsertWithWhereUniqueWithoutPrescriptionsInput!]
}

input MedicationsUpdateWithWhereUniqueWithoutPrescriptionsInput {
  data: MedicationsUpdateWithoutPrescriptionsInput!
  where: MedicationsWhereUniqueInput!
}

input MedicationsUpdateWithoutPrescriptionsInput {
  dosage: StringFieldUpdateOperationsInput
  duration: StringFieldUpdateOperationsInput
  frequency: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  quantity: FloatFieldUpdateOperationsInput
}

input MedicationsUpsertWithWhereUniqueWithoutPrescriptionsInput {
  create: MedicationsCreateWithoutPrescriptionsInput!
  update: MedicationsUpdateWithoutPrescriptionsInput!
  where: MedicationsWhereUniqueInput!
}

input MedicationsWhereInput {
  AND: [MedicationsWhereInput!]
  NOT: [MedicationsWhereInput!]
  OR: [MedicationsWhereInput!]
  dosage: StringFilter
  duration: StringFilter
  frequency: StringFilter
  id: UuidFilter
  name: StringFilter
  prescription_id: UuidFilter
  prescriptions: PrescriptionsRelationFilter
  quantity: FloatFilter
}

input MedicationsWhereUniqueInput {
  AND: [MedicationsWhereInput!]
  NOT: [MedicationsWhereInput!]
  OR: [MedicationsWhereInput!]
  dosage: StringFilter
  duration: StringFilter
  frequency: StringFilter
  id: String
  name: StringFilter
  prescription_id: UuidFilter
  prescriptions: PrescriptionsRelationFilter
  quantity: FloatFilter
}

type Message {
  _count: MessageCount
  attachments(cursor: MessageAttachmentWhereUniqueInput, distinct: [MessageAttachmentScalarFieldEnum!], orderBy: [MessageAttachmentOrderByWithRelationInput!], skip: Int, take: Int, where: MessageAttachmentWhereInput): [MessageAttachment!]!
  content: String!
  createdAt: DateTimeISO!
  id: String!
  isRead: Boolean!
  patientId: String
  receiver: Doctors!
  receiverId: String!
  sender: Doctors!
  senderId: String!
  updatedAt: DateTimeISO!
}

type MessageAttachment {
  createdAt: DateTimeISO!
  filename: String!
  id: String!
  message: Message!
  messageId: String!
  mimeType: String!
  path: String!
  size: Int!
}

type MessageAttachmentAvgAggregate {
  size: Float
}

input MessageAttachmentAvgOrderByAggregateInput {
  size: SortOrder
}

type MessageAttachmentCountAggregate {
  _all: Int!
  createdAt: Int!
  filename: Int!
  id: Int!
  messageId: Int!
  mimeType: Int!
  path: Int!
  size: Int!
}

input MessageAttachmentCountOrderByAggregateInput {
  createdAt: SortOrder
  filename: SortOrder
  id: SortOrder
  messageId: SortOrder
  mimeType: SortOrder
  path: SortOrder
  size: SortOrder
}

input MessageAttachmentCreateInput {
  createdAt: DateTimeISO
  filename: String!
  id: String
  message: MessageCreateNestedOneWithoutAttachmentsInput!
  mimeType: String!
  path: String!
  size: Int!
}

input MessageAttachmentCreateManyInput {
  createdAt: DateTimeISO
  filename: String!
  id: String
  messageId: String!
  mimeType: String!
  path: String!
  size: Int!
}

input MessageAttachmentCreateManyMessageInput {
  createdAt: DateTimeISO
  filename: String!
  id: String
  mimeType: String!
  path: String!
  size: Int!
}

input MessageAttachmentCreateManyMessageInputEnvelope {
  data: [MessageAttachmentCreateManyMessageInput!]!
  skipDuplicates: Boolean
}

input MessageAttachmentCreateNestedManyWithoutMessageInput {
  connect: [MessageAttachmentWhereUniqueInput!]
  connectOrCreate: [MessageAttachmentCreateOrConnectWithoutMessageInput!]
  create: [MessageAttachmentCreateWithoutMessageInput!]
  createMany: MessageAttachmentCreateManyMessageInputEnvelope
}

input MessageAttachmentCreateOrConnectWithoutMessageInput {
  create: MessageAttachmentCreateWithoutMessageInput!
  where: MessageAttachmentWhereUniqueInput!
}

input MessageAttachmentCreateWithoutMessageInput {
  createdAt: DateTimeISO
  filename: String!
  id: String
  mimeType: String!
  path: String!
  size: Int!
}

type MessageAttachmentGroupBy {
  _avg: MessageAttachmentAvgAggregate
  _count: MessageAttachmentCountAggregate
  _max: MessageAttachmentMaxAggregate
  _min: MessageAttachmentMinAggregate
  _sum: MessageAttachmentSumAggregate
  createdAt: DateTimeISO!
  filename: String!
  id: String!
  messageId: String!
  mimeType: String!
  path: String!
  size: Int!
}

input MessageAttachmentListRelationFilter {
  every: MessageAttachmentWhereInput
  none: MessageAttachmentWhereInput
  some: MessageAttachmentWhereInput
}

type MessageAttachmentMaxAggregate {
  createdAt: DateTimeISO
  filename: String
  id: String
  messageId: String
  mimeType: String
  path: String
  size: Int
}

input MessageAttachmentMaxOrderByAggregateInput {
  createdAt: SortOrder
  filename: SortOrder
  id: SortOrder
  messageId: SortOrder
  mimeType: SortOrder
  path: SortOrder
  size: SortOrder
}

type MessageAttachmentMinAggregate {
  createdAt: DateTimeISO
  filename: String
  id: String
  messageId: String
  mimeType: String
  path: String
  size: Int
}

input MessageAttachmentMinOrderByAggregateInput {
  createdAt: SortOrder
  filename: SortOrder
  id: SortOrder
  messageId: SortOrder
  mimeType: SortOrder
  path: SortOrder
  size: SortOrder
}

input MessageAttachmentOrderByRelationAggregateInput {
  _count: SortOrder
}

input MessageAttachmentOrderByWithAggregationInput {
  _avg: MessageAttachmentAvgOrderByAggregateInput
  _count: MessageAttachmentCountOrderByAggregateInput
  _max: MessageAttachmentMaxOrderByAggregateInput
  _min: MessageAttachmentMinOrderByAggregateInput
  _sum: MessageAttachmentSumOrderByAggregateInput
  createdAt: SortOrder
  filename: SortOrder
  id: SortOrder
  messageId: SortOrder
  mimeType: SortOrder
  path: SortOrder
  size: SortOrder
}

input MessageAttachmentOrderByWithRelationInput {
  createdAt: SortOrder
  filename: SortOrder
  id: SortOrder
  message: MessageOrderByWithRelationInput
  messageId: SortOrder
  mimeType: SortOrder
  path: SortOrder
  size: SortOrder
}

enum MessageAttachmentScalarFieldEnum {
  createdAt
  filename
  id
  messageId
  mimeType
  path
  size
}

input MessageAttachmentScalarWhereInput {
  AND: [MessageAttachmentScalarWhereInput!]
  NOT: [MessageAttachmentScalarWhereInput!]
  OR: [MessageAttachmentScalarWhereInput!]
  createdAt: DateTimeFilter
  filename: StringFilter
  id: UuidFilter
  messageId: UuidFilter
  mimeType: StringFilter
  path: StringFilter
  size: IntFilter
}

input MessageAttachmentScalarWhereWithAggregatesInput {
  AND: [MessageAttachmentScalarWhereWithAggregatesInput!]
  NOT: [MessageAttachmentScalarWhereWithAggregatesInput!]
  OR: [MessageAttachmentScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  filename: StringWithAggregatesFilter
  id: UuidWithAggregatesFilter
  messageId: UuidWithAggregatesFilter
  mimeType: StringWithAggregatesFilter
  path: StringWithAggregatesFilter
  size: IntWithAggregatesFilter
}

type MessageAttachmentSumAggregate {
  size: Int
}

input MessageAttachmentSumOrderByAggregateInput {
  size: SortOrder
}

input MessageAttachmentUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  filename: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  message: MessageUpdateOneRequiredWithoutAttachmentsNestedInput
  mimeType: StringFieldUpdateOperationsInput
  path: StringFieldUpdateOperationsInput
  size: IntFieldUpdateOperationsInput
}

input MessageAttachmentUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  filename: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  path: StringFieldUpdateOperationsInput
  size: IntFieldUpdateOperationsInput
}

input MessageAttachmentUpdateManyWithWhereWithoutMessageInput {
  data: MessageAttachmentUpdateManyMutationInput!
  where: MessageAttachmentScalarWhereInput!
}

input MessageAttachmentUpdateManyWithoutMessageNestedInput {
  connect: [MessageAttachmentWhereUniqueInput!]
  connectOrCreate: [MessageAttachmentCreateOrConnectWithoutMessageInput!]
  create: [MessageAttachmentCreateWithoutMessageInput!]
  createMany: MessageAttachmentCreateManyMessageInputEnvelope
  delete: [MessageAttachmentWhereUniqueInput!]
  deleteMany: [MessageAttachmentScalarWhereInput!]
  disconnect: [MessageAttachmentWhereUniqueInput!]
  set: [MessageAttachmentWhereUniqueInput!]
  update: [MessageAttachmentUpdateWithWhereUniqueWithoutMessageInput!]
  updateMany: [MessageAttachmentUpdateManyWithWhereWithoutMessageInput!]
  upsert: [MessageAttachmentUpsertWithWhereUniqueWithoutMessageInput!]
}

input MessageAttachmentUpdateWithWhereUniqueWithoutMessageInput {
  data: MessageAttachmentUpdateWithoutMessageInput!
  where: MessageAttachmentWhereUniqueInput!
}

input MessageAttachmentUpdateWithoutMessageInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  filename: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mimeType: StringFieldUpdateOperationsInput
  path: StringFieldUpdateOperationsInput
  size: IntFieldUpdateOperationsInput
}

input MessageAttachmentUpsertWithWhereUniqueWithoutMessageInput {
  create: MessageAttachmentCreateWithoutMessageInput!
  update: MessageAttachmentUpdateWithoutMessageInput!
  where: MessageAttachmentWhereUniqueInput!
}

input MessageAttachmentWhereInput {
  AND: [MessageAttachmentWhereInput!]
  NOT: [MessageAttachmentWhereInput!]
  OR: [MessageAttachmentWhereInput!]
  createdAt: DateTimeFilter
  filename: StringFilter
  id: UuidFilter
  message: MessageRelationFilter
  messageId: UuidFilter
  mimeType: StringFilter
  path: StringFilter
  size: IntFilter
}

input MessageAttachmentWhereUniqueInput {
  AND: [MessageAttachmentWhereInput!]
  NOT: [MessageAttachmentWhereInput!]
  OR: [MessageAttachmentWhereInput!]
  createdAt: DateTimeFilter
  filename: StringFilter
  id: String
  message: MessageRelationFilter
  messageId: UuidFilter
  mimeType: StringFilter
  path: StringFilter
  size: IntFilter
}

type MessageCount {
  attachments(where: MessageAttachmentWhereInput): Int!
}

type MessageCountAggregate {
  _all: Int!
  content: Int!
  createdAt: Int!
  id: Int!
  isRead: Int!
  patientId: Int!
  receiverId: Int!
  senderId: Int!
  updatedAt: Int!
}

input MessageCountOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  isRead: SortOrder
  patientId: SortOrder
  receiverId: SortOrder
  senderId: SortOrder
  updatedAt: SortOrder
}

input MessageCreateInput {
  attachments: MessageAttachmentCreateNestedManyWithoutMessageInput
  content: String!
  createdAt: DateTimeISO
  id: String
  isRead: Boolean
  patientId: String
  receiver: DoctorsCreateNestedOneWithoutReceivedMessagesInput!
  sender: DoctorsCreateNestedOneWithoutSentMessagesInput!
  updatedAt: DateTimeISO
}

input MessageCreateManyInput {
  content: String!
  createdAt: DateTimeISO
  id: String
  isRead: Boolean
  patientId: String
  receiverId: String!
  senderId: String!
  updatedAt: DateTimeISO
}

input MessageCreateManyReceiverInput {
  content: String!
  createdAt: DateTimeISO
  id: String
  isRead: Boolean
  patientId: String
  senderId: String!
  updatedAt: DateTimeISO
}

input MessageCreateManyReceiverInputEnvelope {
  data: [MessageCreateManyReceiverInput!]!
  skipDuplicates: Boolean
}

input MessageCreateManySenderInput {
  content: String!
  createdAt: DateTimeISO
  id: String
  isRead: Boolean
  patientId: String
  receiverId: String!
  updatedAt: DateTimeISO
}

input MessageCreateManySenderInputEnvelope {
  data: [MessageCreateManySenderInput!]!
  skipDuplicates: Boolean
}

input MessageCreateNestedManyWithoutReceiverInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutReceiverInput!]
  create: [MessageCreateWithoutReceiverInput!]
  createMany: MessageCreateManyReceiverInputEnvelope
}

input MessageCreateNestedManyWithoutSenderInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutSenderInput!]
  create: [MessageCreateWithoutSenderInput!]
  createMany: MessageCreateManySenderInputEnvelope
}

input MessageCreateNestedOneWithoutAttachmentsInput {
  connect: MessageWhereUniqueInput
  connectOrCreate: MessageCreateOrConnectWithoutAttachmentsInput
  create: MessageCreateWithoutAttachmentsInput
}

input MessageCreateOrConnectWithoutAttachmentsInput {
  create: MessageCreateWithoutAttachmentsInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateOrConnectWithoutReceiverInput {
  create: MessageCreateWithoutReceiverInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateOrConnectWithoutSenderInput {
  create: MessageCreateWithoutSenderInput!
  where: MessageWhereUniqueInput!
}

input MessageCreateWithoutAttachmentsInput {
  content: String!
  createdAt: DateTimeISO
  id: String
  isRead: Boolean
  patientId: String
  receiver: DoctorsCreateNestedOneWithoutReceivedMessagesInput!
  sender: DoctorsCreateNestedOneWithoutSentMessagesInput!
  updatedAt: DateTimeISO
}

input MessageCreateWithoutReceiverInput {
  attachments: MessageAttachmentCreateNestedManyWithoutMessageInput
  content: String!
  createdAt: DateTimeISO
  id: String
  isRead: Boolean
  patientId: String
  sender: DoctorsCreateNestedOneWithoutSentMessagesInput!
  updatedAt: DateTimeISO
}

input MessageCreateWithoutSenderInput {
  attachments: MessageAttachmentCreateNestedManyWithoutMessageInput
  content: String!
  createdAt: DateTimeISO
  id: String
  isRead: Boolean
  patientId: String
  receiver: DoctorsCreateNestedOneWithoutReceivedMessagesInput!
  updatedAt: DateTimeISO
}

type MessageGroupBy {
  _count: MessageCountAggregate
  _max: MessageMaxAggregate
  _min: MessageMinAggregate
  content: String!
  createdAt: DateTimeISO!
  id: String!
  isRead: Boolean!
  patientId: String
  receiverId: String!
  senderId: String!
  updatedAt: DateTimeISO!
}

input MessageListRelationFilter {
  every: MessageWhereInput
  none: MessageWhereInput
  some: MessageWhereInput
}

type MessageMaxAggregate {
  content: String
  createdAt: DateTimeISO
  id: String
  isRead: Boolean
  patientId: String
  receiverId: String
  senderId: String
  updatedAt: DateTimeISO
}

input MessageMaxOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  isRead: SortOrder
  patientId: SortOrder
  receiverId: SortOrder
  senderId: SortOrder
  updatedAt: SortOrder
}

type MessageMinAggregate {
  content: String
  createdAt: DateTimeISO
  id: String
  isRead: Boolean
  patientId: String
  receiverId: String
  senderId: String
  updatedAt: DateTimeISO
}

input MessageMinOrderByAggregateInput {
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  isRead: SortOrder
  patientId: SortOrder
  receiverId: SortOrder
  senderId: SortOrder
  updatedAt: SortOrder
}

input MessageOrderByRelationAggregateInput {
  _count: SortOrder
}

input MessageOrderByWithAggregationInput {
  _count: MessageCountOrderByAggregateInput
  _max: MessageMaxOrderByAggregateInput
  _min: MessageMinOrderByAggregateInput
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  isRead: SortOrder
  patientId: SortOrderInput
  receiverId: SortOrder
  senderId: SortOrder
  updatedAt: SortOrder
}

input MessageOrderByWithRelationInput {
  attachments: MessageAttachmentOrderByRelationAggregateInput
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  isRead: SortOrder
  patientId: SortOrderInput
  receiver: DoctorsOrderByWithRelationInput
  receiverId: SortOrder
  sender: DoctorsOrderByWithRelationInput
  senderId: SortOrder
  updatedAt: SortOrder
}

input MessageRelationFilter {
  is: MessageWhereInput
  isNot: MessageWhereInput
}

enum MessageScalarFieldEnum {
  content
  createdAt
  id
  isRead
  patientId
  receiverId
  senderId
  updatedAt
}

input MessageScalarWhereInput {
  AND: [MessageScalarWhereInput!]
  NOT: [MessageScalarWhereInput!]
  OR: [MessageScalarWhereInput!]
  content: StringFilter
  createdAt: DateTimeFilter
  id: UuidFilter
  isRead: BoolFilter
  patientId: UuidNullableFilter
  receiverId: UuidFilter
  senderId: UuidFilter
  updatedAt: DateTimeFilter
}

input MessageScalarWhereWithAggregatesInput {
  AND: [MessageScalarWhereWithAggregatesInput!]
  NOT: [MessageScalarWhereWithAggregatesInput!]
  OR: [MessageScalarWhereWithAggregatesInput!]
  content: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: UuidWithAggregatesFilter
  isRead: BoolWithAggregatesFilter
  patientId: UuidNullableWithAggregatesFilter
  receiverId: UuidWithAggregatesFilter
  senderId: UuidWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input MessageUpdateInput {
  attachments: MessageAttachmentUpdateManyWithoutMessageNestedInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isRead: BoolFieldUpdateOperationsInput
  patientId: NullableStringFieldUpdateOperationsInput
  receiver: DoctorsUpdateOneRequiredWithoutReceivedMessagesNestedInput
  sender: DoctorsUpdateOneRequiredWithoutSentMessagesNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateManyMutationInput {
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isRead: BoolFieldUpdateOperationsInput
  patientId: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateManyWithWhereWithoutReceiverInput {
  data: MessageUpdateManyMutationInput!
  where: MessageScalarWhereInput!
}

input MessageUpdateManyWithWhereWithoutSenderInput {
  data: MessageUpdateManyMutationInput!
  where: MessageScalarWhereInput!
}

input MessageUpdateManyWithoutReceiverNestedInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutReceiverInput!]
  create: [MessageCreateWithoutReceiverInput!]
  createMany: MessageCreateManyReceiverInputEnvelope
  delete: [MessageWhereUniqueInput!]
  deleteMany: [MessageScalarWhereInput!]
  disconnect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutReceiverInput!]
  updateMany: [MessageUpdateManyWithWhereWithoutReceiverInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutReceiverInput!]
}

input MessageUpdateManyWithoutSenderNestedInput {
  connect: [MessageWhereUniqueInput!]
  connectOrCreate: [MessageCreateOrConnectWithoutSenderInput!]
  create: [MessageCreateWithoutSenderInput!]
  createMany: MessageCreateManySenderInputEnvelope
  delete: [MessageWhereUniqueInput!]
  deleteMany: [MessageScalarWhereInput!]
  disconnect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutSenderInput!]
  updateMany: [MessageUpdateManyWithWhereWithoutSenderInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutSenderInput!]
}

input MessageUpdateOneRequiredWithoutAttachmentsNestedInput {
  connect: MessageWhereUniqueInput
  connectOrCreate: MessageCreateOrConnectWithoutAttachmentsInput
  create: MessageCreateWithoutAttachmentsInput
  update: MessageUpdateToOneWithWhereWithoutAttachmentsInput
  upsert: MessageUpsertWithoutAttachmentsInput
}

input MessageUpdateToOneWithWhereWithoutAttachmentsInput {
  data: MessageUpdateWithoutAttachmentsInput!
  where: MessageWhereInput
}

input MessageUpdateWithWhereUniqueWithoutReceiverInput {
  data: MessageUpdateWithoutReceiverInput!
  where: MessageWhereUniqueInput!
}

input MessageUpdateWithWhereUniqueWithoutSenderInput {
  data: MessageUpdateWithoutSenderInput!
  where: MessageWhereUniqueInput!
}

input MessageUpdateWithoutAttachmentsInput {
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isRead: BoolFieldUpdateOperationsInput
  patientId: NullableStringFieldUpdateOperationsInput
  receiver: DoctorsUpdateOneRequiredWithoutReceivedMessagesNestedInput
  sender: DoctorsUpdateOneRequiredWithoutSentMessagesNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateWithoutReceiverInput {
  attachments: MessageAttachmentUpdateManyWithoutMessageNestedInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isRead: BoolFieldUpdateOperationsInput
  patientId: NullableStringFieldUpdateOperationsInput
  sender: DoctorsUpdateOneRequiredWithoutSentMessagesNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MessageUpdateWithoutSenderInput {
  attachments: MessageAttachmentUpdateManyWithoutMessageNestedInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isRead: BoolFieldUpdateOperationsInput
  patientId: NullableStringFieldUpdateOperationsInput
  receiver: DoctorsUpdateOneRequiredWithoutReceivedMessagesNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MessageUpsertWithWhereUniqueWithoutReceiverInput {
  create: MessageCreateWithoutReceiverInput!
  update: MessageUpdateWithoutReceiverInput!
  where: MessageWhereUniqueInput!
}

input MessageUpsertWithWhereUniqueWithoutSenderInput {
  create: MessageCreateWithoutSenderInput!
  update: MessageUpdateWithoutSenderInput!
  where: MessageWhereUniqueInput!
}

input MessageUpsertWithoutAttachmentsInput {
  create: MessageCreateWithoutAttachmentsInput!
  update: MessageUpdateWithoutAttachmentsInput!
  where: MessageWhereInput
}

input MessageWhereInput {
  AND: [MessageWhereInput!]
  NOT: [MessageWhereInput!]
  OR: [MessageWhereInput!]
  attachments: MessageAttachmentListRelationFilter
  content: StringFilter
  createdAt: DateTimeFilter
  id: UuidFilter
  isRead: BoolFilter
  patientId: UuidNullableFilter
  receiver: DoctorsRelationFilter
  receiverId: UuidFilter
  sender: DoctorsRelationFilter
  senderId: UuidFilter
  updatedAt: DateTimeFilter
}

input MessageWhereUniqueInput {
  AND: [MessageWhereInput!]
  NOT: [MessageWhereInput!]
  OR: [MessageWhereInput!]
  attachments: MessageAttachmentListRelationFilter
  content: StringFilter
  createdAt: DateTimeFilter
  id: String
  isRead: BoolFilter
  patientId: UuidNullableFilter
  receiver: DoctorsRelationFilter
  receiverId: UuidFilter
  sender: DoctorsRelationFilter
  senderId: UuidFilter
  updatedAt: DateTimeFilter
}

type Mutation {
  createManyAnalysis_results(data: [Analysis_resultsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyAndReturnAnalysis_results(data: [Analysis_resultsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnAnalysis_results!]!
  createManyAndReturnAuthorizations(data: [AuthorizationsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnAuthorizations!]!
  createManyAndReturnCertificates(data: [CertificatesCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnCertificates!]!
  createManyAndReturnCliniques(data: [CliniquesCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnCliniques!]!
  createManyAndReturnConsultations(data: [ConsultationsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnConsultations!]!
  createManyAndReturnCtscan_results(data: [Ctscan_resultsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnCtscan_results!]!
  createManyAndReturnDoctors(data: [DoctorsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnDoctors!]!
  createManyAndReturnGeneralMedicalRecords(data: [GeneralMedicalRecordsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnGeneralMedicalRecords!]!
  createManyAndReturnHopitaux(data: [HopitauxCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnHopitaux!]!
  createManyAndReturnInstituts_medicaux(data: [Instituts_medicauxCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnInstituts_medicaux!]!
  createManyAndReturnLab_attachments(data: [Lab_attachmentsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnLab_attachments!]!
  createManyAndReturnLab_documents(data: [Lab_documentsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnLab_documents!]!
  createManyAndReturnLab_requests(data: [Lab_requestsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnLab_requests!]!
  createManyAndReturnLab_results(data: [Lab_resultsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnLab_results!]!
  createManyAndReturnLaboratories(data: [LaboratoriesCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnLaboratories!]!
  createManyAndReturnMedications(data: [MedicationsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnMedications!]!
  createManyAndReturnMessage(data: [MessageCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnMessage!]!
  createManyAndReturnMessageAttachment(data: [MessageAttachmentCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnMessageAttachment!]!
  createManyAndReturnPatients(data: [PatientsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnPatients!]!
  createManyAndReturnPharmacies(data: [PharmaciesCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnPharmacies!]!
  createManyAndReturnPrescriptions(data: [PrescriptionsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnPrescriptions!]!
  createManyAndReturnRdv_requests(data: [Rdv_requestsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnRdv_requests!]!
  createManyAndReturnRdvs(data: [RdvsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnRdvs!]!
  createManyAndReturnUsers(data: [UsersCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnUsers!]!
  createManyAndReturnVerification_tokens(data: [Verification_tokensCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnVerification_tokens!]!
  createManyAndReturnXray_results(data: [Xray_resultsCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnXray_results!]!
  createManyAuthorizations(data: [AuthorizationsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCertificates(data: [CertificatesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCliniques(data: [CliniquesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyConsultations(data: [ConsultationsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCtscan_results(data: [Ctscan_resultsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyDoctors(data: [DoctorsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyGeneralMedicalRecords(data: [GeneralMedicalRecordsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyHopitaux(data: [HopitauxCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyInstituts_medicaux(data: [Instituts_medicauxCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyLab_attachments(data: [Lab_attachmentsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyLab_documents(data: [Lab_documentsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyLab_requests(data: [Lab_requestsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyLab_results(data: [Lab_resultsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyLaboratories(data: [LaboratoriesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyMedications(data: [MedicationsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyMessage(data: [MessageCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyMessageAttachment(data: [MessageAttachmentCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPatients(data: [PatientsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPharmacies(data: [PharmaciesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPrescriptions(data: [PrescriptionsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyRdv_requests(data: [Rdv_requestsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyRdvs(data: [RdvsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUsers(data: [UsersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyVerification_tokens(data: [Verification_tokensCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyXray_results(data: [Xray_resultsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createOneAnalysis_results(data: Analysis_resultsCreateInput!): Analysis_results!
  createOneAuthorizations(data: AuthorizationsCreateInput!): Authorizations!
  createOneCertificates(data: CertificatesCreateInput!): Certificates!
  createOneCliniques(data: CliniquesCreateInput!): Cliniques!
  createOneConsultations(data: ConsultationsCreateInput!): Consultations!
  createOneCtscan_results(data: Ctscan_resultsCreateInput!): Ctscan_results!
  createOneDoctors(data: DoctorsCreateInput!): Doctors!
  createOneGeneralMedicalRecords(data: GeneralMedicalRecordsCreateInput!): GeneralMedicalRecords!
  createOneHopitaux(data: HopitauxCreateInput!): Hopitaux!
  createOneInstituts_medicaux(data: Instituts_medicauxCreateInput!): Instituts_medicaux!
  createOneLab_attachments(data: Lab_attachmentsCreateInput!): Lab_attachments!
  createOneLab_documents(data: Lab_documentsCreateInput!): Lab_documents!
  createOneLab_requests(data: Lab_requestsCreateInput!): Lab_requests!
  createOneLab_results(data: Lab_resultsCreateInput!): Lab_results!
  createOneLaboratories(data: LaboratoriesCreateInput!): Laboratories!
  createOneMedications(data: MedicationsCreateInput!): Medications!
  createOneMessage(data: MessageCreateInput!): Message!
  createOneMessageAttachment(data: MessageAttachmentCreateInput!): MessageAttachment!
  createOnePatients(data: PatientsCreateInput!): Patients!
  createOnePharmacies(data: PharmaciesCreateInput!): Pharmacies!
  createOnePrescriptions(data: PrescriptionsCreateInput!): Prescriptions!
  createOneRdv_requests(data: Rdv_requestsCreateInput!): Rdv_requests!
  createOneRdvs(data: RdvsCreateInput!): Rdvs!
  createOneUsers(data: UsersCreateInput!): Users!
  createOneVerification_tokens(data: Verification_tokensCreateInput!): Verification_tokens!
  createOneXray_results(data: Xray_resultsCreateInput!): Xray_results!
  deleteManyAnalysis_results(where: Analysis_resultsWhereInput): AffectedRowsOutput!
  deleteManyAuthorizations(where: AuthorizationsWhereInput): AffectedRowsOutput!
  deleteManyCertificates(where: CertificatesWhereInput): AffectedRowsOutput!
  deleteManyCliniques(where: CliniquesWhereInput): AffectedRowsOutput!
  deleteManyConsultations(where: ConsultationsWhereInput): AffectedRowsOutput!
  deleteManyCtscan_results(where: Ctscan_resultsWhereInput): AffectedRowsOutput!
  deleteManyDoctors(where: DoctorsWhereInput): AffectedRowsOutput!
  deleteManyGeneralMedicalRecords(where: GeneralMedicalRecordsWhereInput): AffectedRowsOutput!
  deleteManyHopitaux(where: HopitauxWhereInput): AffectedRowsOutput!
  deleteManyInstituts_medicaux(where: Instituts_medicauxWhereInput): AffectedRowsOutput!
  deleteManyLab_attachments(where: Lab_attachmentsWhereInput): AffectedRowsOutput!
  deleteManyLab_documents(where: Lab_documentsWhereInput): AffectedRowsOutput!
  deleteManyLab_requests(where: Lab_requestsWhereInput): AffectedRowsOutput!
  deleteManyLab_results(where: Lab_resultsWhereInput): AffectedRowsOutput!
  deleteManyLaboratories(where: LaboratoriesWhereInput): AffectedRowsOutput!
  deleteManyMedications(where: MedicationsWhereInput): AffectedRowsOutput!
  deleteManyMessage(where: MessageWhereInput): AffectedRowsOutput!
  deleteManyMessageAttachment(where: MessageAttachmentWhereInput): AffectedRowsOutput!
  deleteManyPatients(where: PatientsWhereInput): AffectedRowsOutput!
  deleteManyPharmacies(where: PharmaciesWhereInput): AffectedRowsOutput!
  deleteManyPrescriptions(where: PrescriptionsWhereInput): AffectedRowsOutput!
  deleteManyRdv_requests(where: Rdv_requestsWhereInput): AffectedRowsOutput!
  deleteManyRdvs(where: RdvsWhereInput): AffectedRowsOutput!
  deleteManyUsers(where: UsersWhereInput): AffectedRowsOutput!
  deleteManyVerification_tokens(where: Verification_tokensWhereInput): AffectedRowsOutput!
  deleteManyXray_results(where: Xray_resultsWhereInput): AffectedRowsOutput!
  deleteOneAnalysis_results(where: Analysis_resultsWhereUniqueInput!): Analysis_results
  deleteOneAuthorizations(where: AuthorizationsWhereUniqueInput!): Authorizations
  deleteOneCertificates(where: CertificatesWhereUniqueInput!): Certificates
  deleteOneCliniques(where: CliniquesWhereUniqueInput!): Cliniques
  deleteOneConsultations(where: ConsultationsWhereUniqueInput!): Consultations
  deleteOneCtscan_results(where: Ctscan_resultsWhereUniqueInput!): Ctscan_results
  deleteOneDoctors(where: DoctorsWhereUniqueInput!): Doctors
  deleteOneGeneralMedicalRecords(where: GeneralMedicalRecordsWhereUniqueInput!): GeneralMedicalRecords
  deleteOneHopitaux(where: HopitauxWhereUniqueInput!): Hopitaux
  deleteOneInstituts_medicaux(where: Instituts_medicauxWhereUniqueInput!): Instituts_medicaux
  deleteOneLab_attachments(where: Lab_attachmentsWhereUniqueInput!): Lab_attachments
  deleteOneLab_documents(where: Lab_documentsWhereUniqueInput!): Lab_documents
  deleteOneLab_requests(where: Lab_requestsWhereUniqueInput!): Lab_requests
  deleteOneLab_results(where: Lab_resultsWhereUniqueInput!): Lab_results
  deleteOneLaboratories(where: LaboratoriesWhereUniqueInput!): Laboratories
  deleteOneMedications(where: MedicationsWhereUniqueInput!): Medications
  deleteOneMessage(where: MessageWhereUniqueInput!): Message
  deleteOneMessageAttachment(where: MessageAttachmentWhereUniqueInput!): MessageAttachment
  deleteOnePatients(where: PatientsWhereUniqueInput!): Patients
  deleteOnePharmacies(where: PharmaciesWhereUniqueInput!): Pharmacies
  deleteOnePrescriptions(where: PrescriptionsWhereUniqueInput!): Prescriptions
  deleteOneRdv_requests(where: Rdv_requestsWhereUniqueInput!): Rdv_requests
  deleteOneRdvs(where: RdvsWhereUniqueInput!): Rdvs
  deleteOneUsers(where: UsersWhereUniqueInput!): Users
  deleteOneVerification_tokens(where: Verification_tokensWhereUniqueInput!): Verification_tokens
  deleteOneXray_results(where: Xray_resultsWhereUniqueInput!): Xray_results
  updateManyAnalysis_results(data: Analysis_resultsUpdateManyMutationInput!, where: Analysis_resultsWhereInput): AffectedRowsOutput!
  updateManyAuthorizations(data: AuthorizationsUpdateManyMutationInput!, where: AuthorizationsWhereInput): AffectedRowsOutput!
  updateManyCertificates(data: CertificatesUpdateManyMutationInput!, where: CertificatesWhereInput): AffectedRowsOutput!
  updateManyCliniques(data: CliniquesUpdateManyMutationInput!, where: CliniquesWhereInput): AffectedRowsOutput!
  updateManyConsultations(data: ConsultationsUpdateManyMutationInput!, where: ConsultationsWhereInput): AffectedRowsOutput!
  updateManyCtscan_results(data: Ctscan_resultsUpdateManyMutationInput!, where: Ctscan_resultsWhereInput): AffectedRowsOutput!
  updateManyDoctors(data: DoctorsUpdateManyMutationInput!, where: DoctorsWhereInput): AffectedRowsOutput!
  updateManyGeneralMedicalRecords(data: GeneralMedicalRecordsUpdateManyMutationInput!, where: GeneralMedicalRecordsWhereInput): AffectedRowsOutput!
  updateManyHopitaux(data: HopitauxUpdateManyMutationInput!, where: HopitauxWhereInput): AffectedRowsOutput!
  updateManyInstituts_medicaux(data: Instituts_medicauxUpdateManyMutationInput!, where: Instituts_medicauxWhereInput): AffectedRowsOutput!
  updateManyLab_attachments(data: Lab_attachmentsUpdateManyMutationInput!, where: Lab_attachmentsWhereInput): AffectedRowsOutput!
  updateManyLab_documents(data: Lab_documentsUpdateManyMutationInput!, where: Lab_documentsWhereInput): AffectedRowsOutput!
  updateManyLab_requests(data: Lab_requestsUpdateManyMutationInput!, where: Lab_requestsWhereInput): AffectedRowsOutput!
  updateManyLab_results(data: Lab_resultsUpdateManyMutationInput!, where: Lab_resultsWhereInput): AffectedRowsOutput!
  updateManyLaboratories(data: LaboratoriesUpdateManyMutationInput!, where: LaboratoriesWhereInput): AffectedRowsOutput!
  updateManyMedications(data: MedicationsUpdateManyMutationInput!, where: MedicationsWhereInput): AffectedRowsOutput!
  updateManyMessage(data: MessageUpdateManyMutationInput!, where: MessageWhereInput): AffectedRowsOutput!
  updateManyMessageAttachment(data: MessageAttachmentUpdateManyMutationInput!, where: MessageAttachmentWhereInput): AffectedRowsOutput!
  updateManyPatients(data: PatientsUpdateManyMutationInput!, where: PatientsWhereInput): AffectedRowsOutput!
  updateManyPharmacies(data: PharmaciesUpdateManyMutationInput!, where: PharmaciesWhereInput): AffectedRowsOutput!
  updateManyPrescriptions(data: PrescriptionsUpdateManyMutationInput!, where: PrescriptionsWhereInput): AffectedRowsOutput!
  updateManyRdv_requests(data: Rdv_requestsUpdateManyMutationInput!, where: Rdv_requestsWhereInput): AffectedRowsOutput!
  updateManyRdvs(data: RdvsUpdateManyMutationInput!, where: RdvsWhereInput): AffectedRowsOutput!
  updateManyUsers(data: UsersUpdateManyMutationInput!, where: UsersWhereInput): AffectedRowsOutput!
  updateManyVerification_tokens(data: Verification_tokensUpdateManyMutationInput!, where: Verification_tokensWhereInput): AffectedRowsOutput!
  updateManyXray_results(data: Xray_resultsUpdateManyMutationInput!, where: Xray_resultsWhereInput): AffectedRowsOutput!
  updateOneAnalysis_results(data: Analysis_resultsUpdateInput!, where: Analysis_resultsWhereUniqueInput!): Analysis_results
  updateOneAuthorizations(data: AuthorizationsUpdateInput!, where: AuthorizationsWhereUniqueInput!): Authorizations
  updateOneCertificates(data: CertificatesUpdateInput!, where: CertificatesWhereUniqueInput!): Certificates
  updateOneCliniques(data: CliniquesUpdateInput!, where: CliniquesWhereUniqueInput!): Cliniques
  updateOneConsultations(data: ConsultationsUpdateInput!, where: ConsultationsWhereUniqueInput!): Consultations
  updateOneCtscan_results(data: Ctscan_resultsUpdateInput!, where: Ctscan_resultsWhereUniqueInput!): Ctscan_results
  updateOneDoctors(data: DoctorsUpdateInput!, where: DoctorsWhereUniqueInput!): Doctors
  updateOneGeneralMedicalRecords(data: GeneralMedicalRecordsUpdateInput!, where: GeneralMedicalRecordsWhereUniqueInput!): GeneralMedicalRecords
  updateOneHopitaux(data: HopitauxUpdateInput!, where: HopitauxWhereUniqueInput!): Hopitaux
  updateOneInstituts_medicaux(data: Instituts_medicauxUpdateInput!, where: Instituts_medicauxWhereUniqueInput!): Instituts_medicaux
  updateOneLab_attachments(data: Lab_attachmentsUpdateInput!, where: Lab_attachmentsWhereUniqueInput!): Lab_attachments
  updateOneLab_documents(data: Lab_documentsUpdateInput!, where: Lab_documentsWhereUniqueInput!): Lab_documents
  updateOneLab_requests(data: Lab_requestsUpdateInput!, where: Lab_requestsWhereUniqueInput!): Lab_requests
  updateOneLab_results(data: Lab_resultsUpdateInput!, where: Lab_resultsWhereUniqueInput!): Lab_results
  updateOneLaboratories(data: LaboratoriesUpdateInput!, where: LaboratoriesWhereUniqueInput!): Laboratories
  updateOneMedications(data: MedicationsUpdateInput!, where: MedicationsWhereUniqueInput!): Medications
  updateOneMessage(data: MessageUpdateInput!, where: MessageWhereUniqueInput!): Message
  updateOneMessageAttachment(data: MessageAttachmentUpdateInput!, where: MessageAttachmentWhereUniqueInput!): MessageAttachment
  updateOnePatients(data: PatientsUpdateInput!, where: PatientsWhereUniqueInput!): Patients
  updateOnePharmacies(data: PharmaciesUpdateInput!, where: PharmaciesWhereUniqueInput!): Pharmacies
  updateOnePrescriptions(data: PrescriptionsUpdateInput!, where: PrescriptionsWhereUniqueInput!): Prescriptions
  updateOneRdv_requests(data: Rdv_requestsUpdateInput!, where: Rdv_requestsWhereUniqueInput!): Rdv_requests
  updateOneRdvs(data: RdvsUpdateInput!, where: RdvsWhereUniqueInput!): Rdvs
  updateOneUsers(data: UsersUpdateInput!, where: UsersWhereUniqueInput!): Users
  updateOneVerification_tokens(data: Verification_tokensUpdateInput!, where: Verification_tokensWhereUniqueInput!): Verification_tokens
  updateOneXray_results(data: Xray_resultsUpdateInput!, where: Xray_resultsWhereUniqueInput!): Xray_results
  upsertOneAnalysis_results(create: Analysis_resultsCreateInput!, update: Analysis_resultsUpdateInput!, where: Analysis_resultsWhereUniqueInput!): Analysis_results!
  upsertOneAuthorizations(create: AuthorizationsCreateInput!, update: AuthorizationsUpdateInput!, where: AuthorizationsWhereUniqueInput!): Authorizations!
  upsertOneCertificates(create: CertificatesCreateInput!, update: CertificatesUpdateInput!, where: CertificatesWhereUniqueInput!): Certificates!
  upsertOneCliniques(create: CliniquesCreateInput!, update: CliniquesUpdateInput!, where: CliniquesWhereUniqueInput!): Cliniques!
  upsertOneConsultations(create: ConsultationsCreateInput!, update: ConsultationsUpdateInput!, where: ConsultationsWhereUniqueInput!): Consultations!
  upsertOneCtscan_results(create: Ctscan_resultsCreateInput!, update: Ctscan_resultsUpdateInput!, where: Ctscan_resultsWhereUniqueInput!): Ctscan_results!
  upsertOneDoctors(create: DoctorsCreateInput!, update: DoctorsUpdateInput!, where: DoctorsWhereUniqueInput!): Doctors!
  upsertOneGeneralMedicalRecords(create: GeneralMedicalRecordsCreateInput!, update: GeneralMedicalRecordsUpdateInput!, where: GeneralMedicalRecordsWhereUniqueInput!): GeneralMedicalRecords!
  upsertOneHopitaux(create: HopitauxCreateInput!, update: HopitauxUpdateInput!, where: HopitauxWhereUniqueInput!): Hopitaux!
  upsertOneInstituts_medicaux(create: Instituts_medicauxCreateInput!, update: Instituts_medicauxUpdateInput!, where: Instituts_medicauxWhereUniqueInput!): Instituts_medicaux!
  upsertOneLab_attachments(create: Lab_attachmentsCreateInput!, update: Lab_attachmentsUpdateInput!, where: Lab_attachmentsWhereUniqueInput!): Lab_attachments!
  upsertOneLab_documents(create: Lab_documentsCreateInput!, update: Lab_documentsUpdateInput!, where: Lab_documentsWhereUniqueInput!): Lab_documents!
  upsertOneLab_requests(create: Lab_requestsCreateInput!, update: Lab_requestsUpdateInput!, where: Lab_requestsWhereUniqueInput!): Lab_requests!
  upsertOneLab_results(create: Lab_resultsCreateInput!, update: Lab_resultsUpdateInput!, where: Lab_resultsWhereUniqueInput!): Lab_results!
  upsertOneLaboratories(create: LaboratoriesCreateInput!, update: LaboratoriesUpdateInput!, where: LaboratoriesWhereUniqueInput!): Laboratories!
  upsertOneMedications(create: MedicationsCreateInput!, update: MedicationsUpdateInput!, where: MedicationsWhereUniqueInput!): Medications!
  upsertOneMessage(create: MessageCreateInput!, update: MessageUpdateInput!, where: MessageWhereUniqueInput!): Message!
  upsertOneMessageAttachment(create: MessageAttachmentCreateInput!, update: MessageAttachmentUpdateInput!, where: MessageAttachmentWhereUniqueInput!): MessageAttachment!
  upsertOnePatients(create: PatientsCreateInput!, update: PatientsUpdateInput!, where: PatientsWhereUniqueInput!): Patients!
  upsertOnePharmacies(create: PharmaciesCreateInput!, update: PharmaciesUpdateInput!, where: PharmaciesWhereUniqueInput!): Pharmacies!
  upsertOnePrescriptions(create: PrescriptionsCreateInput!, update: PrescriptionsUpdateInput!, where: PrescriptionsWhereUniqueInput!): Prescriptions!
  upsertOneRdv_requests(create: Rdv_requestsCreateInput!, update: Rdv_requestsUpdateInput!, where: Rdv_requestsWhereUniqueInput!): Rdv_requests!
  upsertOneRdvs(create: RdvsCreateInput!, update: RdvsUpdateInput!, where: RdvsWhereUniqueInput!): Rdvs!
  upsertOneUsers(create: UsersCreateInput!, update: UsersUpdateInput!, where: UsersWhereUniqueInput!): Users!
  upsertOneVerification_tokens(create: Verification_tokensCreateInput!, update: Verification_tokensUpdateInput!, where: Verification_tokensWhereUniqueInput!): Verification_tokens!
  upsertOneXray_results(create: Xray_resultsCreateInput!, update: Xray_resultsUpdateInput!, where: Xray_resultsWhereUniqueInput!): Xray_results!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeFilter
  notIn: [DateTimeISO!]
}

input NestedDateTimeNullableFilter {
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeNullableFilter
  notIn: [DateTimeISO!]
}

input NestedDateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTimeISO!]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTimeISO!]
}

input NestedEnumanalysis_results_result_type_enumFilter {
  equals: analysis_results_result_type_enum
  in: [analysis_results_result_type_enum!]
  not: NestedEnumanalysis_results_result_type_enumFilter
  notIn: [analysis_results_result_type_enum!]
}

input NestedEnumanalysis_results_result_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumanalysis_results_result_type_enumFilter
  _min: NestedEnumanalysis_results_result_type_enumFilter
  equals: analysis_results_result_type_enum
  in: [analysis_results_result_type_enum!]
  not: NestedEnumanalysis_results_result_type_enumWithAggregatesFilter
  notIn: [analysis_results_result_type_enum!]
}

input NestedEnumauthorizations_level_enumFilter {
  equals: authorizations_level_enum
  in: [authorizations_level_enum!]
  not: NestedEnumauthorizations_level_enumFilter
  notIn: [authorizations_level_enum!]
}

input NestedEnumauthorizations_level_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumauthorizations_level_enumFilter
  _min: NestedEnumauthorizations_level_enumFilter
  equals: authorizations_level_enum
  in: [authorizations_level_enum!]
  not: NestedEnumauthorizations_level_enumWithAggregatesFilter
  notIn: [authorizations_level_enum!]
}

input NestedEnumcliniques_type_enumFilter {
  equals: cliniques_type_enum
  in: [cliniques_type_enum!]
  not: NestedEnumcliniques_type_enumFilter
  notIn: [cliniques_type_enum!]
}

input NestedEnumcliniques_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumcliniques_type_enumFilter
  _min: NestedEnumcliniques_type_enumFilter
  equals: cliniques_type_enum
  in: [cliniques_type_enum!]
  not: NestedEnumcliniques_type_enumWithAggregatesFilter
  notIn: [cliniques_type_enum!]
}

input NestedEnumctscan_results_result_type_enumFilter {
  equals: ctscan_results_result_type_enum
  in: [ctscan_results_result_type_enum!]
  not: NestedEnumctscan_results_result_type_enumFilter
  notIn: [ctscan_results_result_type_enum!]
}

input NestedEnumctscan_results_result_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumctscan_results_result_type_enumFilter
  _min: NestedEnumctscan_results_result_type_enumFilter
  equals: ctscan_results_result_type_enum
  in: [ctscan_results_result_type_enum!]
  not: NestedEnumctscan_results_result_type_enumWithAggregatesFilter
  notIn: [ctscan_results_result_type_enum!]
}

input NestedEnumdoctors_specialty_enumFilter {
  equals: doctors_specialty_enum
  in: [doctors_specialty_enum!]
  not: NestedEnumdoctors_specialty_enumFilter
  notIn: [doctors_specialty_enum!]
}

input NestedEnumdoctors_specialty_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumdoctors_specialty_enumFilter
  _min: NestedEnumdoctors_specialty_enumFilter
  equals: doctors_specialty_enum
  in: [doctors_specialty_enum!]
  not: NestedEnumdoctors_specialty_enumWithAggregatesFilter
  notIn: [doctors_specialty_enum!]
}

input NestedEnumdoctors_type_enumFilter {
  equals: doctors_type_enum
  in: [doctors_type_enum!]
  not: NestedEnumdoctors_type_enumFilter
  notIn: [doctors_type_enum!]
}

input NestedEnumdoctors_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumdoctors_type_enumFilter
  _min: NestedEnumdoctors_type_enumFilter
  equals: doctors_type_enum
  in: [doctors_type_enum!]
  not: NestedEnumdoctors_type_enumWithAggregatesFilter
  notIn: [doctors_type_enum!]
}

input NestedEnumhopitaux_type_enumFilter {
  equals: hopitaux_type_enum
  in: [hopitaux_type_enum!]
  not: NestedEnumhopitaux_type_enumFilter
  notIn: [hopitaux_type_enum!]
}

input NestedEnumhopitaux_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumhopitaux_type_enumFilter
  _min: NestedEnumhopitaux_type_enumFilter
  equals: hopitaux_type_enum
  in: [hopitaux_type_enum!]
  not: NestedEnumhopitaux_type_enumWithAggregatesFilter
  notIn: [hopitaux_type_enum!]
}

input NestedEnuminstituts_medicaux_type_enumFilter {
  equals: instituts_medicaux_type_enum
  in: [instituts_medicaux_type_enum!]
  not: NestedEnuminstituts_medicaux_type_enumFilter
  notIn: [instituts_medicaux_type_enum!]
}

input NestedEnuminstituts_medicaux_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnuminstituts_medicaux_type_enumFilter
  _min: NestedEnuminstituts_medicaux_type_enumFilter
  equals: instituts_medicaux_type_enum
  in: [instituts_medicaux_type_enum!]
  not: NestedEnuminstituts_medicaux_type_enumWithAggregatesFilter
  notIn: [instituts_medicaux_type_enum!]
}

input NestedEnumlab_documents_status_enumFilter {
  equals: lab_documents_status_enum
  in: [lab_documents_status_enum!]
  not: NestedEnumlab_documents_status_enumFilter
  notIn: [lab_documents_status_enum!]
}

input NestedEnumlab_documents_status_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumlab_documents_status_enumFilter
  _min: NestedEnumlab_documents_status_enumFilter
  equals: lab_documents_status_enum
  in: [lab_documents_status_enum!]
  not: NestedEnumlab_documents_status_enumWithAggregatesFilter
  notIn: [lab_documents_status_enum!]
}

input NestedEnumlab_requests_priority_enumNullableFilter {
  equals: lab_requests_priority_enum
  in: [lab_requests_priority_enum!]
  not: NestedEnumlab_requests_priority_enumNullableFilter
  notIn: [lab_requests_priority_enum!]
}

input NestedEnumlab_requests_priority_enumNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedEnumlab_requests_priority_enumNullableFilter
  _min: NestedEnumlab_requests_priority_enumNullableFilter
  equals: lab_requests_priority_enum
  in: [lab_requests_priority_enum!]
  not: NestedEnumlab_requests_priority_enumNullableWithAggregatesFilter
  notIn: [lab_requests_priority_enum!]
}

input NestedEnumlab_results_result_type_enumFilter {
  equals: lab_results_result_type_enum
  in: [lab_results_result_type_enum!]
  not: NestedEnumlab_results_result_type_enumFilter
  notIn: [lab_results_result_type_enum!]
}

input NestedEnumlab_results_result_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumlab_results_result_type_enumFilter
  _min: NestedEnumlab_results_result_type_enumFilter
  equals: lab_results_result_type_enum
  in: [lab_results_result_type_enum!]
  not: NestedEnumlab_results_result_type_enumWithAggregatesFilter
  notIn: [lab_results_result_type_enum!]
}

input NestedEnumpatients_gender_enumFilter {
  equals: patients_gender_enum
  in: [patients_gender_enum!]
  not: NestedEnumpatients_gender_enumFilter
  notIn: [patients_gender_enum!]
}

input NestedEnumpatients_gender_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumpatients_gender_enumFilter
  _min: NestedEnumpatients_gender_enumFilter
  equals: patients_gender_enum
  in: [patients_gender_enum!]
  not: NestedEnumpatients_gender_enumWithAggregatesFilter
  notIn: [patients_gender_enum!]
}

input NestedEnumprescriptions_status_enumFilter {
  equals: prescriptions_status_enum
  in: [prescriptions_status_enum!]
  not: NestedEnumprescriptions_status_enumFilter
  notIn: [prescriptions_status_enum!]
}

input NestedEnumprescriptions_status_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumprescriptions_status_enumFilter
  _min: NestedEnumprescriptions_status_enumFilter
  equals: prescriptions_status_enum
  in: [prescriptions_status_enum!]
  not: NestedEnumprescriptions_status_enumWithAggregatesFilter
  notIn: [prescriptions_status_enum!]
}

input NestedEnumusers_role_enumFilter {
  equals: users_role_enum
  in: [users_role_enum!]
  not: NestedEnumusers_role_enumFilter
  notIn: [users_role_enum!]
}

input NestedEnumusers_role_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumusers_role_enumFilter
  _min: NestedEnumusers_role_enumFilter
  equals: users_role_enum
  in: [users_role_enum!]
  not: NestedEnumusers_role_enumWithAggregatesFilter
  notIn: [users_role_enum!]
}

input NestedEnumxray_results_result_type_enumFilter {
  equals: xray_results_result_type_enum
  in: [xray_results_result_type_enum!]
  not: NestedEnumxray_results_result_type_enumFilter
  notIn: [xray_results_result_type_enum!]
}

input NestedEnumxray_results_result_type_enumWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumxray_results_result_type_enumFilter
  _min: NestedEnumxray_results_result_type_enumFilter
  equals: xray_results_result_type_enum
  in: [xray_results_result_type_enum!]
  not: NestedEnumxray_results_result_type_enumWithAggregatesFilter
  notIn: [xray_results_result_type_enum!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input NestedFloatNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedFloatNullableFilter
  _min: NestedFloatNullableFilter
  _sum: NestedFloatNullableFilter
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableWithAggregatesFilter
  notIn: [Float!]
}

input NestedFloatWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedFloatFilter
  _min: NestedFloatFilter
  _sum: NestedFloatFilter
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatWithAggregatesFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

input NestedJsonNullableFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NestedUuidFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedUuidFilter
  notIn: [String!]
}

input NestedUuidNullableFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedUuidNullableFilter
  notIn: [String!]
}

input NestedUuidNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedUuidNullableWithAggregatesFilter
  notIn: [String!]
}

input NestedUuidWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedUuidWithAggregatesFilter
  notIn: [String!]
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTimeISO
}

input NullableEnumlab_requests_priority_enumFieldUpdateOperationsInput {
  set: lab_requests_priority_enum
}

input NullableFloatFieldUpdateOperationsInput {
  decrement: Float
  divide: Float
  increment: Float
  multiply: Float
  set: Float
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

enum NullsOrder {
  first
  last
}

type Patients {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients(where: GeneralMedicalRecordsWhereInput): GeneralMedicalRecords
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords(where: GeneralMedicalRecordsWhereInput): GeneralMedicalRecords
  _count: PatientsCount
  authorizations(cursor: AuthorizationsWhereUniqueInput, distinct: [AuthorizationsScalarFieldEnum!], orderBy: [AuthorizationsOrderByWithRelationInput!], skip: Int, take: Int, where: AuthorizationsWhereInput): [Authorizations!]!
  certificates(cursor: CertificatesWhereUniqueInput, distinct: [CertificatesScalarFieldEnum!], orderBy: [CertificatesOrderByWithRelationInput!], skip: Int, take: Int, where: CertificatesWhereInput): [Certificates!]!
  cin: Int!
  consultations(cursor: ConsultationsWhereUniqueInput, distinct: [ConsultationsScalarFieldEnum!], orderBy: [ConsultationsOrderByWithRelationInput!], skip: Int, take: Int, where: ConsultationsWhereInput): [Consultations!]!
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  general_medical_record_id: String
  id: String!
  lab_documents(cursor: Lab_documentsWhereUniqueInput, distinct: [Lab_documentsScalarFieldEnum!], orderBy: [Lab_documentsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_documentsWhereInput): [Lab_documents!]!
  lab_requests(cursor: Lab_requestsWhereUniqueInput, distinct: [Lab_requestsScalarFieldEnum!], orderBy: [Lab_requestsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_requestsWhereInput): [Lab_requests!]!
  prescriptions(cursor: PrescriptionsWhereUniqueInput, distinct: [PrescriptionsScalarFieldEnum!], orderBy: [PrescriptionsOrderByWithRelationInput!], skip: Int, take: Int, where: PrescriptionsWhereInput): [Prescriptions!]!
  profile_image: String
  rdv_requests(cursor: Rdv_requestsWhereUniqueInput, distinct: [Rdv_requestsScalarFieldEnum!], orderBy: [Rdv_requestsOrderByWithRelationInput!], skip: Int, take: Int, where: Rdv_requestsWhereInput): [Rdv_requests!]!
  rdvs(cursor: RdvsWhereUniqueInput, distinct: [RdvsScalarFieldEnum!], orderBy: [RdvsOrderByWithRelationInput!], skip: Int, take: Int, where: RdvsWhereInput): [Rdvs!]!
  user_id: String
  users(where: UsersWhereInput): Users
}

type PatientsAvgAggregate {
  cin: Float
}

input PatientsAvgOrderByAggregateInput {
  cin: SortOrder
}

type PatientsCount {
  authorizations(where: AuthorizationsWhereInput): Int!
  certificates(where: CertificatesWhereInput): Int!
  consultations(where: ConsultationsWhereInput): Int!
  lab_documents(where: Lab_documentsWhereInput): Int!
  lab_requests(where: Lab_requestsWhereInput): Int!
  prescriptions(where: PrescriptionsWhereInput): Int!
  rdv_requests(where: Rdv_requestsWhereInput): Int!
  rdvs(where: RdvsWhereInput): Int!
}

type PatientsCountAggregate {
  _all: Int!
  cin: Int!
  date_of_birth: Int!
  gender: Int!
  general_medical_record_id: Int!
  id: Int!
  profile_image: Int!
  user_id: Int!
}

input PatientsCountOrderByAggregateInput {
  cin: SortOrder
  date_of_birth: SortOrder
  gender: SortOrder
  general_medical_record_id: SortOrder
  id: SortOrder
  profile_image: SortOrder
  user_id: SortOrder
}

input PatientsCreateInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsCreateNestedOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsCreateNestedOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  authorizations: AuthorizationsCreateNestedManyWithoutPatientsInput
  certificates: CertificatesCreateNestedManyWithoutPatientsInput
  cin: Int!
  consultations: ConsultationsCreateNestedManyWithoutPatientsInput
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutPatientsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutPatientsInput
  prescriptions: PrescriptionsCreateNestedManyWithoutPatientsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutPatientsInput
  rdvs: RdvsCreateNestedManyWithoutPatientsInput
  users: UsersCreateNestedOneWithoutPatientsInput
}

input PatientsCreateManyInput {
  cin: Int!
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  general_medical_record_id: String
  id: String
  profile_image: String
  user_id: String
}

input PatientsCreateManyUsersInput {
  cin: Int!
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  general_medical_record_id: String
  id: String
  profile_image: String
}

input PatientsCreateManyUsersInputEnvelope {
  data: [PatientsCreateManyUsersInput!]!
  skipDuplicates: Boolean
}

input PatientsCreateNestedManyWithoutUsersInput {
  connect: [PatientsWhereUniqueInput!]
  connectOrCreate: [PatientsCreateOrConnectWithoutUsersInput!]
  create: [PatientsCreateWithoutUsersInput!]
  createMany: PatientsCreateManyUsersInputEnvelope
}

input PatientsCreateNestedOneWithoutAuthorizationsInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutAuthorizationsInput
  create: PatientsCreateWithoutAuthorizationsInput
}

input PatientsCreateNestedOneWithoutCertificatesInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutCertificatesInput
  create: PatientsCreateWithoutCertificatesInput
}

input PatientsCreateNestedOneWithoutConsultationsInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutConsultationsInput
  create: PatientsCreateWithoutConsultationsInput
}

input PatientsCreateNestedOneWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput
  create: PatientsCreateWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput
}

input PatientsCreateNestedOneWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput
  create: PatientsCreateWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput
}

input PatientsCreateNestedOneWithoutLab_documentsInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutLab_documentsInput
  create: PatientsCreateWithoutLab_documentsInput
}

input PatientsCreateNestedOneWithoutLab_requestsInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutLab_requestsInput
  create: PatientsCreateWithoutLab_requestsInput
}

input PatientsCreateNestedOneWithoutPrescriptionsInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutPrescriptionsInput
  create: PatientsCreateWithoutPrescriptionsInput
}

input PatientsCreateNestedOneWithoutRdv_requestsInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutRdv_requestsInput
  create: PatientsCreateWithoutRdv_requestsInput
}

input PatientsCreateNestedOneWithoutRdvsInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutRdvsInput
  create: PatientsCreateWithoutRdvsInput
}

input PatientsCreateOrConnectWithoutAuthorizationsInput {
  create: PatientsCreateWithoutAuthorizationsInput!
  where: PatientsWhereUniqueInput!
}

input PatientsCreateOrConnectWithoutCertificatesInput {
  create: PatientsCreateWithoutCertificatesInput!
  where: PatientsWhereUniqueInput!
}

input PatientsCreateOrConnectWithoutConsultationsInput {
  create: PatientsCreateWithoutConsultationsInput!
  where: PatientsWhereUniqueInput!
}

input PatientsCreateOrConnectWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput {
  create: PatientsCreateWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput!
  where: PatientsWhereUniqueInput!
}

input PatientsCreateOrConnectWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput {
  create: PatientsCreateWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput!
  where: PatientsWhereUniqueInput!
}

input PatientsCreateOrConnectWithoutLab_documentsInput {
  create: PatientsCreateWithoutLab_documentsInput!
  where: PatientsWhereUniqueInput!
}

input PatientsCreateOrConnectWithoutLab_requestsInput {
  create: PatientsCreateWithoutLab_requestsInput!
  where: PatientsWhereUniqueInput!
}

input PatientsCreateOrConnectWithoutPrescriptionsInput {
  create: PatientsCreateWithoutPrescriptionsInput!
  where: PatientsWhereUniqueInput!
}

input PatientsCreateOrConnectWithoutRdv_requestsInput {
  create: PatientsCreateWithoutRdv_requestsInput!
  where: PatientsWhereUniqueInput!
}

input PatientsCreateOrConnectWithoutRdvsInput {
  create: PatientsCreateWithoutRdvsInput!
  where: PatientsWhereUniqueInput!
}

input PatientsCreateOrConnectWithoutUsersInput {
  create: PatientsCreateWithoutUsersInput!
  where: PatientsWhereUniqueInput!
}

input PatientsCreateWithoutAuthorizationsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsCreateNestedOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsCreateNestedOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  certificates: CertificatesCreateNestedManyWithoutPatientsInput
  cin: Int!
  consultations: ConsultationsCreateNestedManyWithoutPatientsInput
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutPatientsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutPatientsInput
  prescriptions: PrescriptionsCreateNestedManyWithoutPatientsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutPatientsInput
  rdvs: RdvsCreateNestedManyWithoutPatientsInput
  users: UsersCreateNestedOneWithoutPatientsInput
}

input PatientsCreateWithoutCertificatesInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsCreateNestedOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsCreateNestedOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  authorizations: AuthorizationsCreateNestedManyWithoutPatientsInput
  cin: Int!
  consultations: ConsultationsCreateNestedManyWithoutPatientsInput
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutPatientsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutPatientsInput
  prescriptions: PrescriptionsCreateNestedManyWithoutPatientsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutPatientsInput
  rdvs: RdvsCreateNestedManyWithoutPatientsInput
  users: UsersCreateNestedOneWithoutPatientsInput
}

input PatientsCreateWithoutConsultationsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsCreateNestedOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsCreateNestedOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  authorizations: AuthorizationsCreateNestedManyWithoutPatientsInput
  certificates: CertificatesCreateNestedManyWithoutPatientsInput
  cin: Int!
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutPatientsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutPatientsInput
  prescriptions: PrescriptionsCreateNestedManyWithoutPatientsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutPatientsInput
  rdvs: RdvsCreateNestedManyWithoutPatientsInput
  users: UsersCreateNestedOneWithoutPatientsInput
}

input PatientsCreateWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput {
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsCreateNestedOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  authorizations: AuthorizationsCreateNestedManyWithoutPatientsInput
  certificates: CertificatesCreateNestedManyWithoutPatientsInput
  cin: Int!
  consultations: ConsultationsCreateNestedManyWithoutPatientsInput
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutPatientsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutPatientsInput
  prescriptions: PrescriptionsCreateNestedManyWithoutPatientsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutPatientsInput
  rdvs: RdvsCreateNestedManyWithoutPatientsInput
  users: UsersCreateNestedOneWithoutPatientsInput
}

input PatientsCreateWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsCreateNestedOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  authorizations: AuthorizationsCreateNestedManyWithoutPatientsInput
  certificates: CertificatesCreateNestedManyWithoutPatientsInput
  cin: Int!
  consultations: ConsultationsCreateNestedManyWithoutPatientsInput
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutPatientsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutPatientsInput
  prescriptions: PrescriptionsCreateNestedManyWithoutPatientsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutPatientsInput
  rdvs: RdvsCreateNestedManyWithoutPatientsInput
  users: UsersCreateNestedOneWithoutPatientsInput
}

input PatientsCreateWithoutLab_documentsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsCreateNestedOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsCreateNestedOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  authorizations: AuthorizationsCreateNestedManyWithoutPatientsInput
  certificates: CertificatesCreateNestedManyWithoutPatientsInput
  cin: Int!
  consultations: ConsultationsCreateNestedManyWithoutPatientsInput
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  id: String
  lab_requests: Lab_requestsCreateNestedManyWithoutPatientsInput
  prescriptions: PrescriptionsCreateNestedManyWithoutPatientsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutPatientsInput
  rdvs: RdvsCreateNestedManyWithoutPatientsInput
  users: UsersCreateNestedOneWithoutPatientsInput
}

input PatientsCreateWithoutLab_requestsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsCreateNestedOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsCreateNestedOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  authorizations: AuthorizationsCreateNestedManyWithoutPatientsInput
  certificates: CertificatesCreateNestedManyWithoutPatientsInput
  cin: Int!
  consultations: ConsultationsCreateNestedManyWithoutPatientsInput
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutPatientsInput
  prescriptions: PrescriptionsCreateNestedManyWithoutPatientsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutPatientsInput
  rdvs: RdvsCreateNestedManyWithoutPatientsInput
  users: UsersCreateNestedOneWithoutPatientsInput
}

input PatientsCreateWithoutPrescriptionsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsCreateNestedOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsCreateNestedOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  authorizations: AuthorizationsCreateNestedManyWithoutPatientsInput
  certificates: CertificatesCreateNestedManyWithoutPatientsInput
  cin: Int!
  consultations: ConsultationsCreateNestedManyWithoutPatientsInput
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutPatientsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutPatientsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutPatientsInput
  rdvs: RdvsCreateNestedManyWithoutPatientsInput
  users: UsersCreateNestedOneWithoutPatientsInput
}

input PatientsCreateWithoutRdv_requestsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsCreateNestedOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsCreateNestedOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  authorizations: AuthorizationsCreateNestedManyWithoutPatientsInput
  certificates: CertificatesCreateNestedManyWithoutPatientsInput
  cin: Int!
  consultations: ConsultationsCreateNestedManyWithoutPatientsInput
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutPatientsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutPatientsInput
  prescriptions: PrescriptionsCreateNestedManyWithoutPatientsInput
  profile_image: String
  rdvs: RdvsCreateNestedManyWithoutPatientsInput
  users: UsersCreateNestedOneWithoutPatientsInput
}

input PatientsCreateWithoutRdvsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsCreateNestedOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsCreateNestedOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  authorizations: AuthorizationsCreateNestedManyWithoutPatientsInput
  certificates: CertificatesCreateNestedManyWithoutPatientsInput
  cin: Int!
  consultations: ConsultationsCreateNestedManyWithoutPatientsInput
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutPatientsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutPatientsInput
  prescriptions: PrescriptionsCreateNestedManyWithoutPatientsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutPatientsInput
  users: UsersCreateNestedOneWithoutPatientsInput
}

input PatientsCreateWithoutUsersInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsCreateNestedOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsCreateNestedOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsInput
  authorizations: AuthorizationsCreateNestedManyWithoutPatientsInput
  certificates: CertificatesCreateNestedManyWithoutPatientsInput
  cin: Int!
  consultations: ConsultationsCreateNestedManyWithoutPatientsInput
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  id: String
  lab_documents: Lab_documentsCreateNestedManyWithoutPatientsInput
  lab_requests: Lab_requestsCreateNestedManyWithoutPatientsInput
  prescriptions: PrescriptionsCreateNestedManyWithoutPatientsInput
  profile_image: String
  rdv_requests: Rdv_requestsCreateNestedManyWithoutPatientsInput
  rdvs: RdvsCreateNestedManyWithoutPatientsInput
}

type PatientsGroupBy {
  _avg: PatientsAvgAggregate
  _count: PatientsCountAggregate
  _max: PatientsMaxAggregate
  _min: PatientsMinAggregate
  _sum: PatientsSumAggregate
  cin: Int!
  date_of_birth: DateTimeISO!
  gender: patients_gender_enum!
  general_medical_record_id: String
  id: String!
  profile_image: String
  user_id: String
}

input PatientsListRelationFilter {
  every: PatientsWhereInput
  none: PatientsWhereInput
  some: PatientsWhereInput
}

type PatientsMaxAggregate {
  cin: Int
  date_of_birth: DateTimeISO
  gender: patients_gender_enum
  general_medical_record_id: String
  id: String
  profile_image: String
  user_id: String
}

input PatientsMaxOrderByAggregateInput {
  cin: SortOrder
  date_of_birth: SortOrder
  gender: SortOrder
  general_medical_record_id: SortOrder
  id: SortOrder
  profile_image: SortOrder
  user_id: SortOrder
}

type PatientsMinAggregate {
  cin: Int
  date_of_birth: DateTimeISO
  gender: patients_gender_enum
  general_medical_record_id: String
  id: String
  profile_image: String
  user_id: String
}

input PatientsMinOrderByAggregateInput {
  cin: SortOrder
  date_of_birth: SortOrder
  gender: SortOrder
  general_medical_record_id: SortOrder
  id: SortOrder
  profile_image: SortOrder
  user_id: SortOrder
}

input PatientsNullableRelationFilter {
  is: PatientsWhereInput
  isNot: PatientsWhereInput
}

input PatientsOrderByRelationAggregateInput {
  _count: SortOrder
}

input PatientsOrderByWithAggregationInput {
  _avg: PatientsAvgOrderByAggregateInput
  _count: PatientsCountOrderByAggregateInput
  _max: PatientsMaxOrderByAggregateInput
  _min: PatientsMinOrderByAggregateInput
  _sum: PatientsSumOrderByAggregateInput
  cin: SortOrder
  date_of_birth: SortOrder
  gender: SortOrder
  general_medical_record_id: SortOrderInput
  id: SortOrder
  profile_image: SortOrderInput
  user_id: SortOrderInput
}

input PatientsOrderByWithRelationInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsOrderByWithRelationInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsOrderByWithRelationInput
  authorizations: AuthorizationsOrderByRelationAggregateInput
  certificates: CertificatesOrderByRelationAggregateInput
  cin: SortOrder
  consultations: ConsultationsOrderByRelationAggregateInput
  date_of_birth: SortOrder
  gender: SortOrder
  general_medical_record_id: SortOrderInput
  id: SortOrder
  lab_documents: Lab_documentsOrderByRelationAggregateInput
  lab_requests: Lab_requestsOrderByRelationAggregateInput
  prescriptions: PrescriptionsOrderByRelationAggregateInput
  profile_image: SortOrderInput
  rdv_requests: Rdv_requestsOrderByRelationAggregateInput
  rdvs: RdvsOrderByRelationAggregateInput
  user_id: SortOrderInput
  users: UsersOrderByWithRelationInput
}

input PatientsRelationFilter {
  is: PatientsWhereInput
  isNot: PatientsWhereInput
}

enum PatientsScalarFieldEnum {
  cin
  date_of_birth
  gender
  general_medical_record_id
  id
  profile_image
  user_id
}

input PatientsScalarWhereInput {
  AND: [PatientsScalarWhereInput!]
  NOT: [PatientsScalarWhereInput!]
  OR: [PatientsScalarWhereInput!]
  cin: IntFilter
  date_of_birth: DateTimeFilter
  gender: Enumpatients_gender_enumFilter
  general_medical_record_id: UuidNullableFilter
  id: UuidFilter
  profile_image: StringNullableFilter
  user_id: UuidNullableFilter
}

input PatientsScalarWhereWithAggregatesInput {
  AND: [PatientsScalarWhereWithAggregatesInput!]
  NOT: [PatientsScalarWhereWithAggregatesInput!]
  OR: [PatientsScalarWhereWithAggregatesInput!]
  cin: IntWithAggregatesFilter
  date_of_birth: DateTimeWithAggregatesFilter
  gender: Enumpatients_gender_enumWithAggregatesFilter
  general_medical_record_id: UuidNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  profile_image: StringNullableWithAggregatesFilter
  user_id: UuidNullableWithAggregatesFilter
}

type PatientsSumAggregate {
  cin: Int
}

input PatientsSumOrderByAggregateInput {
  cin: SortOrder
}

input PatientsUpdateInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsUpdateOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsNestedInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsUpdateOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput
  authorizations: AuthorizationsUpdateManyWithoutPatientsNestedInput
  certificates: CertificatesUpdateManyWithoutPatientsNestedInput
  cin: IntFieldUpdateOperationsInput
  consultations: ConsultationsUpdateManyWithoutPatientsNestedInput
  date_of_birth: DateTimeFieldUpdateOperationsInput
  gender: Enumpatients_gender_enumFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutPatientsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutPatientsNestedInput
  prescriptions: PrescriptionsUpdateManyWithoutPatientsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutPatientsNestedInput
  rdvs: RdvsUpdateManyWithoutPatientsNestedInput
  users: UsersUpdateOneWithoutPatientsNestedInput
}

input PatientsUpdateManyMutationInput {
  cin: IntFieldUpdateOperationsInput
  date_of_birth: DateTimeFieldUpdateOperationsInput
  gender: Enumpatients_gender_enumFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  profile_image: NullableStringFieldUpdateOperationsInput
}

input PatientsUpdateManyWithWhereWithoutUsersInput {
  data: PatientsUpdateManyMutationInput!
  where: PatientsScalarWhereInput!
}

input PatientsUpdateManyWithoutUsersNestedInput {
  connect: [PatientsWhereUniqueInput!]
  connectOrCreate: [PatientsCreateOrConnectWithoutUsersInput!]
  create: [PatientsCreateWithoutUsersInput!]
  createMany: PatientsCreateManyUsersInputEnvelope
  delete: [PatientsWhereUniqueInput!]
  deleteMany: [PatientsScalarWhereInput!]
  disconnect: [PatientsWhereUniqueInput!]
  set: [PatientsWhereUniqueInput!]
  update: [PatientsUpdateWithWhereUniqueWithoutUsersInput!]
  updateMany: [PatientsUpdateManyWithWhereWithoutUsersInput!]
  upsert: [PatientsUpsertWithWhereUniqueWithoutUsersInput!]
}

input PatientsUpdateOneRequiredWithoutAuthorizationsNestedInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutAuthorizationsInput
  create: PatientsCreateWithoutAuthorizationsInput
  update: PatientsUpdateToOneWithWhereWithoutAuthorizationsInput
  upsert: PatientsUpsertWithoutAuthorizationsInput
}

input PatientsUpdateOneRequiredWithoutCertificatesNestedInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutCertificatesInput
  create: PatientsCreateWithoutCertificatesInput
  update: PatientsUpdateToOneWithWhereWithoutCertificatesInput
  upsert: PatientsUpsertWithoutCertificatesInput
}

input PatientsUpdateOneRequiredWithoutConsultationsNestedInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutConsultationsInput
  create: PatientsCreateWithoutConsultationsInput
  update: PatientsUpdateToOneWithWhereWithoutConsultationsInput
  upsert: PatientsUpsertWithoutConsultationsInput
}

input PatientsUpdateOneRequiredWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsNestedInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput
  create: PatientsCreateWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput
  update: PatientsUpdateToOneWithWhereWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput
  upsert: PatientsUpsertWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput
}

input PatientsUpdateOneRequiredWithoutLab_documentsNestedInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutLab_documentsInput
  create: PatientsCreateWithoutLab_documentsInput
  update: PatientsUpdateToOneWithWhereWithoutLab_documentsInput
  upsert: PatientsUpsertWithoutLab_documentsInput
}

input PatientsUpdateOneRequiredWithoutLab_requestsNestedInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutLab_requestsInput
  create: PatientsCreateWithoutLab_requestsInput
  update: PatientsUpdateToOneWithWhereWithoutLab_requestsInput
  upsert: PatientsUpsertWithoutLab_requestsInput
}

input PatientsUpdateOneRequiredWithoutPrescriptionsNestedInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutPrescriptionsInput
  create: PatientsCreateWithoutPrescriptionsInput
  update: PatientsUpdateToOneWithWhereWithoutPrescriptionsInput
  upsert: PatientsUpsertWithoutPrescriptionsInput
}

input PatientsUpdateOneRequiredWithoutRdv_requestsNestedInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutRdv_requestsInput
  create: PatientsCreateWithoutRdv_requestsInput
  update: PatientsUpdateToOneWithWhereWithoutRdv_requestsInput
  upsert: PatientsUpsertWithoutRdv_requestsInput
}

input PatientsUpdateOneRequiredWithoutRdvsNestedInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutRdvsInput
  create: PatientsCreateWithoutRdvsInput
  update: PatientsUpdateToOneWithWhereWithoutRdvsInput
  upsert: PatientsUpsertWithoutRdvsInput
}

input PatientsUpdateOneWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput {
  connect: PatientsWhereUniqueInput
  connectOrCreate: PatientsCreateOrConnectWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput
  create: PatientsCreateWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput
  delete: PatientsWhereInput
  disconnect: PatientsWhereInput
  update: PatientsUpdateToOneWithWhereWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput
  upsert: PatientsUpsertWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput
}

input PatientsUpdateToOneWithWhereWithoutAuthorizationsInput {
  data: PatientsUpdateWithoutAuthorizationsInput!
  where: PatientsWhereInput
}

input PatientsUpdateToOneWithWhereWithoutCertificatesInput {
  data: PatientsUpdateWithoutCertificatesInput!
  where: PatientsWhereInput
}

input PatientsUpdateToOneWithWhereWithoutConsultationsInput {
  data: PatientsUpdateWithoutConsultationsInput!
  where: PatientsWhereInput
}

input PatientsUpdateToOneWithWhereWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput {
  data: PatientsUpdateWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput!
  where: PatientsWhereInput
}

input PatientsUpdateToOneWithWhereWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput {
  data: PatientsUpdateWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput!
  where: PatientsWhereInput
}

input PatientsUpdateToOneWithWhereWithoutLab_documentsInput {
  data: PatientsUpdateWithoutLab_documentsInput!
  where: PatientsWhereInput
}

input PatientsUpdateToOneWithWhereWithoutLab_requestsInput {
  data: PatientsUpdateWithoutLab_requestsInput!
  where: PatientsWhereInput
}

input PatientsUpdateToOneWithWhereWithoutPrescriptionsInput {
  data: PatientsUpdateWithoutPrescriptionsInput!
  where: PatientsWhereInput
}

input PatientsUpdateToOneWithWhereWithoutRdv_requestsInput {
  data: PatientsUpdateWithoutRdv_requestsInput!
  where: PatientsWhereInput
}

input PatientsUpdateToOneWithWhereWithoutRdvsInput {
  data: PatientsUpdateWithoutRdvsInput!
  where: PatientsWhereInput
}

input PatientsUpdateWithWhereUniqueWithoutUsersInput {
  data: PatientsUpdateWithoutUsersInput!
  where: PatientsWhereUniqueInput!
}

input PatientsUpdateWithoutAuthorizationsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsUpdateOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsNestedInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsUpdateOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput
  certificates: CertificatesUpdateManyWithoutPatientsNestedInput
  cin: IntFieldUpdateOperationsInput
  consultations: ConsultationsUpdateManyWithoutPatientsNestedInput
  date_of_birth: DateTimeFieldUpdateOperationsInput
  gender: Enumpatients_gender_enumFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutPatientsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutPatientsNestedInput
  prescriptions: PrescriptionsUpdateManyWithoutPatientsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutPatientsNestedInput
  rdvs: RdvsUpdateManyWithoutPatientsNestedInput
  users: UsersUpdateOneWithoutPatientsNestedInput
}

input PatientsUpdateWithoutCertificatesInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsUpdateOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsNestedInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsUpdateOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput
  authorizations: AuthorizationsUpdateManyWithoutPatientsNestedInput
  cin: IntFieldUpdateOperationsInput
  consultations: ConsultationsUpdateManyWithoutPatientsNestedInput
  date_of_birth: DateTimeFieldUpdateOperationsInput
  gender: Enumpatients_gender_enumFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutPatientsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutPatientsNestedInput
  prescriptions: PrescriptionsUpdateManyWithoutPatientsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutPatientsNestedInput
  rdvs: RdvsUpdateManyWithoutPatientsNestedInput
  users: UsersUpdateOneWithoutPatientsNestedInput
}

input PatientsUpdateWithoutConsultationsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsUpdateOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsNestedInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsUpdateOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput
  authorizations: AuthorizationsUpdateManyWithoutPatientsNestedInput
  certificates: CertificatesUpdateManyWithoutPatientsNestedInput
  cin: IntFieldUpdateOperationsInput
  date_of_birth: DateTimeFieldUpdateOperationsInput
  gender: Enumpatients_gender_enumFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutPatientsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutPatientsNestedInput
  prescriptions: PrescriptionsUpdateManyWithoutPatientsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutPatientsNestedInput
  rdvs: RdvsUpdateManyWithoutPatientsNestedInput
  users: UsersUpdateOneWithoutPatientsNestedInput
}

input PatientsUpdateWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput {
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsUpdateOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput
  authorizations: AuthorizationsUpdateManyWithoutPatientsNestedInput
  certificates: CertificatesUpdateManyWithoutPatientsNestedInput
  cin: IntFieldUpdateOperationsInput
  consultations: ConsultationsUpdateManyWithoutPatientsNestedInput
  date_of_birth: DateTimeFieldUpdateOperationsInput
  gender: Enumpatients_gender_enumFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutPatientsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutPatientsNestedInput
  prescriptions: PrescriptionsUpdateManyWithoutPatientsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutPatientsNestedInput
  rdvs: RdvsUpdateManyWithoutPatientsNestedInput
  users: UsersUpdateOneWithoutPatientsNestedInput
}

input PatientsUpdateWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsUpdateOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsNestedInput
  authorizations: AuthorizationsUpdateManyWithoutPatientsNestedInput
  certificates: CertificatesUpdateManyWithoutPatientsNestedInput
  cin: IntFieldUpdateOperationsInput
  consultations: ConsultationsUpdateManyWithoutPatientsNestedInput
  date_of_birth: DateTimeFieldUpdateOperationsInput
  gender: Enumpatients_gender_enumFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutPatientsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutPatientsNestedInput
  prescriptions: PrescriptionsUpdateManyWithoutPatientsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutPatientsNestedInput
  rdvs: RdvsUpdateManyWithoutPatientsNestedInput
  users: UsersUpdateOneWithoutPatientsNestedInput
}

input PatientsUpdateWithoutLab_documentsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsUpdateOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsNestedInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsUpdateOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput
  authorizations: AuthorizationsUpdateManyWithoutPatientsNestedInput
  certificates: CertificatesUpdateManyWithoutPatientsNestedInput
  cin: IntFieldUpdateOperationsInput
  consultations: ConsultationsUpdateManyWithoutPatientsNestedInput
  date_of_birth: DateTimeFieldUpdateOperationsInput
  gender: Enumpatients_gender_enumFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_requests: Lab_requestsUpdateManyWithoutPatientsNestedInput
  prescriptions: PrescriptionsUpdateManyWithoutPatientsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutPatientsNestedInput
  rdvs: RdvsUpdateManyWithoutPatientsNestedInput
  users: UsersUpdateOneWithoutPatientsNestedInput
}

input PatientsUpdateWithoutLab_requestsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsUpdateOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsNestedInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsUpdateOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput
  authorizations: AuthorizationsUpdateManyWithoutPatientsNestedInput
  certificates: CertificatesUpdateManyWithoutPatientsNestedInput
  cin: IntFieldUpdateOperationsInput
  consultations: ConsultationsUpdateManyWithoutPatientsNestedInput
  date_of_birth: DateTimeFieldUpdateOperationsInput
  gender: Enumpatients_gender_enumFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutPatientsNestedInput
  prescriptions: PrescriptionsUpdateManyWithoutPatientsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutPatientsNestedInput
  rdvs: RdvsUpdateManyWithoutPatientsNestedInput
  users: UsersUpdateOneWithoutPatientsNestedInput
}

input PatientsUpdateWithoutPrescriptionsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsUpdateOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsNestedInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsUpdateOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput
  authorizations: AuthorizationsUpdateManyWithoutPatientsNestedInput
  certificates: CertificatesUpdateManyWithoutPatientsNestedInput
  cin: IntFieldUpdateOperationsInput
  consultations: ConsultationsUpdateManyWithoutPatientsNestedInput
  date_of_birth: DateTimeFieldUpdateOperationsInput
  gender: Enumpatients_gender_enumFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutPatientsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutPatientsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutPatientsNestedInput
  rdvs: RdvsUpdateManyWithoutPatientsNestedInput
  users: UsersUpdateOneWithoutPatientsNestedInput
}

input PatientsUpdateWithoutRdv_requestsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsUpdateOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsNestedInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsUpdateOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput
  authorizations: AuthorizationsUpdateManyWithoutPatientsNestedInput
  certificates: CertificatesUpdateManyWithoutPatientsNestedInput
  cin: IntFieldUpdateOperationsInput
  consultations: ConsultationsUpdateManyWithoutPatientsNestedInput
  date_of_birth: DateTimeFieldUpdateOperationsInput
  gender: Enumpatients_gender_enumFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutPatientsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutPatientsNestedInput
  prescriptions: PrescriptionsUpdateManyWithoutPatientsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdvs: RdvsUpdateManyWithoutPatientsNestedInput
  users: UsersUpdateOneWithoutPatientsNestedInput
}

input PatientsUpdateWithoutRdvsInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsUpdateOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsNestedInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsUpdateOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput
  authorizations: AuthorizationsUpdateManyWithoutPatientsNestedInput
  certificates: CertificatesUpdateManyWithoutPatientsNestedInput
  cin: IntFieldUpdateOperationsInput
  consultations: ConsultationsUpdateManyWithoutPatientsNestedInput
  date_of_birth: DateTimeFieldUpdateOperationsInput
  gender: Enumpatients_gender_enumFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutPatientsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutPatientsNestedInput
  prescriptions: PrescriptionsUpdateManyWithoutPatientsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutPatientsNestedInput
  users: UsersUpdateOneWithoutPatientsNestedInput
}

input PatientsUpdateWithoutUsersInput {
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsUpdateOneWithoutPatients_GeneralMedicalRecords_patient_idTopatientsNestedInput
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsUpdateOneWithoutPatients_patients_general_medical_record_idToGeneralMedicalRecordsNestedInput
  authorizations: AuthorizationsUpdateManyWithoutPatientsNestedInput
  certificates: CertificatesUpdateManyWithoutPatientsNestedInput
  cin: IntFieldUpdateOperationsInput
  consultations: ConsultationsUpdateManyWithoutPatientsNestedInput
  date_of_birth: DateTimeFieldUpdateOperationsInput
  gender: Enumpatients_gender_enumFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateManyWithoutPatientsNestedInput
  lab_requests: Lab_requestsUpdateManyWithoutPatientsNestedInput
  prescriptions: PrescriptionsUpdateManyWithoutPatientsNestedInput
  profile_image: NullableStringFieldUpdateOperationsInput
  rdv_requests: Rdv_requestsUpdateManyWithoutPatientsNestedInput
  rdvs: RdvsUpdateManyWithoutPatientsNestedInput
}

input PatientsUpsertWithWhereUniqueWithoutUsersInput {
  create: PatientsCreateWithoutUsersInput!
  update: PatientsUpdateWithoutUsersInput!
  where: PatientsWhereUniqueInput!
}

input PatientsUpsertWithoutAuthorizationsInput {
  create: PatientsCreateWithoutAuthorizationsInput!
  update: PatientsUpdateWithoutAuthorizationsInput!
  where: PatientsWhereInput
}

input PatientsUpsertWithoutCertificatesInput {
  create: PatientsCreateWithoutCertificatesInput!
  update: PatientsUpdateWithoutCertificatesInput!
  where: PatientsWhereInput
}

input PatientsUpsertWithoutConsultationsInput {
  create: PatientsCreateWithoutConsultationsInput!
  update: PatientsUpdateWithoutConsultationsInput!
  where: PatientsWhereInput
}

input PatientsUpsertWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput {
  create: PatientsCreateWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput!
  update: PatientsUpdateWithoutGeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatientsInput!
  where: PatientsWhereInput
}

input PatientsUpsertWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput {
  create: PatientsCreateWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput!
  update: PatientsUpdateWithoutGeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecordsInput!
  where: PatientsWhereInput
}

input PatientsUpsertWithoutLab_documentsInput {
  create: PatientsCreateWithoutLab_documentsInput!
  update: PatientsUpdateWithoutLab_documentsInput!
  where: PatientsWhereInput
}

input PatientsUpsertWithoutLab_requestsInput {
  create: PatientsCreateWithoutLab_requestsInput!
  update: PatientsUpdateWithoutLab_requestsInput!
  where: PatientsWhereInput
}

input PatientsUpsertWithoutPrescriptionsInput {
  create: PatientsCreateWithoutPrescriptionsInput!
  update: PatientsUpdateWithoutPrescriptionsInput!
  where: PatientsWhereInput
}

input PatientsUpsertWithoutRdv_requestsInput {
  create: PatientsCreateWithoutRdv_requestsInput!
  update: PatientsUpdateWithoutRdv_requestsInput!
  where: PatientsWhereInput
}

input PatientsUpsertWithoutRdvsInput {
  create: PatientsCreateWithoutRdvsInput!
  update: PatientsUpdateWithoutRdvsInput!
  where: PatientsWhereInput
}

input PatientsWhereInput {
  AND: [PatientsWhereInput!]
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsNullableRelationFilter
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsNullableRelationFilter
  NOT: [PatientsWhereInput!]
  OR: [PatientsWhereInput!]
  authorizations: AuthorizationsListRelationFilter
  certificates: CertificatesListRelationFilter
  cin: IntFilter
  consultations: ConsultationsListRelationFilter
  date_of_birth: DateTimeFilter
  gender: Enumpatients_gender_enumFilter
  general_medical_record_id: UuidNullableFilter
  id: UuidFilter
  lab_documents: Lab_documentsListRelationFilter
  lab_requests: Lab_requestsListRelationFilter
  prescriptions: PrescriptionsListRelationFilter
  profile_image: StringNullableFilter
  rdv_requests: Rdv_requestsListRelationFilter
  rdvs: RdvsListRelationFilter
  user_id: UuidNullableFilter
  users: UsersNullableRelationFilter
}

input PatientsWhereUniqueInput {
  AND: [PatientsWhereInput!]
  GeneralMedicalRecords_GeneralMedicalRecords_patient_idTopatients: GeneralMedicalRecordsNullableRelationFilter
  GeneralMedicalRecords_patients_general_medical_record_idToGeneralMedicalRecords: GeneralMedicalRecordsNullableRelationFilter
  NOT: [PatientsWhereInput!]
  OR: [PatientsWhereInput!]
  authorizations: AuthorizationsListRelationFilter
  certificates: CertificatesListRelationFilter
  cin: Int
  consultations: ConsultationsListRelationFilter
  date_of_birth: DateTimeFilter
  gender: Enumpatients_gender_enumFilter
  general_medical_record_id: String
  id: String
  lab_documents: Lab_documentsListRelationFilter
  lab_requests: Lab_requestsListRelationFilter
  prescriptions: PrescriptionsListRelationFilter
  profile_image: StringNullableFilter
  rdv_requests: Rdv_requestsListRelationFilter
  rdvs: RdvsListRelationFilter
  user_id: String
  users: UsersNullableRelationFilter
}

type Pharmacies {
  address: String
  email: String
  id: String!
  name: String!
  phone: String
}

type PharmaciesCountAggregate {
  _all: Int!
  address: Int!
  email: Int!
  id: Int!
  name: Int!
  phone: Int!
}

input PharmaciesCountOrderByAggregateInput {
  address: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
}

input PharmaciesCreateInput {
  address: String
  email: String
  id: String
  name: String!
  phone: String
}

input PharmaciesCreateManyInput {
  address: String
  email: String
  id: String
  name: String!
  phone: String
}

type PharmaciesGroupBy {
  _count: PharmaciesCountAggregate
  _max: PharmaciesMaxAggregate
  _min: PharmaciesMinAggregate
  address: String
  email: String
  id: String!
  name: String!
  phone: String
}

type PharmaciesMaxAggregate {
  address: String
  email: String
  id: String
  name: String
  phone: String
}

input PharmaciesMaxOrderByAggregateInput {
  address: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
}

type PharmaciesMinAggregate {
  address: String
  email: String
  id: String
  name: String
  phone: String
}

input PharmaciesMinOrderByAggregateInput {
  address: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
}

input PharmaciesOrderByWithAggregationInput {
  _count: PharmaciesCountOrderByAggregateInput
  _max: PharmaciesMaxOrderByAggregateInput
  _min: PharmaciesMinOrderByAggregateInput
  address: SortOrderInput
  email: SortOrderInput
  id: SortOrder
  name: SortOrder
  phone: SortOrderInput
}

input PharmaciesOrderByWithRelationInput {
  address: SortOrderInput
  email: SortOrderInput
  id: SortOrder
  name: SortOrder
  phone: SortOrderInput
}

enum PharmaciesScalarFieldEnum {
  address
  email
  id
  name
  phone
}

input PharmaciesScalarWhereWithAggregatesInput {
  AND: [PharmaciesScalarWhereWithAggregatesInput!]
  NOT: [PharmaciesScalarWhereWithAggregatesInput!]
  OR: [PharmaciesScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  name: StringWithAggregatesFilter
  phone: StringNullableWithAggregatesFilter
}

input PharmaciesUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
}

input PharmaciesUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
}

input PharmaciesWhereInput {
  AND: [PharmaciesWhereInput!]
  NOT: [PharmaciesWhereInput!]
  OR: [PharmaciesWhereInput!]
  address: StringNullableFilter
  email: StringNullableFilter
  id: UuidFilter
  name: StringFilter
  phone: StringNullableFilter
}

input PharmaciesWhereUniqueInput {
  AND: [PharmaciesWhereInput!]
  NOT: [PharmaciesWhereInput!]
  OR: [PharmaciesWhereInput!]
  address: StringNullableFilter
  email: StringNullableFilter
  id: String
  name: StringFilter
  phone: StringNullableFilter
}

type Prescriptions {
  _count: PrescriptionsCount
  consultations(cursor: ConsultationsWhereUniqueInput, distinct: [ConsultationsScalarFieldEnum!], orderBy: [ConsultationsOrderByWithRelationInput!], skip: Int, take: Int, where: ConsultationsWhereInput): [Consultations!]!
  date: DateTimeISO!
  doctor_id: String
  doctors(where: DoctorsWhereInput): Doctors
  id: String!
  instructions: String
  is_signed: Boolean!
  medications(cursor: MedicationsWhereUniqueInput, distinct: [MedicationsScalarFieldEnum!], orderBy: [MedicationsOrderByWithRelationInput!], skip: Int, take: Int, where: MedicationsWhereInput): [Medications!]!
  patient_id: String!
  patients: Patients!
  section: String
  status: prescriptions_status_enum!
  updated_at: DateTimeISO!
}

type PrescriptionsCount {
  consultations(where: ConsultationsWhereInput): Int!
  medications(where: MedicationsWhereInput): Int!
}

type PrescriptionsCountAggregate {
  _all: Int!
  date: Int!
  doctor_id: Int!
  id: Int!
  instructions: Int!
  is_signed: Int!
  patient_id: Int!
  section: Int!
  status: Int!
  updated_at: Int!
}

input PrescriptionsCountOrderByAggregateInput {
  date: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  instructions: SortOrder
  is_signed: SortOrder
  patient_id: SortOrder
  section: SortOrder
  status: SortOrder
  updated_at: SortOrder
}

input PrescriptionsCreateInput {
  consultations: ConsultationsCreateNestedManyWithoutPrescriptionsInput
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutPrescriptionsInput
  id: String
  instructions: String
  is_signed: Boolean!
  medications: MedicationsCreateNestedManyWithoutPrescriptionsInput
  patients: PatientsCreateNestedOneWithoutPrescriptionsInput!
  section: String
  status: prescriptions_status_enum!
  updated_at: DateTimeISO
}

input PrescriptionsCreateManyDoctorsInput {
  date: DateTimeISO!
  id: String
  instructions: String
  is_signed: Boolean!
  patient_id: String!
  section: String
  status: prescriptions_status_enum!
  updated_at: DateTimeISO
}

input PrescriptionsCreateManyDoctorsInputEnvelope {
  data: [PrescriptionsCreateManyDoctorsInput!]!
  skipDuplicates: Boolean
}

input PrescriptionsCreateManyInput {
  date: DateTimeISO!
  doctor_id: String
  id: String
  instructions: String
  is_signed: Boolean!
  patient_id: String!
  section: String
  status: prescriptions_status_enum!
  updated_at: DateTimeISO
}

input PrescriptionsCreateManyPatientsInput {
  date: DateTimeISO!
  doctor_id: String
  id: String
  instructions: String
  is_signed: Boolean!
  section: String
  status: prescriptions_status_enum!
  updated_at: DateTimeISO
}

input PrescriptionsCreateManyPatientsInputEnvelope {
  data: [PrescriptionsCreateManyPatientsInput!]!
  skipDuplicates: Boolean
}

input PrescriptionsCreateNestedManyWithoutDoctorsInput {
  connect: [PrescriptionsWhereUniqueInput!]
  connectOrCreate: [PrescriptionsCreateOrConnectWithoutDoctorsInput!]
  create: [PrescriptionsCreateWithoutDoctorsInput!]
  createMany: PrescriptionsCreateManyDoctorsInputEnvelope
}

input PrescriptionsCreateNestedManyWithoutPatientsInput {
  connect: [PrescriptionsWhereUniqueInput!]
  connectOrCreate: [PrescriptionsCreateOrConnectWithoutPatientsInput!]
  create: [PrescriptionsCreateWithoutPatientsInput!]
  createMany: PrescriptionsCreateManyPatientsInputEnvelope
}

input PrescriptionsCreateNestedOneWithoutConsultationsInput {
  connect: PrescriptionsWhereUniqueInput
  connectOrCreate: PrescriptionsCreateOrConnectWithoutConsultationsInput
  create: PrescriptionsCreateWithoutConsultationsInput
}

input PrescriptionsCreateNestedOneWithoutMedicationsInput {
  connect: PrescriptionsWhereUniqueInput
  connectOrCreate: PrescriptionsCreateOrConnectWithoutMedicationsInput
  create: PrescriptionsCreateWithoutMedicationsInput
}

input PrescriptionsCreateOrConnectWithoutConsultationsInput {
  create: PrescriptionsCreateWithoutConsultationsInput!
  where: PrescriptionsWhereUniqueInput!
}

input PrescriptionsCreateOrConnectWithoutDoctorsInput {
  create: PrescriptionsCreateWithoutDoctorsInput!
  where: PrescriptionsWhereUniqueInput!
}

input PrescriptionsCreateOrConnectWithoutMedicationsInput {
  create: PrescriptionsCreateWithoutMedicationsInput!
  where: PrescriptionsWhereUniqueInput!
}

input PrescriptionsCreateOrConnectWithoutPatientsInput {
  create: PrescriptionsCreateWithoutPatientsInput!
  where: PrescriptionsWhereUniqueInput!
}

input PrescriptionsCreateWithoutConsultationsInput {
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutPrescriptionsInput
  id: String
  instructions: String
  is_signed: Boolean!
  medications: MedicationsCreateNestedManyWithoutPrescriptionsInput
  patients: PatientsCreateNestedOneWithoutPrescriptionsInput!
  section: String
  status: prescriptions_status_enum!
  updated_at: DateTimeISO
}

input PrescriptionsCreateWithoutDoctorsInput {
  consultations: ConsultationsCreateNestedManyWithoutPrescriptionsInput
  date: DateTimeISO!
  id: String
  instructions: String
  is_signed: Boolean!
  medications: MedicationsCreateNestedManyWithoutPrescriptionsInput
  patients: PatientsCreateNestedOneWithoutPrescriptionsInput!
  section: String
  status: prescriptions_status_enum!
  updated_at: DateTimeISO
}

input PrescriptionsCreateWithoutMedicationsInput {
  consultations: ConsultationsCreateNestedManyWithoutPrescriptionsInput
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutPrescriptionsInput
  id: String
  instructions: String
  is_signed: Boolean!
  patients: PatientsCreateNestedOneWithoutPrescriptionsInput!
  section: String
  status: prescriptions_status_enum!
  updated_at: DateTimeISO
}

input PrescriptionsCreateWithoutPatientsInput {
  consultations: ConsultationsCreateNestedManyWithoutPrescriptionsInput
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutPrescriptionsInput
  id: String
  instructions: String
  is_signed: Boolean!
  medications: MedicationsCreateNestedManyWithoutPrescriptionsInput
  section: String
  status: prescriptions_status_enum!
  updated_at: DateTimeISO
}

type PrescriptionsGroupBy {
  _count: PrescriptionsCountAggregate
  _max: PrescriptionsMaxAggregate
  _min: PrescriptionsMinAggregate
  date: DateTimeISO!
  doctor_id: String
  id: String!
  instructions: String
  is_signed: Boolean!
  patient_id: String!
  section: String
  status: prescriptions_status_enum!
  updated_at: DateTimeISO!
}

input PrescriptionsListRelationFilter {
  every: PrescriptionsWhereInput
  none: PrescriptionsWhereInput
  some: PrescriptionsWhereInput
}

type PrescriptionsMaxAggregate {
  date: DateTimeISO
  doctor_id: String
  id: String
  instructions: String
  is_signed: Boolean
  patient_id: String
  section: String
  status: prescriptions_status_enum
  updated_at: DateTimeISO
}

input PrescriptionsMaxOrderByAggregateInput {
  date: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  instructions: SortOrder
  is_signed: SortOrder
  patient_id: SortOrder
  section: SortOrder
  status: SortOrder
  updated_at: SortOrder
}

type PrescriptionsMinAggregate {
  date: DateTimeISO
  doctor_id: String
  id: String
  instructions: String
  is_signed: Boolean
  patient_id: String
  section: String
  status: prescriptions_status_enum
  updated_at: DateTimeISO
}

input PrescriptionsMinOrderByAggregateInput {
  date: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  instructions: SortOrder
  is_signed: SortOrder
  patient_id: SortOrder
  section: SortOrder
  status: SortOrder
  updated_at: SortOrder
}

input PrescriptionsNullableRelationFilter {
  is: PrescriptionsWhereInput
  isNot: PrescriptionsWhereInput
}

input PrescriptionsOrderByRelationAggregateInput {
  _count: SortOrder
}

input PrescriptionsOrderByWithAggregationInput {
  _count: PrescriptionsCountOrderByAggregateInput
  _max: PrescriptionsMaxOrderByAggregateInput
  _min: PrescriptionsMinOrderByAggregateInput
  date: SortOrder
  doctor_id: SortOrderInput
  id: SortOrder
  instructions: SortOrderInput
  is_signed: SortOrder
  patient_id: SortOrder
  section: SortOrderInput
  status: SortOrder
  updated_at: SortOrder
}

input PrescriptionsOrderByWithRelationInput {
  consultations: ConsultationsOrderByRelationAggregateInput
  date: SortOrder
  doctor_id: SortOrderInput
  doctors: DoctorsOrderByWithRelationInput
  id: SortOrder
  instructions: SortOrderInput
  is_signed: SortOrder
  medications: MedicationsOrderByRelationAggregateInput
  patient_id: SortOrder
  patients: PatientsOrderByWithRelationInput
  section: SortOrderInput
  status: SortOrder
  updated_at: SortOrder
}

input PrescriptionsRelationFilter {
  is: PrescriptionsWhereInput
  isNot: PrescriptionsWhereInput
}

enum PrescriptionsScalarFieldEnum {
  date
  doctor_id
  id
  instructions
  is_signed
  patient_id
  section
  status
  updated_at
}

input PrescriptionsScalarWhereInput {
  AND: [PrescriptionsScalarWhereInput!]
  NOT: [PrescriptionsScalarWhereInput!]
  OR: [PrescriptionsScalarWhereInput!]
  date: DateTimeFilter
  doctor_id: UuidNullableFilter
  id: UuidFilter
  instructions: StringNullableFilter
  is_signed: BoolFilter
  patient_id: UuidFilter
  section: StringNullableFilter
  status: Enumprescriptions_status_enumFilter
  updated_at: DateTimeFilter
}

input PrescriptionsScalarWhereWithAggregatesInput {
  AND: [PrescriptionsScalarWhereWithAggregatesInput!]
  NOT: [PrescriptionsScalarWhereWithAggregatesInput!]
  OR: [PrescriptionsScalarWhereWithAggregatesInput!]
  date: DateTimeWithAggregatesFilter
  doctor_id: UuidNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  instructions: StringNullableWithAggregatesFilter
  is_signed: BoolWithAggregatesFilter
  patient_id: UuidWithAggregatesFilter
  section: StringNullableWithAggregatesFilter
  status: Enumprescriptions_status_enumWithAggregatesFilter
  updated_at: DateTimeWithAggregatesFilter
}

input PrescriptionsUpdateInput {
  consultations: ConsultationsUpdateManyWithoutPrescriptionsNestedInput
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutPrescriptionsNestedInput
  id: StringFieldUpdateOperationsInput
  instructions: NullableStringFieldUpdateOperationsInput
  is_signed: BoolFieldUpdateOperationsInput
  medications: MedicationsUpdateManyWithoutPrescriptionsNestedInput
  patients: PatientsUpdateOneRequiredWithoutPrescriptionsNestedInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumprescriptions_status_enumFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input PrescriptionsUpdateManyMutationInput {
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instructions: NullableStringFieldUpdateOperationsInput
  is_signed: BoolFieldUpdateOperationsInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumprescriptions_status_enumFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input PrescriptionsUpdateManyWithWhereWithoutDoctorsInput {
  data: PrescriptionsUpdateManyMutationInput!
  where: PrescriptionsScalarWhereInput!
}

input PrescriptionsUpdateManyWithWhereWithoutPatientsInput {
  data: PrescriptionsUpdateManyMutationInput!
  where: PrescriptionsScalarWhereInput!
}

input PrescriptionsUpdateManyWithoutDoctorsNestedInput {
  connect: [PrescriptionsWhereUniqueInput!]
  connectOrCreate: [PrescriptionsCreateOrConnectWithoutDoctorsInput!]
  create: [PrescriptionsCreateWithoutDoctorsInput!]
  createMany: PrescriptionsCreateManyDoctorsInputEnvelope
  delete: [PrescriptionsWhereUniqueInput!]
  deleteMany: [PrescriptionsScalarWhereInput!]
  disconnect: [PrescriptionsWhereUniqueInput!]
  set: [PrescriptionsWhereUniqueInput!]
  update: [PrescriptionsUpdateWithWhereUniqueWithoutDoctorsInput!]
  updateMany: [PrescriptionsUpdateManyWithWhereWithoutDoctorsInput!]
  upsert: [PrescriptionsUpsertWithWhereUniqueWithoutDoctorsInput!]
}

input PrescriptionsUpdateManyWithoutPatientsNestedInput {
  connect: [PrescriptionsWhereUniqueInput!]
  connectOrCreate: [PrescriptionsCreateOrConnectWithoutPatientsInput!]
  create: [PrescriptionsCreateWithoutPatientsInput!]
  createMany: PrescriptionsCreateManyPatientsInputEnvelope
  delete: [PrescriptionsWhereUniqueInput!]
  deleteMany: [PrescriptionsScalarWhereInput!]
  disconnect: [PrescriptionsWhereUniqueInput!]
  set: [PrescriptionsWhereUniqueInput!]
  update: [PrescriptionsUpdateWithWhereUniqueWithoutPatientsInput!]
  updateMany: [PrescriptionsUpdateManyWithWhereWithoutPatientsInput!]
  upsert: [PrescriptionsUpsertWithWhereUniqueWithoutPatientsInput!]
}

input PrescriptionsUpdateOneRequiredWithoutMedicationsNestedInput {
  connect: PrescriptionsWhereUniqueInput
  connectOrCreate: PrescriptionsCreateOrConnectWithoutMedicationsInput
  create: PrescriptionsCreateWithoutMedicationsInput
  update: PrescriptionsUpdateToOneWithWhereWithoutMedicationsInput
  upsert: PrescriptionsUpsertWithoutMedicationsInput
}

input PrescriptionsUpdateOneWithoutConsultationsNestedInput {
  connect: PrescriptionsWhereUniqueInput
  connectOrCreate: PrescriptionsCreateOrConnectWithoutConsultationsInput
  create: PrescriptionsCreateWithoutConsultationsInput
  delete: PrescriptionsWhereInput
  disconnect: PrescriptionsWhereInput
  update: PrescriptionsUpdateToOneWithWhereWithoutConsultationsInput
  upsert: PrescriptionsUpsertWithoutConsultationsInput
}

input PrescriptionsUpdateToOneWithWhereWithoutConsultationsInput {
  data: PrescriptionsUpdateWithoutConsultationsInput!
  where: PrescriptionsWhereInput
}

input PrescriptionsUpdateToOneWithWhereWithoutMedicationsInput {
  data: PrescriptionsUpdateWithoutMedicationsInput!
  where: PrescriptionsWhereInput
}

input PrescriptionsUpdateWithWhereUniqueWithoutDoctorsInput {
  data: PrescriptionsUpdateWithoutDoctorsInput!
  where: PrescriptionsWhereUniqueInput!
}

input PrescriptionsUpdateWithWhereUniqueWithoutPatientsInput {
  data: PrescriptionsUpdateWithoutPatientsInput!
  where: PrescriptionsWhereUniqueInput!
}

input PrescriptionsUpdateWithoutConsultationsInput {
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutPrescriptionsNestedInput
  id: StringFieldUpdateOperationsInput
  instructions: NullableStringFieldUpdateOperationsInput
  is_signed: BoolFieldUpdateOperationsInput
  medications: MedicationsUpdateManyWithoutPrescriptionsNestedInput
  patients: PatientsUpdateOneRequiredWithoutPrescriptionsNestedInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumprescriptions_status_enumFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input PrescriptionsUpdateWithoutDoctorsInput {
  consultations: ConsultationsUpdateManyWithoutPrescriptionsNestedInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instructions: NullableStringFieldUpdateOperationsInput
  is_signed: BoolFieldUpdateOperationsInput
  medications: MedicationsUpdateManyWithoutPrescriptionsNestedInput
  patients: PatientsUpdateOneRequiredWithoutPrescriptionsNestedInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumprescriptions_status_enumFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input PrescriptionsUpdateWithoutMedicationsInput {
  consultations: ConsultationsUpdateManyWithoutPrescriptionsNestedInput
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutPrescriptionsNestedInput
  id: StringFieldUpdateOperationsInput
  instructions: NullableStringFieldUpdateOperationsInput
  is_signed: BoolFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutPrescriptionsNestedInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumprescriptions_status_enumFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input PrescriptionsUpdateWithoutPatientsInput {
  consultations: ConsultationsUpdateManyWithoutPrescriptionsNestedInput
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutPrescriptionsNestedInput
  id: StringFieldUpdateOperationsInput
  instructions: NullableStringFieldUpdateOperationsInput
  is_signed: BoolFieldUpdateOperationsInput
  medications: MedicationsUpdateManyWithoutPrescriptionsNestedInput
  section: NullableStringFieldUpdateOperationsInput
  status: Enumprescriptions_status_enumFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input PrescriptionsUpsertWithWhereUniqueWithoutDoctorsInput {
  create: PrescriptionsCreateWithoutDoctorsInput!
  update: PrescriptionsUpdateWithoutDoctorsInput!
  where: PrescriptionsWhereUniqueInput!
}

input PrescriptionsUpsertWithWhereUniqueWithoutPatientsInput {
  create: PrescriptionsCreateWithoutPatientsInput!
  update: PrescriptionsUpdateWithoutPatientsInput!
  where: PrescriptionsWhereUniqueInput!
}

input PrescriptionsUpsertWithoutConsultationsInput {
  create: PrescriptionsCreateWithoutConsultationsInput!
  update: PrescriptionsUpdateWithoutConsultationsInput!
  where: PrescriptionsWhereInput
}

input PrescriptionsUpsertWithoutMedicationsInput {
  create: PrescriptionsCreateWithoutMedicationsInput!
  update: PrescriptionsUpdateWithoutMedicationsInput!
  where: PrescriptionsWhereInput
}

input PrescriptionsWhereInput {
  AND: [PrescriptionsWhereInput!]
  NOT: [PrescriptionsWhereInput!]
  OR: [PrescriptionsWhereInput!]
  consultations: ConsultationsListRelationFilter
  date: DateTimeFilter
  doctor_id: UuidNullableFilter
  doctors: DoctorsNullableRelationFilter
  id: UuidFilter
  instructions: StringNullableFilter
  is_signed: BoolFilter
  medications: MedicationsListRelationFilter
  patient_id: UuidFilter
  patients: PatientsRelationFilter
  section: StringNullableFilter
  status: Enumprescriptions_status_enumFilter
  updated_at: DateTimeFilter
}

input PrescriptionsWhereUniqueInput {
  AND: [PrescriptionsWhereInput!]
  NOT: [PrescriptionsWhereInput!]
  OR: [PrescriptionsWhereInput!]
  consultations: ConsultationsListRelationFilter
  date: DateTimeFilter
  doctor_id: UuidNullableFilter
  doctors: DoctorsNullableRelationFilter
  id: String
  instructions: StringNullableFilter
  is_signed: BoolFilter
  medications: MedicationsListRelationFilter
  patient_id: UuidFilter
  patients: PatientsRelationFilter
  section: StringNullableFilter
  status: Enumprescriptions_status_enumFilter
  updated_at: DateTimeFilter
}

type Query {
  aggregateAnalysis_results(cursor: Analysis_resultsWhereUniqueInput, orderBy: [Analysis_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Analysis_resultsWhereInput): AggregateAnalysis_results!
  aggregateAuthorizations(cursor: AuthorizationsWhereUniqueInput, orderBy: [AuthorizationsOrderByWithRelationInput!], skip: Int, take: Int, where: AuthorizationsWhereInput): AggregateAuthorizations!
  aggregateCertificates(cursor: CertificatesWhereUniqueInput, orderBy: [CertificatesOrderByWithRelationInput!], skip: Int, take: Int, where: CertificatesWhereInput): AggregateCertificates!
  aggregateCliniques(cursor: CliniquesWhereUniqueInput, orderBy: [CliniquesOrderByWithRelationInput!], skip: Int, take: Int, where: CliniquesWhereInput): AggregateCliniques!
  aggregateConsultations(cursor: ConsultationsWhereUniqueInput, orderBy: [ConsultationsOrderByWithRelationInput!], skip: Int, take: Int, where: ConsultationsWhereInput): AggregateConsultations!
  aggregateCtscan_results(cursor: Ctscan_resultsWhereUniqueInput, orderBy: [Ctscan_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Ctscan_resultsWhereInput): AggregateCtscan_results!
  aggregateDoctors(cursor: DoctorsWhereUniqueInput, orderBy: [DoctorsOrderByWithRelationInput!], skip: Int, take: Int, where: DoctorsWhereInput): AggregateDoctors!
  aggregateGeneralMedicalRecords(cursor: GeneralMedicalRecordsWhereUniqueInput, orderBy: [GeneralMedicalRecordsOrderByWithRelationInput!], skip: Int, take: Int, where: GeneralMedicalRecordsWhereInput): AggregateGeneralMedicalRecords!
  aggregateHopitaux(cursor: HopitauxWhereUniqueInput, orderBy: [HopitauxOrderByWithRelationInput!], skip: Int, take: Int, where: HopitauxWhereInput): AggregateHopitaux!
  aggregateInstituts_medicaux(cursor: Instituts_medicauxWhereUniqueInput, orderBy: [Instituts_medicauxOrderByWithRelationInput!], skip: Int, take: Int, where: Instituts_medicauxWhereInput): AggregateInstituts_medicaux!
  aggregateLab_attachments(cursor: Lab_attachmentsWhereUniqueInput, orderBy: [Lab_attachmentsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_attachmentsWhereInput): AggregateLab_attachments!
  aggregateLab_documents(cursor: Lab_documentsWhereUniqueInput, orderBy: [Lab_documentsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_documentsWhereInput): AggregateLab_documents!
  aggregateLab_requests(cursor: Lab_requestsWhereUniqueInput, orderBy: [Lab_requestsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_requestsWhereInput): AggregateLab_requests!
  aggregateLab_results(cursor: Lab_resultsWhereUniqueInput, orderBy: [Lab_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_resultsWhereInput): AggregateLab_results!
  aggregateLaboratories(cursor: LaboratoriesWhereUniqueInput, orderBy: [LaboratoriesOrderByWithRelationInput!], skip: Int, take: Int, where: LaboratoriesWhereInput): AggregateLaboratories!
  aggregateMedications(cursor: MedicationsWhereUniqueInput, orderBy: [MedicationsOrderByWithRelationInput!], skip: Int, take: Int, where: MedicationsWhereInput): AggregateMedications!
  aggregateMessage(cursor: MessageWhereUniqueInput, orderBy: [MessageOrderByWithRelationInput!], skip: Int, take: Int, where: MessageWhereInput): AggregateMessage!
  aggregateMessageAttachment(cursor: MessageAttachmentWhereUniqueInput, orderBy: [MessageAttachmentOrderByWithRelationInput!], skip: Int, take: Int, where: MessageAttachmentWhereInput): AggregateMessageAttachment!
  aggregatePatients(cursor: PatientsWhereUniqueInput, orderBy: [PatientsOrderByWithRelationInput!], skip: Int, take: Int, where: PatientsWhereInput): AggregatePatients!
  aggregatePharmacies(cursor: PharmaciesWhereUniqueInput, orderBy: [PharmaciesOrderByWithRelationInput!], skip: Int, take: Int, where: PharmaciesWhereInput): AggregatePharmacies!
  aggregatePrescriptions(cursor: PrescriptionsWhereUniqueInput, orderBy: [PrescriptionsOrderByWithRelationInput!], skip: Int, take: Int, where: PrescriptionsWhereInput): AggregatePrescriptions!
  aggregateRdv_requests(cursor: Rdv_requestsWhereUniqueInput, orderBy: [Rdv_requestsOrderByWithRelationInput!], skip: Int, take: Int, where: Rdv_requestsWhereInput): AggregateRdv_requests!
  aggregateRdvs(cursor: RdvsWhereUniqueInput, orderBy: [RdvsOrderByWithRelationInput!], skip: Int, take: Int, where: RdvsWhereInput): AggregateRdvs!
  aggregateUsers(cursor: UsersWhereUniqueInput, orderBy: [UsersOrderByWithRelationInput!], skip: Int, take: Int, where: UsersWhereInput): AggregateUsers!
  aggregateVerification_tokens(cursor: Verification_tokensWhereUniqueInput, orderBy: [Verification_tokensOrderByWithRelationInput!], skip: Int, take: Int, where: Verification_tokensWhereInput): AggregateVerification_tokens!
  aggregateXray_results(cursor: Xray_resultsWhereUniqueInput, orderBy: [Xray_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Xray_resultsWhereInput): AggregateXray_results!
  findFirstAnalysis_results(cursor: Analysis_resultsWhereUniqueInput, distinct: [Analysis_resultsScalarFieldEnum!], orderBy: [Analysis_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Analysis_resultsWhereInput): Analysis_results
  findFirstAnalysis_resultsOrThrow(cursor: Analysis_resultsWhereUniqueInput, distinct: [Analysis_resultsScalarFieldEnum!], orderBy: [Analysis_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Analysis_resultsWhereInput): Analysis_results
  findFirstAuthorizations(cursor: AuthorizationsWhereUniqueInput, distinct: [AuthorizationsScalarFieldEnum!], orderBy: [AuthorizationsOrderByWithRelationInput!], skip: Int, take: Int, where: AuthorizationsWhereInput): Authorizations
  findFirstAuthorizationsOrThrow(cursor: AuthorizationsWhereUniqueInput, distinct: [AuthorizationsScalarFieldEnum!], orderBy: [AuthorizationsOrderByWithRelationInput!], skip: Int, take: Int, where: AuthorizationsWhereInput): Authorizations
  findFirstCertificates(cursor: CertificatesWhereUniqueInput, distinct: [CertificatesScalarFieldEnum!], orderBy: [CertificatesOrderByWithRelationInput!], skip: Int, take: Int, where: CertificatesWhereInput): Certificates
  findFirstCertificatesOrThrow(cursor: CertificatesWhereUniqueInput, distinct: [CertificatesScalarFieldEnum!], orderBy: [CertificatesOrderByWithRelationInput!], skip: Int, take: Int, where: CertificatesWhereInput): Certificates
  findFirstCliniques(cursor: CliniquesWhereUniqueInput, distinct: [CliniquesScalarFieldEnum!], orderBy: [CliniquesOrderByWithRelationInput!], skip: Int, take: Int, where: CliniquesWhereInput): Cliniques
  findFirstCliniquesOrThrow(cursor: CliniquesWhereUniqueInput, distinct: [CliniquesScalarFieldEnum!], orderBy: [CliniquesOrderByWithRelationInput!], skip: Int, take: Int, where: CliniquesWhereInput): Cliniques
  findFirstConsultations(cursor: ConsultationsWhereUniqueInput, distinct: [ConsultationsScalarFieldEnum!], orderBy: [ConsultationsOrderByWithRelationInput!], skip: Int, take: Int, where: ConsultationsWhereInput): Consultations
  findFirstConsultationsOrThrow(cursor: ConsultationsWhereUniqueInput, distinct: [ConsultationsScalarFieldEnum!], orderBy: [ConsultationsOrderByWithRelationInput!], skip: Int, take: Int, where: ConsultationsWhereInput): Consultations
  findFirstCtscan_results(cursor: Ctscan_resultsWhereUniqueInput, distinct: [Ctscan_resultsScalarFieldEnum!], orderBy: [Ctscan_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Ctscan_resultsWhereInput): Ctscan_results
  findFirstCtscan_resultsOrThrow(cursor: Ctscan_resultsWhereUniqueInput, distinct: [Ctscan_resultsScalarFieldEnum!], orderBy: [Ctscan_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Ctscan_resultsWhereInput): Ctscan_results
  findFirstDoctors(cursor: DoctorsWhereUniqueInput, distinct: [DoctorsScalarFieldEnum!], orderBy: [DoctorsOrderByWithRelationInput!], skip: Int, take: Int, where: DoctorsWhereInput): Doctors
  findFirstDoctorsOrThrow(cursor: DoctorsWhereUniqueInput, distinct: [DoctorsScalarFieldEnum!], orderBy: [DoctorsOrderByWithRelationInput!], skip: Int, take: Int, where: DoctorsWhereInput): Doctors
  findFirstGeneralMedicalRecords(cursor: GeneralMedicalRecordsWhereUniqueInput, distinct: [GeneralMedicalRecordsScalarFieldEnum!], orderBy: [GeneralMedicalRecordsOrderByWithRelationInput!], skip: Int, take: Int, where: GeneralMedicalRecordsWhereInput): GeneralMedicalRecords
  findFirstGeneralMedicalRecordsOrThrow(cursor: GeneralMedicalRecordsWhereUniqueInput, distinct: [GeneralMedicalRecordsScalarFieldEnum!], orderBy: [GeneralMedicalRecordsOrderByWithRelationInput!], skip: Int, take: Int, where: GeneralMedicalRecordsWhereInput): GeneralMedicalRecords
  findFirstHopitaux(cursor: HopitauxWhereUniqueInput, distinct: [HopitauxScalarFieldEnum!], orderBy: [HopitauxOrderByWithRelationInput!], skip: Int, take: Int, where: HopitauxWhereInput): Hopitaux
  findFirstHopitauxOrThrow(cursor: HopitauxWhereUniqueInput, distinct: [HopitauxScalarFieldEnum!], orderBy: [HopitauxOrderByWithRelationInput!], skip: Int, take: Int, where: HopitauxWhereInput): Hopitaux
  findFirstInstituts_medicaux(cursor: Instituts_medicauxWhereUniqueInput, distinct: [Instituts_medicauxScalarFieldEnum!], orderBy: [Instituts_medicauxOrderByWithRelationInput!], skip: Int, take: Int, where: Instituts_medicauxWhereInput): Instituts_medicaux
  findFirstInstituts_medicauxOrThrow(cursor: Instituts_medicauxWhereUniqueInput, distinct: [Instituts_medicauxScalarFieldEnum!], orderBy: [Instituts_medicauxOrderByWithRelationInput!], skip: Int, take: Int, where: Instituts_medicauxWhereInput): Instituts_medicaux
  findFirstLab_attachments(cursor: Lab_attachmentsWhereUniqueInput, distinct: [Lab_attachmentsScalarFieldEnum!], orderBy: [Lab_attachmentsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_attachmentsWhereInput): Lab_attachments
  findFirstLab_attachmentsOrThrow(cursor: Lab_attachmentsWhereUniqueInput, distinct: [Lab_attachmentsScalarFieldEnum!], orderBy: [Lab_attachmentsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_attachmentsWhereInput): Lab_attachments
  findFirstLab_documents(cursor: Lab_documentsWhereUniqueInput, distinct: [Lab_documentsScalarFieldEnum!], orderBy: [Lab_documentsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_documentsWhereInput): Lab_documents
  findFirstLab_documentsOrThrow(cursor: Lab_documentsWhereUniqueInput, distinct: [Lab_documentsScalarFieldEnum!], orderBy: [Lab_documentsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_documentsWhereInput): Lab_documents
  findFirstLab_requests(cursor: Lab_requestsWhereUniqueInput, distinct: [Lab_requestsScalarFieldEnum!], orderBy: [Lab_requestsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_requestsWhereInput): Lab_requests
  findFirstLab_requestsOrThrow(cursor: Lab_requestsWhereUniqueInput, distinct: [Lab_requestsScalarFieldEnum!], orderBy: [Lab_requestsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_requestsWhereInput): Lab_requests
  findFirstLab_results(cursor: Lab_resultsWhereUniqueInput, distinct: [Lab_resultsScalarFieldEnum!], orderBy: [Lab_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_resultsWhereInput): Lab_results
  findFirstLab_resultsOrThrow(cursor: Lab_resultsWhereUniqueInput, distinct: [Lab_resultsScalarFieldEnum!], orderBy: [Lab_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_resultsWhereInput): Lab_results
  findFirstLaboratories(cursor: LaboratoriesWhereUniqueInput, distinct: [LaboratoriesScalarFieldEnum!], orderBy: [LaboratoriesOrderByWithRelationInput!], skip: Int, take: Int, where: LaboratoriesWhereInput): Laboratories
  findFirstLaboratoriesOrThrow(cursor: LaboratoriesWhereUniqueInput, distinct: [LaboratoriesScalarFieldEnum!], orderBy: [LaboratoriesOrderByWithRelationInput!], skip: Int, take: Int, where: LaboratoriesWhereInput): Laboratories
  findFirstMedications(cursor: MedicationsWhereUniqueInput, distinct: [MedicationsScalarFieldEnum!], orderBy: [MedicationsOrderByWithRelationInput!], skip: Int, take: Int, where: MedicationsWhereInput): Medications
  findFirstMedicationsOrThrow(cursor: MedicationsWhereUniqueInput, distinct: [MedicationsScalarFieldEnum!], orderBy: [MedicationsOrderByWithRelationInput!], skip: Int, take: Int, where: MedicationsWhereInput): Medications
  findFirstMessage(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum!], orderBy: [MessageOrderByWithRelationInput!], skip: Int, take: Int, where: MessageWhereInput): Message
  findFirstMessageAttachment(cursor: MessageAttachmentWhereUniqueInput, distinct: [MessageAttachmentScalarFieldEnum!], orderBy: [MessageAttachmentOrderByWithRelationInput!], skip: Int, take: Int, where: MessageAttachmentWhereInput): MessageAttachment
  findFirstMessageAttachmentOrThrow(cursor: MessageAttachmentWhereUniqueInput, distinct: [MessageAttachmentScalarFieldEnum!], orderBy: [MessageAttachmentOrderByWithRelationInput!], skip: Int, take: Int, where: MessageAttachmentWhereInput): MessageAttachment
  findFirstMessageOrThrow(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum!], orderBy: [MessageOrderByWithRelationInput!], skip: Int, take: Int, where: MessageWhereInput): Message
  findFirstPatients(cursor: PatientsWhereUniqueInput, distinct: [PatientsScalarFieldEnum!], orderBy: [PatientsOrderByWithRelationInput!], skip: Int, take: Int, where: PatientsWhereInput): Patients
  findFirstPatientsOrThrow(cursor: PatientsWhereUniqueInput, distinct: [PatientsScalarFieldEnum!], orderBy: [PatientsOrderByWithRelationInput!], skip: Int, take: Int, where: PatientsWhereInput): Patients
  findFirstPharmacies(cursor: PharmaciesWhereUniqueInput, distinct: [PharmaciesScalarFieldEnum!], orderBy: [PharmaciesOrderByWithRelationInput!], skip: Int, take: Int, where: PharmaciesWhereInput): Pharmacies
  findFirstPharmaciesOrThrow(cursor: PharmaciesWhereUniqueInput, distinct: [PharmaciesScalarFieldEnum!], orderBy: [PharmaciesOrderByWithRelationInput!], skip: Int, take: Int, where: PharmaciesWhereInput): Pharmacies
  findFirstPrescriptions(cursor: PrescriptionsWhereUniqueInput, distinct: [PrescriptionsScalarFieldEnum!], orderBy: [PrescriptionsOrderByWithRelationInput!], skip: Int, take: Int, where: PrescriptionsWhereInput): Prescriptions
  findFirstPrescriptionsOrThrow(cursor: PrescriptionsWhereUniqueInput, distinct: [PrescriptionsScalarFieldEnum!], orderBy: [PrescriptionsOrderByWithRelationInput!], skip: Int, take: Int, where: PrescriptionsWhereInput): Prescriptions
  findFirstRdv_requests(cursor: Rdv_requestsWhereUniqueInput, distinct: [Rdv_requestsScalarFieldEnum!], orderBy: [Rdv_requestsOrderByWithRelationInput!], skip: Int, take: Int, where: Rdv_requestsWhereInput): Rdv_requests
  findFirstRdv_requestsOrThrow(cursor: Rdv_requestsWhereUniqueInput, distinct: [Rdv_requestsScalarFieldEnum!], orderBy: [Rdv_requestsOrderByWithRelationInput!], skip: Int, take: Int, where: Rdv_requestsWhereInput): Rdv_requests
  findFirstRdvs(cursor: RdvsWhereUniqueInput, distinct: [RdvsScalarFieldEnum!], orderBy: [RdvsOrderByWithRelationInput!], skip: Int, take: Int, where: RdvsWhereInput): Rdvs
  findFirstRdvsOrThrow(cursor: RdvsWhereUniqueInput, distinct: [RdvsScalarFieldEnum!], orderBy: [RdvsOrderByWithRelationInput!], skip: Int, take: Int, where: RdvsWhereInput): Rdvs
  findFirstUsers(cursor: UsersWhereUniqueInput, distinct: [UsersScalarFieldEnum!], orderBy: [UsersOrderByWithRelationInput!], skip: Int, take: Int, where: UsersWhereInput): Users
  findFirstUsersOrThrow(cursor: UsersWhereUniqueInput, distinct: [UsersScalarFieldEnum!], orderBy: [UsersOrderByWithRelationInput!], skip: Int, take: Int, where: UsersWhereInput): Users
  findFirstVerification_tokens(cursor: Verification_tokensWhereUniqueInput, distinct: [Verification_tokensScalarFieldEnum!], orderBy: [Verification_tokensOrderByWithRelationInput!], skip: Int, take: Int, where: Verification_tokensWhereInput): Verification_tokens
  findFirstVerification_tokensOrThrow(cursor: Verification_tokensWhereUniqueInput, distinct: [Verification_tokensScalarFieldEnum!], orderBy: [Verification_tokensOrderByWithRelationInput!], skip: Int, take: Int, where: Verification_tokensWhereInput): Verification_tokens
  findFirstXray_results(cursor: Xray_resultsWhereUniqueInput, distinct: [Xray_resultsScalarFieldEnum!], orderBy: [Xray_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Xray_resultsWhereInput): Xray_results
  findFirstXray_resultsOrThrow(cursor: Xray_resultsWhereUniqueInput, distinct: [Xray_resultsScalarFieldEnum!], orderBy: [Xray_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Xray_resultsWhereInput): Xray_results
  findManyAnalysis_results(cursor: Analysis_resultsWhereUniqueInput, distinct: [Analysis_resultsScalarFieldEnum!], orderBy: [Analysis_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Analysis_resultsWhereInput): [Analysis_results!]!
  findManyAuthorizations(cursor: AuthorizationsWhereUniqueInput, distinct: [AuthorizationsScalarFieldEnum!], orderBy: [AuthorizationsOrderByWithRelationInput!], skip: Int, take: Int, where: AuthorizationsWhereInput): [Authorizations!]!
  findManyCertificates(cursor: CertificatesWhereUniqueInput, distinct: [CertificatesScalarFieldEnum!], orderBy: [CertificatesOrderByWithRelationInput!], skip: Int, take: Int, where: CertificatesWhereInput): [Certificates!]!
  findManyCliniques(cursor: CliniquesWhereUniqueInput, distinct: [CliniquesScalarFieldEnum!], orderBy: [CliniquesOrderByWithRelationInput!], skip: Int, take: Int, where: CliniquesWhereInput): [Cliniques!]!
  findManyConsultations(cursor: ConsultationsWhereUniqueInput, distinct: [ConsultationsScalarFieldEnum!], orderBy: [ConsultationsOrderByWithRelationInput!], skip: Int, take: Int, where: ConsultationsWhereInput): [Consultations!]!
  findManyCtscan_results(cursor: Ctscan_resultsWhereUniqueInput, distinct: [Ctscan_resultsScalarFieldEnum!], orderBy: [Ctscan_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Ctscan_resultsWhereInput): [Ctscan_results!]!
  findManyDoctors(cursor: DoctorsWhereUniqueInput, distinct: [DoctorsScalarFieldEnum!], orderBy: [DoctorsOrderByWithRelationInput!], skip: Int, take: Int, where: DoctorsWhereInput): [Doctors!]!
  findManyGeneralMedicalRecords(cursor: GeneralMedicalRecordsWhereUniqueInput, distinct: [GeneralMedicalRecordsScalarFieldEnum!], orderBy: [GeneralMedicalRecordsOrderByWithRelationInput!], skip: Int, take: Int, where: GeneralMedicalRecordsWhereInput): [GeneralMedicalRecords!]!
  findManyLab_attachments(cursor: Lab_attachmentsWhereUniqueInput, distinct: [Lab_attachmentsScalarFieldEnum!], orderBy: [Lab_attachmentsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_attachmentsWhereInput): [Lab_attachments!]!
  findManyLab_documents(cursor: Lab_documentsWhereUniqueInput, distinct: [Lab_documentsScalarFieldEnum!], orderBy: [Lab_documentsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_documentsWhereInput): [Lab_documents!]!
  findManyLab_requests(cursor: Lab_requestsWhereUniqueInput, distinct: [Lab_requestsScalarFieldEnum!], orderBy: [Lab_requestsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_requestsWhereInput): [Lab_requests!]!
  findManyLab_results(cursor: Lab_resultsWhereUniqueInput, distinct: [Lab_resultsScalarFieldEnum!], orderBy: [Lab_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Lab_resultsWhereInput): [Lab_results!]!
  findManyLaboratories(cursor: LaboratoriesWhereUniqueInput, distinct: [LaboratoriesScalarFieldEnum!], orderBy: [LaboratoriesOrderByWithRelationInput!], skip: Int, take: Int, where: LaboratoriesWhereInput): [Laboratories!]!
  findManyMedications(cursor: MedicationsWhereUniqueInput, distinct: [MedicationsScalarFieldEnum!], orderBy: [MedicationsOrderByWithRelationInput!], skip: Int, take: Int, where: MedicationsWhereInput): [Medications!]!
  findManyPatients(cursor: PatientsWhereUniqueInput, distinct: [PatientsScalarFieldEnum!], orderBy: [PatientsOrderByWithRelationInput!], skip: Int, take: Int, where: PatientsWhereInput): [Patients!]!
  findManyPharmacies(cursor: PharmaciesWhereUniqueInput, distinct: [PharmaciesScalarFieldEnum!], orderBy: [PharmaciesOrderByWithRelationInput!], skip: Int, take: Int, where: PharmaciesWhereInput): [Pharmacies!]!
  findManyPrescriptions(cursor: PrescriptionsWhereUniqueInput, distinct: [PrescriptionsScalarFieldEnum!], orderBy: [PrescriptionsOrderByWithRelationInput!], skip: Int, take: Int, where: PrescriptionsWhereInput): [Prescriptions!]!
  findManyRdv_requests(cursor: Rdv_requestsWhereUniqueInput, distinct: [Rdv_requestsScalarFieldEnum!], orderBy: [Rdv_requestsOrderByWithRelationInput!], skip: Int, take: Int, where: Rdv_requestsWhereInput): [Rdv_requests!]!
  findManyRdvs(cursor: RdvsWhereUniqueInput, distinct: [RdvsScalarFieldEnum!], orderBy: [RdvsOrderByWithRelationInput!], skip: Int, take: Int, where: RdvsWhereInput): [Rdvs!]!
  findManyUsers(cursor: UsersWhereUniqueInput, distinct: [UsersScalarFieldEnum!], orderBy: [UsersOrderByWithRelationInput!], skip: Int, take: Int, where: UsersWhereInput): [Users!]!
  findManyVerification_tokens(cursor: Verification_tokensWhereUniqueInput, distinct: [Verification_tokensScalarFieldEnum!], orderBy: [Verification_tokensOrderByWithRelationInput!], skip: Int, take: Int, where: Verification_tokensWhereInput): [Verification_tokens!]!
  findManyXray_results(cursor: Xray_resultsWhereUniqueInput, distinct: [Xray_resultsScalarFieldEnum!], orderBy: [Xray_resultsOrderByWithRelationInput!], skip: Int, take: Int, where: Xray_resultsWhereInput): [Xray_results!]!
  findUniqueAnalysis_results(where: Analysis_resultsWhereUniqueInput!): Analysis_results
  findUniqueAnalysis_resultsOrThrow(where: Analysis_resultsWhereUniqueInput!): Analysis_results
  findUniqueAuthorizations(where: AuthorizationsWhereUniqueInput!): Authorizations
  findUniqueAuthorizationsOrThrow(where: AuthorizationsWhereUniqueInput!): Authorizations
  findUniqueCertificates(where: CertificatesWhereUniqueInput!): Certificates
  findUniqueCertificatesOrThrow(where: CertificatesWhereUniqueInput!): Certificates
  findUniqueCliniques(where: CliniquesWhereUniqueInput!): Cliniques
  findUniqueCliniquesOrThrow(where: CliniquesWhereUniqueInput!): Cliniques
  findUniqueConsultations(where: ConsultationsWhereUniqueInput!): Consultations
  findUniqueConsultationsOrThrow(where: ConsultationsWhereUniqueInput!): Consultations
  findUniqueCtscan_results(where: Ctscan_resultsWhereUniqueInput!): Ctscan_results
  findUniqueCtscan_resultsOrThrow(where: Ctscan_resultsWhereUniqueInput!): Ctscan_results
  findUniqueDoctors(where: DoctorsWhereUniqueInput!): Doctors
  findUniqueDoctorsOrThrow(where: DoctorsWhereUniqueInput!): Doctors
  findUniqueGeneralMedicalRecords(where: GeneralMedicalRecordsWhereUniqueInput!): GeneralMedicalRecords
  findUniqueGeneralMedicalRecordsOrThrow(where: GeneralMedicalRecordsWhereUniqueInput!): GeneralMedicalRecords
  findUniqueLab_attachments(where: Lab_attachmentsWhereUniqueInput!): Lab_attachments
  findUniqueLab_attachmentsOrThrow(where: Lab_attachmentsWhereUniqueInput!): Lab_attachments
  findUniqueLab_documents(where: Lab_documentsWhereUniqueInput!): Lab_documents
  findUniqueLab_documentsOrThrow(where: Lab_documentsWhereUniqueInput!): Lab_documents
  findUniqueLab_requests(where: Lab_requestsWhereUniqueInput!): Lab_requests
  findUniqueLab_requestsOrThrow(where: Lab_requestsWhereUniqueInput!): Lab_requests
  findUniqueLab_results(where: Lab_resultsWhereUniqueInput!): Lab_results
  findUniqueLab_resultsOrThrow(where: Lab_resultsWhereUniqueInput!): Lab_results
  findUniqueLaboratories(where: LaboratoriesWhereUniqueInput!): Laboratories
  findUniqueLaboratoriesOrThrow(where: LaboratoriesWhereUniqueInput!): Laboratories
  findUniqueMedications(where: MedicationsWhereUniqueInput!): Medications
  findUniqueMedicationsOrThrow(where: MedicationsWhereUniqueInput!): Medications
  findUniquePatients(where: PatientsWhereUniqueInput!): Patients
  findUniquePatientsOrThrow(where: PatientsWhereUniqueInput!): Patients
  findUniquePharmacies(where: PharmaciesWhereUniqueInput!): Pharmacies
  findUniquePharmaciesOrThrow(where: PharmaciesWhereUniqueInput!): Pharmacies
  findUniquePrescriptions(where: PrescriptionsWhereUniqueInput!): Prescriptions
  findUniquePrescriptionsOrThrow(where: PrescriptionsWhereUniqueInput!): Prescriptions
  findUniqueRdv_requests(where: Rdv_requestsWhereUniqueInput!): Rdv_requests
  findUniqueRdv_requestsOrThrow(where: Rdv_requestsWhereUniqueInput!): Rdv_requests
  findUniqueRdvs(where: RdvsWhereUniqueInput!): Rdvs
  findUniqueRdvsOrThrow(where: RdvsWhereUniqueInput!): Rdvs
  findUniqueUsers(where: UsersWhereUniqueInput!): Users
  findUniqueUsersOrThrow(where: UsersWhereUniqueInput!): Users
  findUniqueVerification_tokens(where: Verification_tokensWhereUniqueInput!): Verification_tokens
  findUniqueVerification_tokensOrThrow(where: Verification_tokensWhereUniqueInput!): Verification_tokens
  findUniqueXray_results(where: Xray_resultsWhereUniqueInput!): Xray_results
  findUniqueXray_resultsOrThrow(where: Xray_resultsWhereUniqueInput!): Xray_results
  getHopitaux(where: HopitauxWhereUniqueInput!): Hopitaux
  getInstituts_medicaux(where: Instituts_medicauxWhereUniqueInput!): Instituts_medicaux
  getMessage(where: MessageWhereUniqueInput!): Message
  getMessageAttachment(where: MessageAttachmentWhereUniqueInput!): MessageAttachment
  groupByAnalysis_results(by: [Analysis_resultsScalarFieldEnum!]!, having: Analysis_resultsScalarWhereWithAggregatesInput, orderBy: [Analysis_resultsOrderByWithAggregationInput!], skip: Int, take: Int, where: Analysis_resultsWhereInput): [Analysis_resultsGroupBy!]!
  groupByAuthorizations(by: [AuthorizationsScalarFieldEnum!]!, having: AuthorizationsScalarWhereWithAggregatesInput, orderBy: [AuthorizationsOrderByWithAggregationInput!], skip: Int, take: Int, where: AuthorizationsWhereInput): [AuthorizationsGroupBy!]!
  groupByCertificates(by: [CertificatesScalarFieldEnum!]!, having: CertificatesScalarWhereWithAggregatesInput, orderBy: [CertificatesOrderByWithAggregationInput!], skip: Int, take: Int, where: CertificatesWhereInput): [CertificatesGroupBy!]!
  groupByCliniques(by: [CliniquesScalarFieldEnum!]!, having: CliniquesScalarWhereWithAggregatesInput, orderBy: [CliniquesOrderByWithAggregationInput!], skip: Int, take: Int, where: CliniquesWhereInput): [CliniquesGroupBy!]!
  groupByConsultations(by: [ConsultationsScalarFieldEnum!]!, having: ConsultationsScalarWhereWithAggregatesInput, orderBy: [ConsultationsOrderByWithAggregationInput!], skip: Int, take: Int, where: ConsultationsWhereInput): [ConsultationsGroupBy!]!
  groupByCtscan_results(by: [Ctscan_resultsScalarFieldEnum!]!, having: Ctscan_resultsScalarWhereWithAggregatesInput, orderBy: [Ctscan_resultsOrderByWithAggregationInput!], skip: Int, take: Int, where: Ctscan_resultsWhereInput): [Ctscan_resultsGroupBy!]!
  groupByDoctors(by: [DoctorsScalarFieldEnum!]!, having: DoctorsScalarWhereWithAggregatesInput, orderBy: [DoctorsOrderByWithAggregationInput!], skip: Int, take: Int, where: DoctorsWhereInput): [DoctorsGroupBy!]!
  groupByGeneralMedicalRecords(by: [GeneralMedicalRecordsScalarFieldEnum!]!, having: GeneralMedicalRecordsScalarWhereWithAggregatesInput, orderBy: [GeneralMedicalRecordsOrderByWithAggregationInput!], skip: Int, take: Int, where: GeneralMedicalRecordsWhereInput): [GeneralMedicalRecordsGroupBy!]!
  groupByHopitaux(by: [HopitauxScalarFieldEnum!]!, having: HopitauxScalarWhereWithAggregatesInput, orderBy: [HopitauxOrderByWithAggregationInput!], skip: Int, take: Int, where: HopitauxWhereInput): [HopitauxGroupBy!]!
  groupByInstituts_medicaux(by: [Instituts_medicauxScalarFieldEnum!]!, having: Instituts_medicauxScalarWhereWithAggregatesInput, orderBy: [Instituts_medicauxOrderByWithAggregationInput!], skip: Int, take: Int, where: Instituts_medicauxWhereInput): [Instituts_medicauxGroupBy!]!
  groupByLab_attachments(by: [Lab_attachmentsScalarFieldEnum!]!, having: Lab_attachmentsScalarWhereWithAggregatesInput, orderBy: [Lab_attachmentsOrderByWithAggregationInput!], skip: Int, take: Int, where: Lab_attachmentsWhereInput): [Lab_attachmentsGroupBy!]!
  groupByLab_documents(by: [Lab_documentsScalarFieldEnum!]!, having: Lab_documentsScalarWhereWithAggregatesInput, orderBy: [Lab_documentsOrderByWithAggregationInput!], skip: Int, take: Int, where: Lab_documentsWhereInput): [Lab_documentsGroupBy!]!
  groupByLab_requests(by: [Lab_requestsScalarFieldEnum!]!, having: Lab_requestsScalarWhereWithAggregatesInput, orderBy: [Lab_requestsOrderByWithAggregationInput!], skip: Int, take: Int, where: Lab_requestsWhereInput): [Lab_requestsGroupBy!]!
  groupByLab_results(by: [Lab_resultsScalarFieldEnum!]!, having: Lab_resultsScalarWhereWithAggregatesInput, orderBy: [Lab_resultsOrderByWithAggregationInput!], skip: Int, take: Int, where: Lab_resultsWhereInput): [Lab_resultsGroupBy!]!
  groupByLaboratories(by: [LaboratoriesScalarFieldEnum!]!, having: LaboratoriesScalarWhereWithAggregatesInput, orderBy: [LaboratoriesOrderByWithAggregationInput!], skip: Int, take: Int, where: LaboratoriesWhereInput): [LaboratoriesGroupBy!]!
  groupByMedications(by: [MedicationsScalarFieldEnum!]!, having: MedicationsScalarWhereWithAggregatesInput, orderBy: [MedicationsOrderByWithAggregationInput!], skip: Int, take: Int, where: MedicationsWhereInput): [MedicationsGroupBy!]!
  groupByMessage(by: [MessageScalarFieldEnum!]!, having: MessageScalarWhereWithAggregatesInput, orderBy: [MessageOrderByWithAggregationInput!], skip: Int, take: Int, where: MessageWhereInput): [MessageGroupBy!]!
  groupByMessageAttachment(by: [MessageAttachmentScalarFieldEnum!]!, having: MessageAttachmentScalarWhereWithAggregatesInput, orderBy: [MessageAttachmentOrderByWithAggregationInput!], skip: Int, take: Int, where: MessageAttachmentWhereInput): [MessageAttachmentGroupBy!]!
  groupByPatients(by: [PatientsScalarFieldEnum!]!, having: PatientsScalarWhereWithAggregatesInput, orderBy: [PatientsOrderByWithAggregationInput!], skip: Int, take: Int, where: PatientsWhereInput): [PatientsGroupBy!]!
  groupByPharmacies(by: [PharmaciesScalarFieldEnum!]!, having: PharmaciesScalarWhereWithAggregatesInput, orderBy: [PharmaciesOrderByWithAggregationInput!], skip: Int, take: Int, where: PharmaciesWhereInput): [PharmaciesGroupBy!]!
  groupByPrescriptions(by: [PrescriptionsScalarFieldEnum!]!, having: PrescriptionsScalarWhereWithAggregatesInput, orderBy: [PrescriptionsOrderByWithAggregationInput!], skip: Int, take: Int, where: PrescriptionsWhereInput): [PrescriptionsGroupBy!]!
  groupByRdv_requests(by: [Rdv_requestsScalarFieldEnum!]!, having: Rdv_requestsScalarWhereWithAggregatesInput, orderBy: [Rdv_requestsOrderByWithAggregationInput!], skip: Int, take: Int, where: Rdv_requestsWhereInput): [Rdv_requestsGroupBy!]!
  groupByRdvs(by: [RdvsScalarFieldEnum!]!, having: RdvsScalarWhereWithAggregatesInput, orderBy: [RdvsOrderByWithAggregationInput!], skip: Int, take: Int, where: RdvsWhereInput): [RdvsGroupBy!]!
  groupByUsers(by: [UsersScalarFieldEnum!]!, having: UsersScalarWhereWithAggregatesInput, orderBy: [UsersOrderByWithAggregationInput!], skip: Int, take: Int, where: UsersWhereInput): [UsersGroupBy!]!
  groupByVerification_tokens(by: [Verification_tokensScalarFieldEnum!]!, having: Verification_tokensScalarWhereWithAggregatesInput, orderBy: [Verification_tokensOrderByWithAggregationInput!], skip: Int, take: Int, where: Verification_tokensWhereInput): [Verification_tokensGroupBy!]!
  groupByXray_results(by: [Xray_resultsScalarFieldEnum!]!, having: Xray_resultsScalarWhereWithAggregatesInput, orderBy: [Xray_resultsOrderByWithAggregationInput!], skip: Int, take: Int, where: Xray_resultsWhereInput): [Xray_resultsGroupBy!]!
  hopitaux(where: HopitauxWhereUniqueInput!): Hopitaux
  hopitauxes(cursor: HopitauxWhereUniqueInput, distinct: [HopitauxScalarFieldEnum!], orderBy: [HopitauxOrderByWithRelationInput!], skip: Int, take: Int, where: HopitauxWhereInput): [Hopitaux!]!
  instituts_medicaux(where: Instituts_medicauxWhereUniqueInput!): Instituts_medicaux
  instituts_medicauxes(cursor: Instituts_medicauxWhereUniqueInput, distinct: [Instituts_medicauxScalarFieldEnum!], orderBy: [Instituts_medicauxOrderByWithRelationInput!], skip: Int, take: Int, where: Instituts_medicauxWhereInput): [Instituts_medicaux!]!
  message(where: MessageWhereUniqueInput!): Message
  messageAttachment(where: MessageAttachmentWhereUniqueInput!): MessageAttachment
  messageAttachments(cursor: MessageAttachmentWhereUniqueInput, distinct: [MessageAttachmentScalarFieldEnum!], orderBy: [MessageAttachmentOrderByWithRelationInput!], skip: Int, take: Int, where: MessageAttachmentWhereInput): [MessageAttachment!]!
  messages(cursor: MessageWhereUniqueInput, distinct: [MessageScalarFieldEnum!], orderBy: [MessageOrderByWithRelationInput!], skip: Int, take: Int, where: MessageWhereInput): [Message!]!
}

enum QueryMode {
  default
  insensitive
}

type Rdv_requests {
  Motif: String!
  Status: String!
  date: DateTimeISO!
  doctor_id: String
  doctors(where: DoctorsWhereInput): Doctors
  id: String!
  patient_id: String!
  patients: Patients!
  rdv_id: String
  rdvs_rdv_requests_rdv_idTordvs(where: RdvsWhereInput): Rdvs
  rdvs_rdvs_rdv_request_idTordv_requests(where: RdvsWhereInput): Rdvs
  time: DateTimeISO!
}

type Rdv_requestsCountAggregate {
  Motif: Int!
  Status: Int!
  _all: Int!
  date: Int!
  doctor_id: Int!
  id: Int!
  patient_id: Int!
  rdv_id: Int!
  time: Int!
}

input Rdv_requestsCountOrderByAggregateInput {
  Motif: SortOrder
  Status: SortOrder
  date: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  patient_id: SortOrder
  rdv_id: SortOrder
  time: SortOrder
}

input Rdv_requestsCreateInput {
  Motif: String!
  Status: String!
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutRdv_requestsInput
  id: String
  patients: PatientsCreateNestedOneWithoutRdv_requestsInput!
  rdvs_rdv_requests_rdv_idTordvs: RdvsCreateNestedOneWithoutRdv_requests_rdv_requests_rdv_idTordvsInput
  rdvs_rdvs_rdv_request_idTordv_requests: RdvsCreateNestedOneWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput
  time: DateTimeISO!
}

input Rdv_requestsCreateManyDoctorsInput {
  Motif: String!
  Status: String!
  date: DateTimeISO!
  id: String
  patient_id: String!
  rdv_id: String
  time: DateTimeISO!
}

input Rdv_requestsCreateManyDoctorsInputEnvelope {
  data: [Rdv_requestsCreateManyDoctorsInput!]!
  skipDuplicates: Boolean
}

input Rdv_requestsCreateManyInput {
  Motif: String!
  Status: String!
  date: DateTimeISO!
  doctor_id: String
  id: String
  patient_id: String!
  rdv_id: String
  time: DateTimeISO!
}

input Rdv_requestsCreateManyPatientsInput {
  Motif: String!
  Status: String!
  date: DateTimeISO!
  doctor_id: String
  id: String
  rdv_id: String
  time: DateTimeISO!
}

input Rdv_requestsCreateManyPatientsInputEnvelope {
  data: [Rdv_requestsCreateManyPatientsInput!]!
  skipDuplicates: Boolean
}

input Rdv_requestsCreateNestedManyWithoutDoctorsInput {
  connect: [Rdv_requestsWhereUniqueInput!]
  connectOrCreate: [Rdv_requestsCreateOrConnectWithoutDoctorsInput!]
  create: [Rdv_requestsCreateWithoutDoctorsInput!]
  createMany: Rdv_requestsCreateManyDoctorsInputEnvelope
}

input Rdv_requestsCreateNestedManyWithoutPatientsInput {
  connect: [Rdv_requestsWhereUniqueInput!]
  connectOrCreate: [Rdv_requestsCreateOrConnectWithoutPatientsInput!]
  create: [Rdv_requestsCreateWithoutPatientsInput!]
  createMany: Rdv_requestsCreateManyPatientsInputEnvelope
}

input Rdv_requestsCreateNestedOneWithoutRdvs_rdv_requests_rdv_idTordvsInput {
  connect: Rdv_requestsWhereUniqueInput
  connectOrCreate: Rdv_requestsCreateOrConnectWithoutRdvs_rdv_requests_rdv_idTordvsInput
  create: Rdv_requestsCreateWithoutRdvs_rdv_requests_rdv_idTordvsInput
}

input Rdv_requestsCreateNestedOneWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput {
  connect: Rdv_requestsWhereUniqueInput
  connectOrCreate: Rdv_requestsCreateOrConnectWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput
  create: Rdv_requestsCreateWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput
}

input Rdv_requestsCreateOrConnectWithoutDoctorsInput {
  create: Rdv_requestsCreateWithoutDoctorsInput!
  where: Rdv_requestsWhereUniqueInput!
}

input Rdv_requestsCreateOrConnectWithoutPatientsInput {
  create: Rdv_requestsCreateWithoutPatientsInput!
  where: Rdv_requestsWhereUniqueInput!
}

input Rdv_requestsCreateOrConnectWithoutRdvs_rdv_requests_rdv_idTordvsInput {
  create: Rdv_requestsCreateWithoutRdvs_rdv_requests_rdv_idTordvsInput!
  where: Rdv_requestsWhereUniqueInput!
}

input Rdv_requestsCreateOrConnectWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput {
  create: Rdv_requestsCreateWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput!
  where: Rdv_requestsWhereUniqueInput!
}

input Rdv_requestsCreateWithoutDoctorsInput {
  Motif: String!
  Status: String!
  date: DateTimeISO!
  id: String
  patients: PatientsCreateNestedOneWithoutRdv_requestsInput!
  rdvs_rdv_requests_rdv_idTordvs: RdvsCreateNestedOneWithoutRdv_requests_rdv_requests_rdv_idTordvsInput
  rdvs_rdvs_rdv_request_idTordv_requests: RdvsCreateNestedOneWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput
  time: DateTimeISO!
}

input Rdv_requestsCreateWithoutPatientsInput {
  Motif: String!
  Status: String!
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutRdv_requestsInput
  id: String
  rdvs_rdv_requests_rdv_idTordvs: RdvsCreateNestedOneWithoutRdv_requests_rdv_requests_rdv_idTordvsInput
  rdvs_rdvs_rdv_request_idTordv_requests: RdvsCreateNestedOneWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput
  time: DateTimeISO!
}

input Rdv_requestsCreateWithoutRdvs_rdv_requests_rdv_idTordvsInput {
  Motif: String!
  Status: String!
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutRdv_requestsInput
  id: String
  patients: PatientsCreateNestedOneWithoutRdv_requestsInput!
  rdvs_rdvs_rdv_request_idTordv_requests: RdvsCreateNestedOneWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput
  time: DateTimeISO!
}

input Rdv_requestsCreateWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput {
  Motif: String!
  Status: String!
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutRdv_requestsInput
  id: String
  patients: PatientsCreateNestedOneWithoutRdv_requestsInput!
  rdvs_rdv_requests_rdv_idTordvs: RdvsCreateNestedOneWithoutRdv_requests_rdv_requests_rdv_idTordvsInput
  time: DateTimeISO!
}

type Rdv_requestsGroupBy {
  Motif: String!
  Status: String!
  _count: Rdv_requestsCountAggregate
  _max: Rdv_requestsMaxAggregate
  _min: Rdv_requestsMinAggregate
  date: DateTimeISO!
  doctor_id: String
  id: String!
  patient_id: String!
  rdv_id: String
  time: DateTimeISO!
}

input Rdv_requestsListRelationFilter {
  every: Rdv_requestsWhereInput
  none: Rdv_requestsWhereInput
  some: Rdv_requestsWhereInput
}

type Rdv_requestsMaxAggregate {
  Motif: String
  Status: String
  date: DateTimeISO
  doctor_id: String
  id: String
  patient_id: String
  rdv_id: String
  time: DateTimeISO
}

input Rdv_requestsMaxOrderByAggregateInput {
  Motif: SortOrder
  Status: SortOrder
  date: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  patient_id: SortOrder
  rdv_id: SortOrder
  time: SortOrder
}

type Rdv_requestsMinAggregate {
  Motif: String
  Status: String
  date: DateTimeISO
  doctor_id: String
  id: String
  patient_id: String
  rdv_id: String
  time: DateTimeISO
}

input Rdv_requestsMinOrderByAggregateInput {
  Motif: SortOrder
  Status: SortOrder
  date: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  patient_id: SortOrder
  rdv_id: SortOrder
  time: SortOrder
}

input Rdv_requestsNullableRelationFilter {
  is: Rdv_requestsWhereInput
  isNot: Rdv_requestsWhereInput
}

input Rdv_requestsOrderByRelationAggregateInput {
  _count: SortOrder
}

input Rdv_requestsOrderByWithAggregationInput {
  Motif: SortOrder
  Status: SortOrder
  _count: Rdv_requestsCountOrderByAggregateInput
  _max: Rdv_requestsMaxOrderByAggregateInput
  _min: Rdv_requestsMinOrderByAggregateInput
  date: SortOrder
  doctor_id: SortOrderInput
  id: SortOrder
  patient_id: SortOrder
  rdv_id: SortOrderInput
  time: SortOrder
}

input Rdv_requestsOrderByWithRelationInput {
  Motif: SortOrder
  Status: SortOrder
  date: SortOrder
  doctor_id: SortOrderInput
  doctors: DoctorsOrderByWithRelationInput
  id: SortOrder
  patient_id: SortOrder
  patients: PatientsOrderByWithRelationInput
  rdv_id: SortOrderInput
  rdvs_rdv_requests_rdv_idTordvs: RdvsOrderByWithRelationInput
  rdvs_rdvs_rdv_request_idTordv_requests: RdvsOrderByWithRelationInput
  time: SortOrder
}

enum Rdv_requestsScalarFieldEnum {
  Motif
  Status
  date
  doctor_id
  id
  patient_id
  rdv_id
  time
}

input Rdv_requestsScalarWhereInput {
  AND: [Rdv_requestsScalarWhereInput!]
  Motif: StringFilter
  NOT: [Rdv_requestsScalarWhereInput!]
  OR: [Rdv_requestsScalarWhereInput!]
  Status: StringFilter
  date: DateTimeFilter
  doctor_id: UuidNullableFilter
  id: UuidFilter
  patient_id: UuidFilter
  rdv_id: UuidNullableFilter
  time: DateTimeFilter
}

input Rdv_requestsScalarWhereWithAggregatesInput {
  AND: [Rdv_requestsScalarWhereWithAggregatesInput!]
  Motif: StringWithAggregatesFilter
  NOT: [Rdv_requestsScalarWhereWithAggregatesInput!]
  OR: [Rdv_requestsScalarWhereWithAggregatesInput!]
  Status: StringWithAggregatesFilter
  date: DateTimeWithAggregatesFilter
  doctor_id: UuidNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  patient_id: UuidWithAggregatesFilter
  rdv_id: UuidNullableWithAggregatesFilter
  time: DateTimeWithAggregatesFilter
}

input Rdv_requestsUpdateInput {
  Motif: StringFieldUpdateOperationsInput
  Status: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutRdv_requestsNestedInput
  id: StringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutRdv_requestsNestedInput
  rdvs_rdv_requests_rdv_idTordvs: RdvsUpdateOneWithoutRdv_requests_rdv_requests_rdv_idTordvsNestedInput
  rdvs_rdvs_rdv_request_idTordv_requests: RdvsUpdateOneWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsNestedInput
  time: DateTimeFieldUpdateOperationsInput
}

input Rdv_requestsUpdateManyMutationInput {
  Motif: StringFieldUpdateOperationsInput
  Status: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  time: DateTimeFieldUpdateOperationsInput
}

input Rdv_requestsUpdateManyWithWhereWithoutDoctorsInput {
  data: Rdv_requestsUpdateManyMutationInput!
  where: Rdv_requestsScalarWhereInput!
}

input Rdv_requestsUpdateManyWithWhereWithoutPatientsInput {
  data: Rdv_requestsUpdateManyMutationInput!
  where: Rdv_requestsScalarWhereInput!
}

input Rdv_requestsUpdateManyWithoutDoctorsNestedInput {
  connect: [Rdv_requestsWhereUniqueInput!]
  connectOrCreate: [Rdv_requestsCreateOrConnectWithoutDoctorsInput!]
  create: [Rdv_requestsCreateWithoutDoctorsInput!]
  createMany: Rdv_requestsCreateManyDoctorsInputEnvelope
  delete: [Rdv_requestsWhereUniqueInput!]
  deleteMany: [Rdv_requestsScalarWhereInput!]
  disconnect: [Rdv_requestsWhereUniqueInput!]
  set: [Rdv_requestsWhereUniqueInput!]
  update: [Rdv_requestsUpdateWithWhereUniqueWithoutDoctorsInput!]
  updateMany: [Rdv_requestsUpdateManyWithWhereWithoutDoctorsInput!]
  upsert: [Rdv_requestsUpsertWithWhereUniqueWithoutDoctorsInput!]
}

input Rdv_requestsUpdateManyWithoutPatientsNestedInput {
  connect: [Rdv_requestsWhereUniqueInput!]
  connectOrCreate: [Rdv_requestsCreateOrConnectWithoutPatientsInput!]
  create: [Rdv_requestsCreateWithoutPatientsInput!]
  createMany: Rdv_requestsCreateManyPatientsInputEnvelope
  delete: [Rdv_requestsWhereUniqueInput!]
  deleteMany: [Rdv_requestsScalarWhereInput!]
  disconnect: [Rdv_requestsWhereUniqueInput!]
  set: [Rdv_requestsWhereUniqueInput!]
  update: [Rdv_requestsUpdateWithWhereUniqueWithoutPatientsInput!]
  updateMany: [Rdv_requestsUpdateManyWithWhereWithoutPatientsInput!]
  upsert: [Rdv_requestsUpsertWithWhereUniqueWithoutPatientsInput!]
}

input Rdv_requestsUpdateOneWithoutRdvs_rdv_requests_rdv_idTordvsNestedInput {
  connect: Rdv_requestsWhereUniqueInput
  connectOrCreate: Rdv_requestsCreateOrConnectWithoutRdvs_rdv_requests_rdv_idTordvsInput
  create: Rdv_requestsCreateWithoutRdvs_rdv_requests_rdv_idTordvsInput
  delete: Rdv_requestsWhereInput
  disconnect: Rdv_requestsWhereInput
  update: Rdv_requestsUpdateToOneWithWhereWithoutRdvs_rdv_requests_rdv_idTordvsInput
  upsert: Rdv_requestsUpsertWithoutRdvs_rdv_requests_rdv_idTordvsInput
}

input Rdv_requestsUpdateOneWithoutRdvs_rdvs_rdv_request_idTordv_requestsNestedInput {
  connect: Rdv_requestsWhereUniqueInput
  connectOrCreate: Rdv_requestsCreateOrConnectWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput
  create: Rdv_requestsCreateWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput
  delete: Rdv_requestsWhereInput
  disconnect: Rdv_requestsWhereInput
  update: Rdv_requestsUpdateToOneWithWhereWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput
  upsert: Rdv_requestsUpsertWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput
}

input Rdv_requestsUpdateToOneWithWhereWithoutRdvs_rdv_requests_rdv_idTordvsInput {
  data: Rdv_requestsUpdateWithoutRdvs_rdv_requests_rdv_idTordvsInput!
  where: Rdv_requestsWhereInput
}

input Rdv_requestsUpdateToOneWithWhereWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput {
  data: Rdv_requestsUpdateWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput!
  where: Rdv_requestsWhereInput
}

input Rdv_requestsUpdateWithWhereUniqueWithoutDoctorsInput {
  data: Rdv_requestsUpdateWithoutDoctorsInput!
  where: Rdv_requestsWhereUniqueInput!
}

input Rdv_requestsUpdateWithWhereUniqueWithoutPatientsInput {
  data: Rdv_requestsUpdateWithoutPatientsInput!
  where: Rdv_requestsWhereUniqueInput!
}

input Rdv_requestsUpdateWithoutDoctorsInput {
  Motif: StringFieldUpdateOperationsInput
  Status: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutRdv_requestsNestedInput
  rdvs_rdv_requests_rdv_idTordvs: RdvsUpdateOneWithoutRdv_requests_rdv_requests_rdv_idTordvsNestedInput
  rdvs_rdvs_rdv_request_idTordv_requests: RdvsUpdateOneWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsNestedInput
  time: DateTimeFieldUpdateOperationsInput
}

input Rdv_requestsUpdateWithoutPatientsInput {
  Motif: StringFieldUpdateOperationsInput
  Status: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutRdv_requestsNestedInput
  id: StringFieldUpdateOperationsInput
  rdvs_rdv_requests_rdv_idTordvs: RdvsUpdateOneWithoutRdv_requests_rdv_requests_rdv_idTordvsNestedInput
  rdvs_rdvs_rdv_request_idTordv_requests: RdvsUpdateOneWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsNestedInput
  time: DateTimeFieldUpdateOperationsInput
}

input Rdv_requestsUpdateWithoutRdvs_rdv_requests_rdv_idTordvsInput {
  Motif: StringFieldUpdateOperationsInput
  Status: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutRdv_requestsNestedInput
  id: StringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutRdv_requestsNestedInput
  rdvs_rdvs_rdv_request_idTordv_requests: RdvsUpdateOneWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsNestedInput
  time: DateTimeFieldUpdateOperationsInput
}

input Rdv_requestsUpdateWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput {
  Motif: StringFieldUpdateOperationsInput
  Status: StringFieldUpdateOperationsInput
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutRdv_requestsNestedInput
  id: StringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutRdv_requestsNestedInput
  rdvs_rdv_requests_rdv_idTordvs: RdvsUpdateOneWithoutRdv_requests_rdv_requests_rdv_idTordvsNestedInput
  time: DateTimeFieldUpdateOperationsInput
}

input Rdv_requestsUpsertWithWhereUniqueWithoutDoctorsInput {
  create: Rdv_requestsCreateWithoutDoctorsInput!
  update: Rdv_requestsUpdateWithoutDoctorsInput!
  where: Rdv_requestsWhereUniqueInput!
}

input Rdv_requestsUpsertWithWhereUniqueWithoutPatientsInput {
  create: Rdv_requestsCreateWithoutPatientsInput!
  update: Rdv_requestsUpdateWithoutPatientsInput!
  where: Rdv_requestsWhereUniqueInput!
}

input Rdv_requestsUpsertWithoutRdvs_rdv_requests_rdv_idTordvsInput {
  create: Rdv_requestsCreateWithoutRdvs_rdv_requests_rdv_idTordvsInput!
  update: Rdv_requestsUpdateWithoutRdvs_rdv_requests_rdv_idTordvsInput!
  where: Rdv_requestsWhereInput
}

input Rdv_requestsUpsertWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput {
  create: Rdv_requestsCreateWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput!
  update: Rdv_requestsUpdateWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput!
  where: Rdv_requestsWhereInput
}

input Rdv_requestsWhereInput {
  AND: [Rdv_requestsWhereInput!]
  Motif: StringFilter
  NOT: [Rdv_requestsWhereInput!]
  OR: [Rdv_requestsWhereInput!]
  Status: StringFilter
  date: DateTimeFilter
  doctor_id: UuidNullableFilter
  doctors: DoctorsNullableRelationFilter
  id: UuidFilter
  patient_id: UuidFilter
  patients: PatientsRelationFilter
  rdv_id: UuidNullableFilter
  rdvs_rdv_requests_rdv_idTordvs: RdvsNullableRelationFilter
  rdvs_rdvs_rdv_request_idTordv_requests: RdvsNullableRelationFilter
  time: DateTimeFilter
}

input Rdv_requestsWhereUniqueInput {
  AND: [Rdv_requestsWhereInput!]
  Motif: StringFilter
  NOT: [Rdv_requestsWhereInput!]
  OR: [Rdv_requestsWhereInput!]
  Status: StringFilter
  date: DateTimeFilter
  doctor_id: UuidNullableFilter
  doctors: DoctorsNullableRelationFilter
  id: String
  patient_id: UuidFilter
  patients: PatientsRelationFilter
  rdv_id: String
  rdvs_rdv_requests_rdv_idTordvs: RdvsNullableRelationFilter
  rdvs_rdvs_rdv_request_idTordv_requests: RdvsNullableRelationFilter
  time: DateTimeFilter
}

type Rdvs {
  consultation_id: String
  consultations(where: ConsultationsWhereInput): Consultations
  date: DateTimeISO!
  doctor_id: String
  doctors(where: DoctorsWhereInput): Doctors
  id: String!
  patient_id: String!
  patients: Patients!
  rdv_request_id: String
  rdv_requests_rdv_requests_rdv_idTordvs(where: Rdv_requestsWhereInput): Rdv_requests
  rdv_requests_rdvs_rdv_request_idTordv_requests(where: Rdv_requestsWhereInput): Rdv_requests
  time: DateTimeISO!
}

type RdvsCountAggregate {
  _all: Int!
  consultation_id: Int!
  date: Int!
  doctor_id: Int!
  id: Int!
  patient_id: Int!
  rdv_request_id: Int!
  time: Int!
}

input RdvsCountOrderByAggregateInput {
  consultation_id: SortOrder
  date: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  patient_id: SortOrder
  rdv_request_id: SortOrder
  time: SortOrder
}

input RdvsCreateInput {
  consultations: ConsultationsCreateNestedOneWithoutRdvsInput
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutRdvsInput
  id: String
  patients: PatientsCreateNestedOneWithoutRdvsInput!
  rdv_requests_rdv_requests_rdv_idTordvs: Rdv_requestsCreateNestedOneWithoutRdvs_rdv_requests_rdv_idTordvsInput
  rdv_requests_rdvs_rdv_request_idTordv_requests: Rdv_requestsCreateNestedOneWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput
  time: DateTimeISO!
}

input RdvsCreateManyDoctorsInput {
  consultation_id: String
  date: DateTimeISO!
  id: String
  patient_id: String!
  rdv_request_id: String
  time: DateTimeISO!
}

input RdvsCreateManyDoctorsInputEnvelope {
  data: [RdvsCreateManyDoctorsInput!]!
  skipDuplicates: Boolean
}

input RdvsCreateManyInput {
  consultation_id: String
  date: DateTimeISO!
  doctor_id: String
  id: String
  patient_id: String!
  rdv_request_id: String
  time: DateTimeISO!
}

input RdvsCreateManyPatientsInput {
  consultation_id: String
  date: DateTimeISO!
  doctor_id: String
  id: String
  rdv_request_id: String
  time: DateTimeISO!
}

input RdvsCreateManyPatientsInputEnvelope {
  data: [RdvsCreateManyPatientsInput!]!
  skipDuplicates: Boolean
}

input RdvsCreateNestedManyWithoutDoctorsInput {
  connect: [RdvsWhereUniqueInput!]
  connectOrCreate: [RdvsCreateOrConnectWithoutDoctorsInput!]
  create: [RdvsCreateWithoutDoctorsInput!]
  createMany: RdvsCreateManyDoctorsInputEnvelope
}

input RdvsCreateNestedManyWithoutPatientsInput {
  connect: [RdvsWhereUniqueInput!]
  connectOrCreate: [RdvsCreateOrConnectWithoutPatientsInput!]
  create: [RdvsCreateWithoutPatientsInput!]
  createMany: RdvsCreateManyPatientsInputEnvelope
}

input RdvsCreateNestedOneWithoutConsultationsInput {
  connect: RdvsWhereUniqueInput
  connectOrCreate: RdvsCreateOrConnectWithoutConsultationsInput
  create: RdvsCreateWithoutConsultationsInput
}

input RdvsCreateNestedOneWithoutRdv_requests_rdv_requests_rdv_idTordvsInput {
  connect: RdvsWhereUniqueInput
  connectOrCreate: RdvsCreateOrConnectWithoutRdv_requests_rdv_requests_rdv_idTordvsInput
  create: RdvsCreateWithoutRdv_requests_rdv_requests_rdv_idTordvsInput
}

input RdvsCreateNestedOneWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput {
  connect: RdvsWhereUniqueInput
  connectOrCreate: RdvsCreateOrConnectWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput
  create: RdvsCreateWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput
}

input RdvsCreateOrConnectWithoutConsultationsInput {
  create: RdvsCreateWithoutConsultationsInput!
  where: RdvsWhereUniqueInput!
}

input RdvsCreateOrConnectWithoutDoctorsInput {
  create: RdvsCreateWithoutDoctorsInput!
  where: RdvsWhereUniqueInput!
}

input RdvsCreateOrConnectWithoutPatientsInput {
  create: RdvsCreateWithoutPatientsInput!
  where: RdvsWhereUniqueInput!
}

input RdvsCreateOrConnectWithoutRdv_requests_rdv_requests_rdv_idTordvsInput {
  create: RdvsCreateWithoutRdv_requests_rdv_requests_rdv_idTordvsInput!
  where: RdvsWhereUniqueInput!
}

input RdvsCreateOrConnectWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput {
  create: RdvsCreateWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput!
  where: RdvsWhereUniqueInput!
}

input RdvsCreateWithoutConsultationsInput {
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutRdvsInput
  id: String
  patients: PatientsCreateNestedOneWithoutRdvsInput!
  rdv_requests_rdv_requests_rdv_idTordvs: Rdv_requestsCreateNestedOneWithoutRdvs_rdv_requests_rdv_idTordvsInput
  rdv_requests_rdvs_rdv_request_idTordv_requests: Rdv_requestsCreateNestedOneWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput
  time: DateTimeISO!
}

input RdvsCreateWithoutDoctorsInput {
  consultations: ConsultationsCreateNestedOneWithoutRdvsInput
  date: DateTimeISO!
  id: String
  patients: PatientsCreateNestedOneWithoutRdvsInput!
  rdv_requests_rdv_requests_rdv_idTordvs: Rdv_requestsCreateNestedOneWithoutRdvs_rdv_requests_rdv_idTordvsInput
  rdv_requests_rdvs_rdv_request_idTordv_requests: Rdv_requestsCreateNestedOneWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput
  time: DateTimeISO!
}

input RdvsCreateWithoutPatientsInput {
  consultations: ConsultationsCreateNestedOneWithoutRdvsInput
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutRdvsInput
  id: String
  rdv_requests_rdv_requests_rdv_idTordvs: Rdv_requestsCreateNestedOneWithoutRdvs_rdv_requests_rdv_idTordvsInput
  rdv_requests_rdvs_rdv_request_idTordv_requests: Rdv_requestsCreateNestedOneWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput
  time: DateTimeISO!
}

input RdvsCreateWithoutRdv_requests_rdv_requests_rdv_idTordvsInput {
  consultations: ConsultationsCreateNestedOneWithoutRdvsInput
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutRdvsInput
  id: String
  patients: PatientsCreateNestedOneWithoutRdvsInput!
  rdv_requests_rdvs_rdv_request_idTordv_requests: Rdv_requestsCreateNestedOneWithoutRdvs_rdvs_rdv_request_idTordv_requestsInput
  time: DateTimeISO!
}

input RdvsCreateWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput {
  consultations: ConsultationsCreateNestedOneWithoutRdvsInput
  date: DateTimeISO!
  doctors: DoctorsCreateNestedOneWithoutRdvsInput
  id: String
  patients: PatientsCreateNestedOneWithoutRdvsInput!
  rdv_requests_rdv_requests_rdv_idTordvs: Rdv_requestsCreateNestedOneWithoutRdvs_rdv_requests_rdv_idTordvsInput
  time: DateTimeISO!
}

type RdvsGroupBy {
  _count: RdvsCountAggregate
  _max: RdvsMaxAggregate
  _min: RdvsMinAggregate
  consultation_id: String
  date: DateTimeISO!
  doctor_id: String
  id: String!
  patient_id: String!
  rdv_request_id: String
  time: DateTimeISO!
}

input RdvsListRelationFilter {
  every: RdvsWhereInput
  none: RdvsWhereInput
  some: RdvsWhereInput
}

type RdvsMaxAggregate {
  consultation_id: String
  date: DateTimeISO
  doctor_id: String
  id: String
  patient_id: String
  rdv_request_id: String
  time: DateTimeISO
}

input RdvsMaxOrderByAggregateInput {
  consultation_id: SortOrder
  date: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  patient_id: SortOrder
  rdv_request_id: SortOrder
  time: SortOrder
}

type RdvsMinAggregate {
  consultation_id: String
  date: DateTimeISO
  doctor_id: String
  id: String
  patient_id: String
  rdv_request_id: String
  time: DateTimeISO
}

input RdvsMinOrderByAggregateInput {
  consultation_id: SortOrder
  date: SortOrder
  doctor_id: SortOrder
  id: SortOrder
  patient_id: SortOrder
  rdv_request_id: SortOrder
  time: SortOrder
}

input RdvsNullableRelationFilter {
  is: RdvsWhereInput
  isNot: RdvsWhereInput
}

input RdvsOrderByRelationAggregateInput {
  _count: SortOrder
}

input RdvsOrderByWithAggregationInput {
  _count: RdvsCountOrderByAggregateInput
  _max: RdvsMaxOrderByAggregateInput
  _min: RdvsMinOrderByAggregateInput
  consultation_id: SortOrderInput
  date: SortOrder
  doctor_id: SortOrderInput
  id: SortOrder
  patient_id: SortOrder
  rdv_request_id: SortOrderInput
  time: SortOrder
}

input RdvsOrderByWithRelationInput {
  consultation_id: SortOrderInput
  consultations: ConsultationsOrderByWithRelationInput
  date: SortOrder
  doctor_id: SortOrderInput
  doctors: DoctorsOrderByWithRelationInput
  id: SortOrder
  patient_id: SortOrder
  patients: PatientsOrderByWithRelationInput
  rdv_request_id: SortOrderInput
  rdv_requests_rdv_requests_rdv_idTordvs: Rdv_requestsOrderByWithRelationInput
  rdv_requests_rdvs_rdv_request_idTordv_requests: Rdv_requestsOrderByWithRelationInput
  time: SortOrder
}

enum RdvsScalarFieldEnum {
  consultation_id
  date
  doctor_id
  id
  patient_id
  rdv_request_id
  time
}

input RdvsScalarWhereInput {
  AND: [RdvsScalarWhereInput!]
  NOT: [RdvsScalarWhereInput!]
  OR: [RdvsScalarWhereInput!]
  consultation_id: UuidNullableFilter
  date: DateTimeFilter
  doctor_id: UuidNullableFilter
  id: UuidFilter
  patient_id: UuidFilter
  rdv_request_id: UuidNullableFilter
  time: DateTimeFilter
}

input RdvsScalarWhereWithAggregatesInput {
  AND: [RdvsScalarWhereWithAggregatesInput!]
  NOT: [RdvsScalarWhereWithAggregatesInput!]
  OR: [RdvsScalarWhereWithAggregatesInput!]
  consultation_id: UuidNullableWithAggregatesFilter
  date: DateTimeWithAggregatesFilter
  doctor_id: UuidNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  patient_id: UuidWithAggregatesFilter
  rdv_request_id: UuidNullableWithAggregatesFilter
  time: DateTimeWithAggregatesFilter
}

input RdvsUpdateInput {
  consultations: ConsultationsUpdateOneWithoutRdvsNestedInput
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutRdvsNestedInput
  id: StringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutRdvsNestedInput
  rdv_requests_rdv_requests_rdv_idTordvs: Rdv_requestsUpdateOneWithoutRdvs_rdv_requests_rdv_idTordvsNestedInput
  rdv_requests_rdvs_rdv_request_idTordv_requests: Rdv_requestsUpdateOneWithoutRdvs_rdvs_rdv_request_idTordv_requestsNestedInput
  time: DateTimeFieldUpdateOperationsInput
}

input RdvsUpdateManyMutationInput {
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  time: DateTimeFieldUpdateOperationsInput
}

input RdvsUpdateManyWithWhereWithoutDoctorsInput {
  data: RdvsUpdateManyMutationInput!
  where: RdvsScalarWhereInput!
}

input RdvsUpdateManyWithWhereWithoutPatientsInput {
  data: RdvsUpdateManyMutationInput!
  where: RdvsScalarWhereInput!
}

input RdvsUpdateManyWithoutDoctorsNestedInput {
  connect: [RdvsWhereUniqueInput!]
  connectOrCreate: [RdvsCreateOrConnectWithoutDoctorsInput!]
  create: [RdvsCreateWithoutDoctorsInput!]
  createMany: RdvsCreateManyDoctorsInputEnvelope
  delete: [RdvsWhereUniqueInput!]
  deleteMany: [RdvsScalarWhereInput!]
  disconnect: [RdvsWhereUniqueInput!]
  set: [RdvsWhereUniqueInput!]
  update: [RdvsUpdateWithWhereUniqueWithoutDoctorsInput!]
  updateMany: [RdvsUpdateManyWithWhereWithoutDoctorsInput!]
  upsert: [RdvsUpsertWithWhereUniqueWithoutDoctorsInput!]
}

input RdvsUpdateManyWithoutPatientsNestedInput {
  connect: [RdvsWhereUniqueInput!]
  connectOrCreate: [RdvsCreateOrConnectWithoutPatientsInput!]
  create: [RdvsCreateWithoutPatientsInput!]
  createMany: RdvsCreateManyPatientsInputEnvelope
  delete: [RdvsWhereUniqueInput!]
  deleteMany: [RdvsScalarWhereInput!]
  disconnect: [RdvsWhereUniqueInput!]
  set: [RdvsWhereUniqueInput!]
  update: [RdvsUpdateWithWhereUniqueWithoutPatientsInput!]
  updateMany: [RdvsUpdateManyWithWhereWithoutPatientsInput!]
  upsert: [RdvsUpsertWithWhereUniqueWithoutPatientsInput!]
}

input RdvsUpdateOneWithoutConsultationsNestedInput {
  connect: RdvsWhereUniqueInput
  connectOrCreate: RdvsCreateOrConnectWithoutConsultationsInput
  create: RdvsCreateWithoutConsultationsInput
  delete: RdvsWhereInput
  disconnect: RdvsWhereInput
  update: RdvsUpdateToOneWithWhereWithoutConsultationsInput
  upsert: RdvsUpsertWithoutConsultationsInput
}

input RdvsUpdateOneWithoutRdv_requests_rdv_requests_rdv_idTordvsNestedInput {
  connect: RdvsWhereUniqueInput
  connectOrCreate: RdvsCreateOrConnectWithoutRdv_requests_rdv_requests_rdv_idTordvsInput
  create: RdvsCreateWithoutRdv_requests_rdv_requests_rdv_idTordvsInput
  delete: RdvsWhereInput
  disconnect: RdvsWhereInput
  update: RdvsUpdateToOneWithWhereWithoutRdv_requests_rdv_requests_rdv_idTordvsInput
  upsert: RdvsUpsertWithoutRdv_requests_rdv_requests_rdv_idTordvsInput
}

input RdvsUpdateOneWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsNestedInput {
  connect: RdvsWhereUniqueInput
  connectOrCreate: RdvsCreateOrConnectWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput
  create: RdvsCreateWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput
  delete: RdvsWhereInput
  disconnect: RdvsWhereInput
  update: RdvsUpdateToOneWithWhereWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput
  upsert: RdvsUpsertWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput
}

input RdvsUpdateToOneWithWhereWithoutConsultationsInput {
  data: RdvsUpdateWithoutConsultationsInput!
  where: RdvsWhereInput
}

input RdvsUpdateToOneWithWhereWithoutRdv_requests_rdv_requests_rdv_idTordvsInput {
  data: RdvsUpdateWithoutRdv_requests_rdv_requests_rdv_idTordvsInput!
  where: RdvsWhereInput
}

input RdvsUpdateToOneWithWhereWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput {
  data: RdvsUpdateWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput!
  where: RdvsWhereInput
}

input RdvsUpdateWithWhereUniqueWithoutDoctorsInput {
  data: RdvsUpdateWithoutDoctorsInput!
  where: RdvsWhereUniqueInput!
}

input RdvsUpdateWithWhereUniqueWithoutPatientsInput {
  data: RdvsUpdateWithoutPatientsInput!
  where: RdvsWhereUniqueInput!
}

input RdvsUpdateWithoutConsultationsInput {
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutRdvsNestedInput
  id: StringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutRdvsNestedInput
  rdv_requests_rdv_requests_rdv_idTordvs: Rdv_requestsUpdateOneWithoutRdvs_rdv_requests_rdv_idTordvsNestedInput
  rdv_requests_rdvs_rdv_request_idTordv_requests: Rdv_requestsUpdateOneWithoutRdvs_rdvs_rdv_request_idTordv_requestsNestedInput
  time: DateTimeFieldUpdateOperationsInput
}

input RdvsUpdateWithoutDoctorsInput {
  consultations: ConsultationsUpdateOneWithoutRdvsNestedInput
  date: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutRdvsNestedInput
  rdv_requests_rdv_requests_rdv_idTordvs: Rdv_requestsUpdateOneWithoutRdvs_rdv_requests_rdv_idTordvsNestedInput
  rdv_requests_rdvs_rdv_request_idTordv_requests: Rdv_requestsUpdateOneWithoutRdvs_rdvs_rdv_request_idTordv_requestsNestedInput
  time: DateTimeFieldUpdateOperationsInput
}

input RdvsUpdateWithoutPatientsInput {
  consultations: ConsultationsUpdateOneWithoutRdvsNestedInput
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutRdvsNestedInput
  id: StringFieldUpdateOperationsInput
  rdv_requests_rdv_requests_rdv_idTordvs: Rdv_requestsUpdateOneWithoutRdvs_rdv_requests_rdv_idTordvsNestedInput
  rdv_requests_rdvs_rdv_request_idTordv_requests: Rdv_requestsUpdateOneWithoutRdvs_rdvs_rdv_request_idTordv_requestsNestedInput
  time: DateTimeFieldUpdateOperationsInput
}

input RdvsUpdateWithoutRdv_requests_rdv_requests_rdv_idTordvsInput {
  consultations: ConsultationsUpdateOneWithoutRdvsNestedInput
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutRdvsNestedInput
  id: StringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutRdvsNestedInput
  rdv_requests_rdvs_rdv_request_idTordv_requests: Rdv_requestsUpdateOneWithoutRdvs_rdvs_rdv_request_idTordv_requestsNestedInput
  time: DateTimeFieldUpdateOperationsInput
}

input RdvsUpdateWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput {
  consultations: ConsultationsUpdateOneWithoutRdvsNestedInput
  date: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateOneWithoutRdvsNestedInput
  id: StringFieldUpdateOperationsInput
  patients: PatientsUpdateOneRequiredWithoutRdvsNestedInput
  rdv_requests_rdv_requests_rdv_idTordvs: Rdv_requestsUpdateOneWithoutRdvs_rdv_requests_rdv_idTordvsNestedInput
  time: DateTimeFieldUpdateOperationsInput
}

input RdvsUpsertWithWhereUniqueWithoutDoctorsInput {
  create: RdvsCreateWithoutDoctorsInput!
  update: RdvsUpdateWithoutDoctorsInput!
  where: RdvsWhereUniqueInput!
}

input RdvsUpsertWithWhereUniqueWithoutPatientsInput {
  create: RdvsCreateWithoutPatientsInput!
  update: RdvsUpdateWithoutPatientsInput!
  where: RdvsWhereUniqueInput!
}

input RdvsUpsertWithoutConsultationsInput {
  create: RdvsCreateWithoutConsultationsInput!
  update: RdvsUpdateWithoutConsultationsInput!
  where: RdvsWhereInput
}

input RdvsUpsertWithoutRdv_requests_rdv_requests_rdv_idTordvsInput {
  create: RdvsCreateWithoutRdv_requests_rdv_requests_rdv_idTordvsInput!
  update: RdvsUpdateWithoutRdv_requests_rdv_requests_rdv_idTordvsInput!
  where: RdvsWhereInput
}

input RdvsUpsertWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput {
  create: RdvsCreateWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput!
  update: RdvsUpdateWithoutRdv_requests_rdvs_rdv_request_idTordv_requestsInput!
  where: RdvsWhereInput
}

input RdvsWhereInput {
  AND: [RdvsWhereInput!]
  NOT: [RdvsWhereInput!]
  OR: [RdvsWhereInput!]
  consultation_id: UuidNullableFilter
  consultations: ConsultationsNullableRelationFilter
  date: DateTimeFilter
  doctor_id: UuidNullableFilter
  doctors: DoctorsNullableRelationFilter
  id: UuidFilter
  patient_id: UuidFilter
  patients: PatientsRelationFilter
  rdv_request_id: UuidNullableFilter
  rdv_requests_rdv_requests_rdv_idTordvs: Rdv_requestsNullableRelationFilter
  rdv_requests_rdvs_rdv_request_idTordv_requests: Rdv_requestsNullableRelationFilter
  time: DateTimeFilter
}

input RdvsWhereUniqueInput {
  AND: [RdvsWhereInput!]
  NOT: [RdvsWhereInput!]
  OR: [RdvsWhereInput!]
  consultation_id: String
  consultations: ConsultationsNullableRelationFilter
  date: DateTimeFilter
  doctor_id: UuidNullableFilter
  doctors: DoctorsNullableRelationFilter
  id: String
  patient_id: UuidFilter
  patients: PatientsRelationFilter
  rdv_request_id: String
  rdv_requests_rdv_requests_rdv_idTordvs: Rdv_requestsNullableRelationFilter
  rdv_requests_rdvs_rdv_request_idTordv_requests: Rdv_requestsNullableRelationFilter
  time: DateTimeFilter
}

enum SortOrder {
  asc
  desc
}

input SortOrderInput {
  nulls: NullsOrder
  sort: SortOrder!
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableListFilter {
  equals: [String!]
  has: String
  hasEvery: [String!]
  hasSome: [String!]
  isEmpty: Boolean
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type Users {
  _count: UsersCount
  address: String
  associated_id: String
  created_at: DateTimeISO!
  doctors(cursor: DoctorsWhereUniqueInput, distinct: [DoctorsScalarFieldEnum!], orderBy: [DoctorsOrderByWithRelationInput!], skip: Int, take: Int, where: DoctorsWhereInput): [Doctors!]!
  email: String!
  first_name: String!
  id: String!
  is_verified: Boolean!
  last_login: DateTimeISO
  last_name: String!
  password: String!
  patients(cursor: PatientsWhereUniqueInput, distinct: [PatientsScalarFieldEnum!], orderBy: [PatientsOrderByWithRelationInput!], skip: Int, take: Int, where: PatientsWhereInput): [Patients!]!
  phone: String
  profile_picture: String
  role: users_role_enum!
  salt: String!
  updated_at: DateTimeISO!
  validation_token(where: Verification_tokensWhereInput): Verification_tokens
}

type UsersCount {
  doctors(where: DoctorsWhereInput): Int!
  patients(where: PatientsWhereInput): Int!
}

type UsersCountAggregate {
  _all: Int!
  address: Int!
  associated_id: Int!
  created_at: Int!
  email: Int!
  first_name: Int!
  id: Int!
  is_verified: Int!
  last_login: Int!
  last_name: Int!
  password: Int!
  phone: Int!
  profile_picture: Int!
  role: Int!
  salt: Int!
  updated_at: Int!
}

input UsersCountOrderByAggregateInput {
  address: SortOrder
  associated_id: SortOrder
  created_at: SortOrder
  email: SortOrder
  first_name: SortOrder
  id: SortOrder
  is_verified: SortOrder
  last_login: SortOrder
  last_name: SortOrder
  password: SortOrder
  phone: SortOrder
  profile_picture: SortOrder
  role: SortOrder
  salt: SortOrder
  updated_at: SortOrder
}

input UsersCreateInput {
  address: String
  associated_id: String
  created_at: DateTimeISO
  doctors: DoctorsCreateNestedManyWithoutUsersInput
  email: String!
  first_name: String!
  id: String
  is_verified: Boolean!
  last_login: DateTimeISO
  last_name: String!
  password: String!
  patients: PatientsCreateNestedManyWithoutUsersInput
  phone: String
  profile_picture: String
  role: users_role_enum!
  salt: String!
  updated_at: DateTimeISO
  validation_token: Verification_tokensCreateNestedOneWithoutUserInput
}

input UsersCreateManyInput {
  address: String
  associated_id: String
  created_at: DateTimeISO
  email: String!
  first_name: String!
  id: String
  is_verified: Boolean!
  last_login: DateTimeISO
  last_name: String!
  password: String!
  phone: String
  profile_picture: String
  role: users_role_enum!
  salt: String!
  updated_at: DateTimeISO
}

input UsersCreateNestedOneWithoutDoctorsInput {
  connect: UsersWhereUniqueInput
  connectOrCreate: UsersCreateOrConnectWithoutDoctorsInput
  create: UsersCreateWithoutDoctorsInput
}

input UsersCreateNestedOneWithoutPatientsInput {
  connect: UsersWhereUniqueInput
  connectOrCreate: UsersCreateOrConnectWithoutPatientsInput
  create: UsersCreateWithoutPatientsInput
}

input UsersCreateNestedOneWithoutValidation_tokenInput {
  connect: UsersWhereUniqueInput
  connectOrCreate: UsersCreateOrConnectWithoutValidation_tokenInput
  create: UsersCreateWithoutValidation_tokenInput
}

input UsersCreateOrConnectWithoutDoctorsInput {
  create: UsersCreateWithoutDoctorsInput!
  where: UsersWhereUniqueInput!
}

input UsersCreateOrConnectWithoutPatientsInput {
  create: UsersCreateWithoutPatientsInput!
  where: UsersWhereUniqueInput!
}

input UsersCreateOrConnectWithoutValidation_tokenInput {
  create: UsersCreateWithoutValidation_tokenInput!
  where: UsersWhereUniqueInput!
}

input UsersCreateWithoutDoctorsInput {
  address: String
  associated_id: String
  created_at: DateTimeISO
  email: String!
  first_name: String!
  id: String
  is_verified: Boolean!
  last_login: DateTimeISO
  last_name: String!
  password: String!
  patients: PatientsCreateNestedManyWithoutUsersInput
  phone: String
  profile_picture: String
  role: users_role_enum!
  salt: String!
  updated_at: DateTimeISO
  validation_token: Verification_tokensCreateNestedOneWithoutUserInput
}

input UsersCreateWithoutPatientsInput {
  address: String
  associated_id: String
  created_at: DateTimeISO
  doctors: DoctorsCreateNestedManyWithoutUsersInput
  email: String!
  first_name: String!
  id: String
  is_verified: Boolean!
  last_login: DateTimeISO
  last_name: String!
  password: String!
  phone: String
  profile_picture: String
  role: users_role_enum!
  salt: String!
  updated_at: DateTimeISO
  validation_token: Verification_tokensCreateNestedOneWithoutUserInput
}

input UsersCreateWithoutValidation_tokenInput {
  address: String
  associated_id: String
  created_at: DateTimeISO
  doctors: DoctorsCreateNestedManyWithoutUsersInput
  email: String!
  first_name: String!
  id: String
  is_verified: Boolean!
  last_login: DateTimeISO
  last_name: String!
  password: String!
  patients: PatientsCreateNestedManyWithoutUsersInput
  phone: String
  profile_picture: String
  role: users_role_enum!
  salt: String!
  updated_at: DateTimeISO
}

type UsersGroupBy {
  _count: UsersCountAggregate
  _max: UsersMaxAggregate
  _min: UsersMinAggregate
  address: String
  associated_id: String
  created_at: DateTimeISO!
  email: String!
  first_name: String!
  id: String!
  is_verified: Boolean!
  last_login: DateTimeISO
  last_name: String!
  password: String!
  phone: String
  profile_picture: String
  role: users_role_enum!
  salt: String!
  updated_at: DateTimeISO!
}

type UsersMaxAggregate {
  address: String
  associated_id: String
  created_at: DateTimeISO
  email: String
  first_name: String
  id: String
  is_verified: Boolean
  last_login: DateTimeISO
  last_name: String
  password: String
  phone: String
  profile_picture: String
  role: users_role_enum
  salt: String
  updated_at: DateTimeISO
}

input UsersMaxOrderByAggregateInput {
  address: SortOrder
  associated_id: SortOrder
  created_at: SortOrder
  email: SortOrder
  first_name: SortOrder
  id: SortOrder
  is_verified: SortOrder
  last_login: SortOrder
  last_name: SortOrder
  password: SortOrder
  phone: SortOrder
  profile_picture: SortOrder
  role: SortOrder
  salt: SortOrder
  updated_at: SortOrder
}

type UsersMinAggregate {
  address: String
  associated_id: String
  created_at: DateTimeISO
  email: String
  first_name: String
  id: String
  is_verified: Boolean
  last_login: DateTimeISO
  last_name: String
  password: String
  phone: String
  profile_picture: String
  role: users_role_enum
  salt: String
  updated_at: DateTimeISO
}

input UsersMinOrderByAggregateInput {
  address: SortOrder
  associated_id: SortOrder
  created_at: SortOrder
  email: SortOrder
  first_name: SortOrder
  id: SortOrder
  is_verified: SortOrder
  last_login: SortOrder
  last_name: SortOrder
  password: SortOrder
  phone: SortOrder
  profile_picture: SortOrder
  role: SortOrder
  salt: SortOrder
  updated_at: SortOrder
}

input UsersNullableRelationFilter {
  is: UsersWhereInput
  isNot: UsersWhereInput
}

input UsersOrderByWithAggregationInput {
  _count: UsersCountOrderByAggregateInput
  _max: UsersMaxOrderByAggregateInput
  _min: UsersMinOrderByAggregateInput
  address: SortOrderInput
  associated_id: SortOrderInput
  created_at: SortOrder
  email: SortOrder
  first_name: SortOrder
  id: SortOrder
  is_verified: SortOrder
  last_login: SortOrderInput
  last_name: SortOrder
  password: SortOrder
  phone: SortOrderInput
  profile_picture: SortOrderInput
  role: SortOrder
  salt: SortOrder
  updated_at: SortOrder
}

input UsersOrderByWithRelationInput {
  address: SortOrderInput
  associated_id: SortOrderInput
  created_at: SortOrder
  doctors: DoctorsOrderByRelationAggregateInput
  email: SortOrder
  first_name: SortOrder
  id: SortOrder
  is_verified: SortOrder
  last_login: SortOrderInput
  last_name: SortOrder
  password: SortOrder
  patients: PatientsOrderByRelationAggregateInput
  phone: SortOrderInput
  profile_picture: SortOrderInput
  role: SortOrder
  salt: SortOrder
  updated_at: SortOrder
  validation_token: Verification_tokensOrderByWithRelationInput
}

input UsersRelationFilter {
  is: UsersWhereInput
  isNot: UsersWhereInput
}

enum UsersScalarFieldEnum {
  address
  associated_id
  created_at
  email
  first_name
  id
  is_verified
  last_login
  last_name
  password
  phone
  profile_picture
  role
  salt
  updated_at
}

input UsersScalarWhereWithAggregatesInput {
  AND: [UsersScalarWhereWithAggregatesInput!]
  NOT: [UsersScalarWhereWithAggregatesInput!]
  OR: [UsersScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  associated_id: UuidNullableWithAggregatesFilter
  created_at: DateTimeWithAggregatesFilter
  email: StringWithAggregatesFilter
  first_name: StringWithAggregatesFilter
  id: UuidWithAggregatesFilter
  is_verified: BoolWithAggregatesFilter
  last_login: DateTimeNullableWithAggregatesFilter
  last_name: StringWithAggregatesFilter
  password: StringWithAggregatesFilter
  phone: StringNullableWithAggregatesFilter
  profile_picture: StringNullableWithAggregatesFilter
  role: Enumusers_role_enumWithAggregatesFilter
  salt: StringWithAggregatesFilter
  updated_at: DateTimeWithAggregatesFilter
}

input UsersUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  associated_id: NullableStringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateManyWithoutUsersNestedInput
  email: StringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_verified: BoolFieldUpdateOperationsInput
  last_login: NullableDateTimeFieldUpdateOperationsInput
  last_name: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  patients: PatientsUpdateManyWithoutUsersNestedInput
  phone: NullableStringFieldUpdateOperationsInput
  profile_picture: NullableStringFieldUpdateOperationsInput
  role: Enumusers_role_enumFieldUpdateOperationsInput
  salt: StringFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  validation_token: Verification_tokensUpdateOneWithoutUserNestedInput
}

input UsersUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  associated_id: NullableStringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_verified: BoolFieldUpdateOperationsInput
  last_login: NullableDateTimeFieldUpdateOperationsInput
  last_name: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  profile_picture: NullableStringFieldUpdateOperationsInput
  role: Enumusers_role_enumFieldUpdateOperationsInput
  salt: StringFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input UsersUpdateOneRequiredWithoutDoctorsNestedInput {
  connect: UsersWhereUniqueInput
  connectOrCreate: UsersCreateOrConnectWithoutDoctorsInput
  create: UsersCreateWithoutDoctorsInput
  update: UsersUpdateToOneWithWhereWithoutDoctorsInput
  upsert: UsersUpsertWithoutDoctorsInput
}

input UsersUpdateOneRequiredWithoutValidation_tokenNestedInput {
  connect: UsersWhereUniqueInput
  connectOrCreate: UsersCreateOrConnectWithoutValidation_tokenInput
  create: UsersCreateWithoutValidation_tokenInput
  update: UsersUpdateToOneWithWhereWithoutValidation_tokenInput
  upsert: UsersUpsertWithoutValidation_tokenInput
}

input UsersUpdateOneWithoutPatientsNestedInput {
  connect: UsersWhereUniqueInput
  connectOrCreate: UsersCreateOrConnectWithoutPatientsInput
  create: UsersCreateWithoutPatientsInput
  delete: UsersWhereInput
  disconnect: UsersWhereInput
  update: UsersUpdateToOneWithWhereWithoutPatientsInput
  upsert: UsersUpsertWithoutPatientsInput
}

input UsersUpdateToOneWithWhereWithoutDoctorsInput {
  data: UsersUpdateWithoutDoctorsInput!
  where: UsersWhereInput
}

input UsersUpdateToOneWithWhereWithoutPatientsInput {
  data: UsersUpdateWithoutPatientsInput!
  where: UsersWhereInput
}

input UsersUpdateToOneWithWhereWithoutValidation_tokenInput {
  data: UsersUpdateWithoutValidation_tokenInput!
  where: UsersWhereInput
}

input UsersUpdateWithoutDoctorsInput {
  address: NullableStringFieldUpdateOperationsInput
  associated_id: NullableStringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_verified: BoolFieldUpdateOperationsInput
  last_login: NullableDateTimeFieldUpdateOperationsInput
  last_name: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  patients: PatientsUpdateManyWithoutUsersNestedInput
  phone: NullableStringFieldUpdateOperationsInput
  profile_picture: NullableStringFieldUpdateOperationsInput
  role: Enumusers_role_enumFieldUpdateOperationsInput
  salt: StringFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  validation_token: Verification_tokensUpdateOneWithoutUserNestedInput
}

input UsersUpdateWithoutPatientsInput {
  address: NullableStringFieldUpdateOperationsInput
  associated_id: NullableStringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateManyWithoutUsersNestedInput
  email: StringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_verified: BoolFieldUpdateOperationsInput
  last_login: NullableDateTimeFieldUpdateOperationsInput
  last_name: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  profile_picture: NullableStringFieldUpdateOperationsInput
  role: Enumusers_role_enumFieldUpdateOperationsInput
  salt: StringFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
  validation_token: Verification_tokensUpdateOneWithoutUserNestedInput
}

input UsersUpdateWithoutValidation_tokenInput {
  address: NullableStringFieldUpdateOperationsInput
  associated_id: NullableStringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  doctors: DoctorsUpdateManyWithoutUsersNestedInput
  email: StringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_verified: BoolFieldUpdateOperationsInput
  last_login: NullableDateTimeFieldUpdateOperationsInput
  last_name: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  patients: PatientsUpdateManyWithoutUsersNestedInput
  phone: NullableStringFieldUpdateOperationsInput
  profile_picture: NullableStringFieldUpdateOperationsInput
  role: Enumusers_role_enumFieldUpdateOperationsInput
  salt: StringFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input UsersUpsertWithoutDoctorsInput {
  create: UsersCreateWithoutDoctorsInput!
  update: UsersUpdateWithoutDoctorsInput!
  where: UsersWhereInput
}

input UsersUpsertWithoutPatientsInput {
  create: UsersCreateWithoutPatientsInput!
  update: UsersUpdateWithoutPatientsInput!
  where: UsersWhereInput
}

input UsersUpsertWithoutValidation_tokenInput {
  create: UsersCreateWithoutValidation_tokenInput!
  update: UsersUpdateWithoutValidation_tokenInput!
  where: UsersWhereInput
}

input UsersWhereInput {
  AND: [UsersWhereInput!]
  NOT: [UsersWhereInput!]
  OR: [UsersWhereInput!]
  address: StringNullableFilter
  associated_id: UuidNullableFilter
  created_at: DateTimeFilter
  doctors: DoctorsListRelationFilter
  email: StringFilter
  first_name: StringFilter
  id: UuidFilter
  is_verified: BoolFilter
  last_login: DateTimeNullableFilter
  last_name: StringFilter
  password: StringFilter
  patients: PatientsListRelationFilter
  phone: StringNullableFilter
  profile_picture: StringNullableFilter
  role: Enumusers_role_enumFilter
  salt: StringFilter
  updated_at: DateTimeFilter
  validation_token: Verification_tokensNullableRelationFilter
}

input UsersWhereUniqueInput {
  AND: [UsersWhereInput!]
  NOT: [UsersWhereInput!]
  OR: [UsersWhereInput!]
  address: StringNullableFilter
  associated_id: UuidNullableFilter
  created_at: DateTimeFilter
  doctors: DoctorsListRelationFilter
  email: String
  first_name: StringFilter
  id: String
  is_verified: BoolFilter
  last_login: DateTimeNullableFilter
  last_name: StringFilter
  password: StringFilter
  patients: PatientsListRelationFilter
  phone: StringNullableFilter
  profile_picture: StringNullableFilter
  role: Enumusers_role_enumFilter
  salt: StringFilter
  updated_at: DateTimeFilter
  validation_token: Verification_tokensNullableRelationFilter
}

input UuidFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedUuidFilter
  notIn: [String!]
}

input UuidNullableFilter {
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedUuidNullableFilter
  notIn: [String!]
}

input UuidNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedUuidNullableWithAggregatesFilter
  notIn: [String!]
}

input UuidWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedUuidWithAggregatesFilter
  notIn: [String!]
}

type Verification_tokens {
  createdAt: DateTimeISO!
  expireAt: DateTimeISO!
  id: String!
  numberofTries: Int!
  token: String!
  user: Users!
  userId: String!
}

type Verification_tokensAvgAggregate {
  numberofTries: Float
}

input Verification_tokensAvgOrderByAggregateInput {
  numberofTries: SortOrder
}

type Verification_tokensCountAggregate {
  _all: Int!
  createdAt: Int!
  expireAt: Int!
  id: Int!
  numberofTries: Int!
  token: Int!
  userId: Int!
}

input Verification_tokensCountOrderByAggregateInput {
  createdAt: SortOrder
  expireAt: SortOrder
  id: SortOrder
  numberofTries: SortOrder
  token: SortOrder
  userId: SortOrder
}

input Verification_tokensCreateInput {
  createdAt: DateTimeISO
  expireAt: DateTimeISO!
  id: String
  numberofTries: Int
  token: String!
  user: UsersCreateNestedOneWithoutValidation_tokenInput!
}

input Verification_tokensCreateManyInput {
  createdAt: DateTimeISO
  expireAt: DateTimeISO!
  id: String
  numberofTries: Int
  token: String!
  userId: String!
}

input Verification_tokensCreateNestedOneWithoutUserInput {
  connect: Verification_tokensWhereUniqueInput
  connectOrCreate: Verification_tokensCreateOrConnectWithoutUserInput
  create: Verification_tokensCreateWithoutUserInput
}

input Verification_tokensCreateOrConnectWithoutUserInput {
  create: Verification_tokensCreateWithoutUserInput!
  where: Verification_tokensWhereUniqueInput!
}

input Verification_tokensCreateWithoutUserInput {
  createdAt: DateTimeISO
  expireAt: DateTimeISO!
  id: String
  numberofTries: Int
  token: String!
}

type Verification_tokensGroupBy {
  _avg: Verification_tokensAvgAggregate
  _count: Verification_tokensCountAggregate
  _max: Verification_tokensMaxAggregate
  _min: Verification_tokensMinAggregate
  _sum: Verification_tokensSumAggregate
  createdAt: DateTimeISO!
  expireAt: DateTimeISO!
  id: String!
  numberofTries: Int!
  token: String!
  userId: String!
}

type Verification_tokensMaxAggregate {
  createdAt: DateTimeISO
  expireAt: DateTimeISO
  id: String
  numberofTries: Int
  token: String
  userId: String
}

input Verification_tokensMaxOrderByAggregateInput {
  createdAt: SortOrder
  expireAt: SortOrder
  id: SortOrder
  numberofTries: SortOrder
  token: SortOrder
  userId: SortOrder
}

type Verification_tokensMinAggregate {
  createdAt: DateTimeISO
  expireAt: DateTimeISO
  id: String
  numberofTries: Int
  token: String
  userId: String
}

input Verification_tokensMinOrderByAggregateInput {
  createdAt: SortOrder
  expireAt: SortOrder
  id: SortOrder
  numberofTries: SortOrder
  token: SortOrder
  userId: SortOrder
}

input Verification_tokensNullableRelationFilter {
  is: Verification_tokensWhereInput
  isNot: Verification_tokensWhereInput
}

input Verification_tokensOrderByWithAggregationInput {
  _avg: Verification_tokensAvgOrderByAggregateInput
  _count: Verification_tokensCountOrderByAggregateInput
  _max: Verification_tokensMaxOrderByAggregateInput
  _min: Verification_tokensMinOrderByAggregateInput
  _sum: Verification_tokensSumOrderByAggregateInput
  createdAt: SortOrder
  expireAt: SortOrder
  id: SortOrder
  numberofTries: SortOrder
  token: SortOrder
  userId: SortOrder
}

input Verification_tokensOrderByWithRelationInput {
  createdAt: SortOrder
  expireAt: SortOrder
  id: SortOrder
  numberofTries: SortOrder
  token: SortOrder
  user: UsersOrderByWithRelationInput
  userId: SortOrder
}

enum Verification_tokensScalarFieldEnum {
  createdAt
  expireAt
  id
  numberofTries
  token
  userId
}

input Verification_tokensScalarWhereWithAggregatesInput {
  AND: [Verification_tokensScalarWhereWithAggregatesInput!]
  NOT: [Verification_tokensScalarWhereWithAggregatesInput!]
  OR: [Verification_tokensScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  expireAt: DateTimeWithAggregatesFilter
  id: UuidWithAggregatesFilter
  numberofTries: IntWithAggregatesFilter
  token: StringWithAggregatesFilter
  userId: UuidWithAggregatesFilter
}

type Verification_tokensSumAggregate {
  numberofTries: Int
}

input Verification_tokensSumOrderByAggregateInput {
  numberofTries: SortOrder
}

input Verification_tokensUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  expireAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  numberofTries: IntFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
  user: UsersUpdateOneRequiredWithoutValidation_tokenNestedInput
}

input Verification_tokensUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  expireAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  numberofTries: IntFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
}

input Verification_tokensUpdateOneWithoutUserNestedInput {
  connect: Verification_tokensWhereUniqueInput
  connectOrCreate: Verification_tokensCreateOrConnectWithoutUserInput
  create: Verification_tokensCreateWithoutUserInput
  delete: Verification_tokensWhereInput
  disconnect: Verification_tokensWhereInput
  update: Verification_tokensUpdateToOneWithWhereWithoutUserInput
  upsert: Verification_tokensUpsertWithoutUserInput
}

input Verification_tokensUpdateToOneWithWhereWithoutUserInput {
  data: Verification_tokensUpdateWithoutUserInput!
  where: Verification_tokensWhereInput
}

input Verification_tokensUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  expireAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  numberofTries: IntFieldUpdateOperationsInput
  token: StringFieldUpdateOperationsInput
}

input Verification_tokensUpsertWithoutUserInput {
  create: Verification_tokensCreateWithoutUserInput!
  update: Verification_tokensUpdateWithoutUserInput!
  where: Verification_tokensWhereInput
}

input Verification_tokensWhereInput {
  AND: [Verification_tokensWhereInput!]
  NOT: [Verification_tokensWhereInput!]
  OR: [Verification_tokensWhereInput!]
  createdAt: DateTimeFilter
  expireAt: DateTimeFilter
  id: UuidFilter
  numberofTries: IntFilter
  token: StringFilter
  user: UsersRelationFilter
  userId: UuidFilter
}

input Verification_tokensWhereUniqueInput {
  AND: [Verification_tokensWhereInput!]
  NOT: [Verification_tokensWhereInput!]
  OR: [Verification_tokensWhereInput!]
  createdAt: DateTimeFilter
  expireAt: DateTimeFilter
  id: String
  numberofTries: IntFilter
  token: StringFilter
  user: UsersRelationFilter
  userId: String
}

type Xray_results {
  description: String
  id: String!
  is_abnormal: Boolean!
  lab_document_id: String!
  lab_documents: Lab_documents!
  result_type: xray_results_result_type_enum!
  title: String!
}

type Xray_resultsCountAggregate {
  _all: Int!
  description: Int!
  id: Int!
  is_abnormal: Int!
  lab_document_id: Int!
  result_type: Int!
  title: Int!
}

input Xray_resultsCountOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  result_type: SortOrder
  title: SortOrder
}

input Xray_resultsCreateInput {
  description: String
  id: String
  is_abnormal: Boolean!
  lab_documents: Lab_documentsCreateNestedOneWithoutXray_resultsInput!
  result_type: xray_results_result_type_enum!
  title: String!
}

input Xray_resultsCreateManyInput {
  description: String
  id: String
  is_abnormal: Boolean!
  lab_document_id: String!
  result_type: xray_results_result_type_enum!
  title: String!
}

input Xray_resultsCreateManyLab_documentsInput {
  description: String
  id: String
  is_abnormal: Boolean!
  result_type: xray_results_result_type_enum!
  title: String!
}

input Xray_resultsCreateManyLab_documentsInputEnvelope {
  data: [Xray_resultsCreateManyLab_documentsInput!]!
  skipDuplicates: Boolean
}

input Xray_resultsCreateNestedManyWithoutLab_documentsInput {
  connect: [Xray_resultsWhereUniqueInput!]
  connectOrCreate: [Xray_resultsCreateOrConnectWithoutLab_documentsInput!]
  create: [Xray_resultsCreateWithoutLab_documentsInput!]
  createMany: Xray_resultsCreateManyLab_documentsInputEnvelope
}

input Xray_resultsCreateOrConnectWithoutLab_documentsInput {
  create: Xray_resultsCreateWithoutLab_documentsInput!
  where: Xray_resultsWhereUniqueInput!
}

input Xray_resultsCreateWithoutLab_documentsInput {
  description: String
  id: String
  is_abnormal: Boolean!
  result_type: xray_results_result_type_enum!
  title: String!
}

type Xray_resultsGroupBy {
  _count: Xray_resultsCountAggregate
  _max: Xray_resultsMaxAggregate
  _min: Xray_resultsMinAggregate
  description: String
  id: String!
  is_abnormal: Boolean!
  lab_document_id: String!
  result_type: xray_results_result_type_enum!
  title: String!
}

input Xray_resultsListRelationFilter {
  every: Xray_resultsWhereInput
  none: Xray_resultsWhereInput
  some: Xray_resultsWhereInput
}

type Xray_resultsMaxAggregate {
  description: String
  id: String
  is_abnormal: Boolean
  lab_document_id: String
  result_type: xray_results_result_type_enum
  title: String
}

input Xray_resultsMaxOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  result_type: SortOrder
  title: SortOrder
}

type Xray_resultsMinAggregate {
  description: String
  id: String
  is_abnormal: Boolean
  lab_document_id: String
  result_type: xray_results_result_type_enum
  title: String
}

input Xray_resultsMinOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  result_type: SortOrder
  title: SortOrder
}

input Xray_resultsOrderByRelationAggregateInput {
  _count: SortOrder
}

input Xray_resultsOrderByWithAggregationInput {
  _count: Xray_resultsCountOrderByAggregateInput
  _max: Xray_resultsMaxOrderByAggregateInput
  _min: Xray_resultsMinOrderByAggregateInput
  description: SortOrderInput
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  result_type: SortOrder
  title: SortOrder
}

input Xray_resultsOrderByWithRelationInput {
  description: SortOrderInput
  id: SortOrder
  is_abnormal: SortOrder
  lab_document_id: SortOrder
  lab_documents: Lab_documentsOrderByWithRelationInput
  result_type: SortOrder
  title: SortOrder
}

enum Xray_resultsScalarFieldEnum {
  description
  id
  is_abnormal
  lab_document_id
  result_type
  title
}

input Xray_resultsScalarWhereInput {
  AND: [Xray_resultsScalarWhereInput!]
  NOT: [Xray_resultsScalarWhereInput!]
  OR: [Xray_resultsScalarWhereInput!]
  description: StringNullableFilter
  id: UuidFilter
  is_abnormal: BoolFilter
  lab_document_id: UuidFilter
  result_type: Enumxray_results_result_type_enumFilter
  title: StringFilter
}

input Xray_resultsScalarWhereWithAggregatesInput {
  AND: [Xray_resultsScalarWhereWithAggregatesInput!]
  NOT: [Xray_resultsScalarWhereWithAggregatesInput!]
  OR: [Xray_resultsScalarWhereWithAggregatesInput!]
  description: StringNullableWithAggregatesFilter
  id: UuidWithAggregatesFilter
  is_abnormal: BoolWithAggregatesFilter
  lab_document_id: UuidWithAggregatesFilter
  result_type: Enumxray_results_result_type_enumWithAggregatesFilter
  title: StringWithAggregatesFilter
}

input Xray_resultsUpdateInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_abnormal: BoolFieldUpdateOperationsInput
  lab_documents: Lab_documentsUpdateOneRequiredWithoutXray_resultsNestedInput
  result_type: Enumxray_results_result_type_enumFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input Xray_resultsUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_abnormal: BoolFieldUpdateOperationsInput
  result_type: Enumxray_results_result_type_enumFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input Xray_resultsUpdateManyWithWhereWithoutLab_documentsInput {
  data: Xray_resultsUpdateManyMutationInput!
  where: Xray_resultsScalarWhereInput!
}

input Xray_resultsUpdateManyWithoutLab_documentsNestedInput {
  connect: [Xray_resultsWhereUniqueInput!]
  connectOrCreate: [Xray_resultsCreateOrConnectWithoutLab_documentsInput!]
  create: [Xray_resultsCreateWithoutLab_documentsInput!]
  createMany: Xray_resultsCreateManyLab_documentsInputEnvelope
  delete: [Xray_resultsWhereUniqueInput!]
  deleteMany: [Xray_resultsScalarWhereInput!]
  disconnect: [Xray_resultsWhereUniqueInput!]
  set: [Xray_resultsWhereUniqueInput!]
  update: [Xray_resultsUpdateWithWhereUniqueWithoutLab_documentsInput!]
  updateMany: [Xray_resultsUpdateManyWithWhereWithoutLab_documentsInput!]
  upsert: [Xray_resultsUpsertWithWhereUniqueWithoutLab_documentsInput!]
}

input Xray_resultsUpdateWithWhereUniqueWithoutLab_documentsInput {
  data: Xray_resultsUpdateWithoutLab_documentsInput!
  where: Xray_resultsWhereUniqueInput!
}

input Xray_resultsUpdateWithoutLab_documentsInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  is_abnormal: BoolFieldUpdateOperationsInput
  result_type: Enumxray_results_result_type_enumFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input Xray_resultsUpsertWithWhereUniqueWithoutLab_documentsInput {
  create: Xray_resultsCreateWithoutLab_documentsInput!
  update: Xray_resultsUpdateWithoutLab_documentsInput!
  where: Xray_resultsWhereUniqueInput!
}

input Xray_resultsWhereInput {
  AND: [Xray_resultsWhereInput!]
  NOT: [Xray_resultsWhereInput!]
  OR: [Xray_resultsWhereInput!]
  description: StringNullableFilter
  id: UuidFilter
  is_abnormal: BoolFilter
  lab_document_id: UuidFilter
  lab_documents: Lab_documentsRelationFilter
  result_type: Enumxray_results_result_type_enumFilter
  title: StringFilter
}

input Xray_resultsWhereUniqueInput {
  AND: [Xray_resultsWhereInput!]
  NOT: [Xray_resultsWhereInput!]
  OR: [Xray_resultsWhereInput!]
  description: StringNullableFilter
  id: String
  is_abnormal: BoolFilter
  lab_document_id: UuidFilter
  lab_documents: Lab_documentsRelationFilter
  result_type: Enumxray_results_result_type_enumFilter
  title: StringFilter
}

enum analysis_results_result_type_enum {
  ABNORMAL
  CRITICAL
  NORMAL
}

enum authorizations_level_enum {
  ADMIN
  READ
  WRITE
}

enum cliniques_type_enum {
  PRIVATE
  PUBLIC
}

enum ctscan_results_result_type_enum {
  ABNORMAL
  CRITICAL
  NORMAL
}

enum doctors_specialty_enum {
  CARDIOLOGIST
  DERMATOLOGIST
  ENDOCRINOLOGIST
  GASTROENTEROLOGIST
  GENERAL_PRACTITIONER
  GYNECOLOGIST
  HEMATOLOGIST
  INFECTIOUS_DISEASE
  INTERNIST
  NEPHROLOGIST
  NEUROLOGIST
  OBSTETRICIAN
  ONCOLOGIST
  OPHTHALMOLOGIST
  ORTHOPEDIST
  OTOLARYNGOLOGIST
  PEDIATRICIAN
  PSYCHIATRIST
  PULMONOLOGIST
  RHEUMATOLOGIST
  UROLOGIST
}

enum doctors_type_enum {
  GENERAL_PRACTITIONER
  SPECIALIST
  SURGEON
}

enum hopitaux_type_enum {
  PRIVATE
  PUBLIC
}

enum instituts_medicaux_type_enum {
  CLINIC
  HOSPITAL
  LABORATORY
}

enum lab_documents_status_enum {
  CANCELLED
  COMPLETED
  IN_PROGRESS
  PENDING
}

enum lab_requests_priority_enum {
  HIGH
  LOW
  MEDIUM
  URGENT
}

enum lab_results_result_type_enum {
  ABNORMAL
  CRITICAL
  NORMAL
}

enum patients_gender_enum {
  FEMALE
  MALE
  OTHER
}

enum prescriptions_status_enum {
  ACTIVE
  CANCELLED
  COMPLETED
}

enum users_role_enum {
  ADMIN
  CLINIC
  DOCTOR
  HOSPITAL
  LABORATORY
  PATIENT
}

enum xray_results_result_type_enum {
  ABNORMAL
  CRITICAL
  NORMAL
}